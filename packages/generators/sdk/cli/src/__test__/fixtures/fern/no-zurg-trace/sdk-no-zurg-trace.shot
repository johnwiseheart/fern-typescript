// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runGenerator no-zurg-trace 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "name: ci

on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn build
  
  publish:
    needs: [ compile ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}
          npm publish --access public
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}",
            "name": "ci.yml",
            "type": "file",
          },
        ],
        "name": "workflows",
        "type": "directory",
      },
    ],
    "name": ".github",
    "type": "directory",
  },
  Object {
    "contents": "node_modules
.DS_Store
/dist
/Client.d.ts
/Client.js
/environments.d.ts
/environments.js
/index.d.ts
/index.js
/api
/core
/errors",
    "name": ".gitignore",
    "type": "file",
  },
  Object {
    "contents": "node_modules
src
.gitignore
.github
.fernignore
.prettierrc.yml
tsconfig.json
yarn.lock",
    "name": ".npmignore",
    "type": "file",
  },
  Object {
    "contents": "tabWidth: 4
printWidth: 120
",
    "name": ".prettierrc.yml",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"./environments\\";
import * as core from \\"./core\\";
import { Admin } from \\"./api/resources/admin/client/Client\\";
import { Homepage } from \\"./api/resources/homepage/client/Client\\";
import { Migration } from \\"./api/resources/migration/client/Client\\";
import { Playlist } from \\"./api/resources/playlist/client/Client\\";
import { Problem } from \\"./api/resources/problem/client/Client\\";
import { Submission } from \\"./api/resources/submission/client/Client\\";
import { Sysprop } from \\"./api/resources/sysprop/client/Client\\";
import { V2 } from \\"./api/resources/v2/client/Client\\";
export declare namespace FernApiClient {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class FernApiClient {
    protected readonly _options: FernApiClient.Options;
    constructor(_options: FernApiClient.Options);
    protected _admin: Admin | undefined;
    get admin(): Admin;
    protected _homepage: Homepage | undefined;
    get homepage(): Homepage;
    protected _migration: Migration | undefined;
    get migration(): Migration;
    protected _playlist: Playlist | undefined;
    get playlist(): Playlist;
    protected _problem: Problem | undefined;
    get problem(): Problem;
    protected _submission: Submission | undefined;
    get submission(): Submission;
    protected _sysprop: Sysprop | undefined;
    get sysprop(): Sysprop;
    protected _v2: V2 | undefined;
    get v2(): V2;
}
",
        "name": "Client.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiClient = void 0;
const Client_1 = require(\\"./api/resources/admin/client/Client\\");
const Client_2 = require(\\"./api/resources/homepage/client/Client\\");
const Client_3 = require(\\"./api/resources/migration/client/Client\\");
const Client_4 = require(\\"./api/resources/playlist/client/Client\\");
const Client_5 = require(\\"./api/resources/problem/client/Client\\");
const Client_6 = require(\\"./api/resources/submission/client/Client\\");
const Client_7 = require(\\"./api/resources/sysprop/client/Client\\");
const Client_8 = require(\\"./api/resources/v2/client/Client\\");
class FernApiClient {
    constructor(_options) {
        this._options = _options;
    }
    get admin() {
        var _a;
        return ((_a = this._admin) !== null && _a !== void 0 ? _a : (this._admin = new Client_1.Admin(this._options)));
    }
    get homepage() {
        var _a;
        return ((_a = this._homepage) !== null && _a !== void 0 ? _a : (this._homepage = new Client_2.Homepage(this._options)));
    }
    get migration() {
        var _a;
        return ((_a = this._migration) !== null && _a !== void 0 ? _a : (this._migration = new Client_3.Migration(this._options)));
    }
    get playlist() {
        var _a;
        return ((_a = this._playlist) !== null && _a !== void 0 ? _a : (this._playlist = new Client_4.Playlist(this._options)));
    }
    get problem() {
        var _a;
        return ((_a = this._problem) !== null && _a !== void 0 ? _a : (this._problem = new Client_5.Problem(this._options)));
    }
    get submission() {
        var _a;
        return ((_a = this._submission) !== null && _a !== void 0 ? _a : (this._submission = new Client_6.Submission(this._options)));
    }
    get sysprop() {
        var _a;
        return ((_a = this._sysprop) !== null && _a !== void 0 ? _a : (this._sysprop = new Client_7.Sysprop(this._options)));
    }
    get v2() {
        var _a;
        return ((_a = this._v2) !== null && _a !== void 0 ? _a : (this._v2 = new Client_8.V2(this._options)));
    }
}
exports.FernApiClient = FernApiClient;
",
        "name": "Client.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Admin {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Admin {
    protected readonly _options: Admin.Options;
    constructor(_options: Admin.Options);
    updateTestSubmissionStatus(submissionId: FernApi.SubmissionId, request: FernApi.TestSubmissionStatus, requestOptions?: Admin.RequestOptions): Promise<void>;
    sendTestSubmissionUpdate(submissionId: FernApi.SubmissionId, request: FernApi.TestSubmissionUpdate, requestOptions?: Admin.RequestOptions): Promise<void>;
    updateWorkspaceSubmissionStatus(submissionId: FernApi.SubmissionId, request: FernApi.WorkspaceSubmissionStatus, requestOptions?: Admin.RequestOptions): Promise<void>;
    sendWorkspaceSubmissionUpdate(submissionId: FernApi.SubmissionId, request: FernApi.WorkspaceSubmissionUpdate, requestOptions?: Admin.RequestOptions): Promise<void>;
    storeTracedTestCase(submissionId: FernApi.SubmissionId, testCaseId: string, request: FernApi.StoreTracedTestCaseRequest, requestOptions?: Admin.RequestOptions): Promise<void>;
    storeTracedTestCaseV2(submissionId: FernApi.SubmissionId, testCaseId: FernApi.v2.TestCaseId, request: FernApi.TraceResponseV2[], requestOptions?: Admin.RequestOptions): Promise<void>;
    storeTracedWorkspace(submissionId: FernApi.SubmissionId, request: FernApi.StoreTracedWorkspaceRequest, requestOptions?: Admin.RequestOptions): Promise<void>;
    storeTracedWorkspaceV2(submissionId: FernApi.SubmissionId, request: FernApi.TraceResponseV2[], requestOptions?: Admin.RequestOptions): Promise<void>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === \\"function\\")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Admin = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
const url_search_params_1 = __importDefault(require(\\"@ungap/url-search-params\\"));
class Admin {
    constructor(_options) {
        this._options = _options;
    }
    updateTestSubmissionStatus(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-test-submission-status/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    sendTestSubmissionUpdate(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-test-submission-status-v2/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    updateWorkspaceSubmissionStatus(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-workspace-submission-status/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    sendWorkspaceSubmissionUpdate(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-workspace-submission-status-v2/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    storeTracedTestCase(submissionId, testCaseId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const { someQueryParam, referenceToOptionalString } = request, _body = __rest(request, [\\"someQueryParam\\", \\"referenceToOptionalString\\"]);
            const _queryParams = new url_search_params_1.default();
            if (someQueryParam != null) {
                _queryParams.append(\\"some-query-param\\", someQueryParam);
            }
            if (referenceToOptionalString != null) {
                _queryParams.append(\\"reference-to-optional-string\\", referenceToOptionalString);
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-test-trace/submission/\${submissionId}/testCase/\${testCaseId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                queryParameters: _queryParams,
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    storeTracedTestCaseV2(submissionId, testCaseId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-test-trace-v2/submission/\${submissionId}/testCase/\${testCaseId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    storeTracedWorkspace(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-workspace-trace/submission/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    storeTracedWorkspaceV2(submissionId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/admin/store-workspace-trace-v2/submission/\${submissionId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Admin = Admin;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../..\\";
export interface StoreTracedTestCaseRequest {
    someQueryParam?: string;
    referenceToOptionalString?: FernApi.OptionalString;
    result: FernApi.TestCaseResultWithStdout;
    traceResponses: FernApi.TraceResponse[];
}
",
                            "name": "StoreTracedTestCaseRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "StoreTracedTestCaseRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../..\\";
export interface StoreTracedWorkspaceRequest {
    workspaceRunDetails: FernApi.WorkspaceRunDetails;
    traceResponses: FernApi.TraceResponse[];
}
",
                            "name": "StoreTracedWorkspaceRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "StoreTracedWorkspaceRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { StoreTracedTestCaseRequest } from \\"./StoreTracedTestCaseRequest\\";
export { StoreTracedWorkspaceRequest } from \\"./StoreTracedWorkspaceRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type OptionalString = string | undefined;
",
                        "name": "OptionalString.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "OptionalString.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OptionalString\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./OptionalString\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "admin",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BinaryTreeNodeAndTreeValue {
    nodeId: FernApi.NodeId;
    fullTree: FernApi.BinaryTreeValue;
}
",
                        "name": "BinaryTreeNodeAndTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeNodeAndTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BinaryTreeNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    right?: FernApi.NodeId;
    left?: FernApi.NodeId;
}
",
                        "name": "BinaryTreeNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BinaryTreeValue {
    root?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.BinaryTreeNodeValue>;
}
",
                        "name": "BinaryTreeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BinaryTreeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)
 */
export declare type Date_ = string;
",
                        "name": "Date_.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Date_.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DebugKeyValuePairs {
    key: FernApi.DebugVariableValue;
    value: FernApi.DebugVariableValue;
}
",
                        "name": "DebugKeyValuePairs.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DebugKeyValuePairs.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DebugMapValue {
    keyValuePairs: FernApi.DebugKeyValuePairs[];
}
",
                        "name": "DebugMapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DebugMapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type DebugVariableValue = FernApi.DebugVariableValue.IntegerValue | FernApi.DebugVariableValue.BooleanValue | FernApi.DebugVariableValue.DoubleValue | FernApi.DebugVariableValue.StringValue | FernApi.DebugVariableValue.CharValue | FernApi.DebugVariableValue.MapValue | FernApi.DebugVariableValue.ListValue | FernApi.DebugVariableValue.BinaryTreeNodeValue | FernApi.DebugVariableValue.SinglyLinkedListNodeValue | FernApi.DebugVariableValue.DoublyLinkedListNodeValue | FernApi.DebugVariableValue.UndefinedValue | FernApi.DebugVariableValue.NullValue | FernApi.DebugVariableValue.GenericValue;
export declare namespace DebugVariableValue {
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends FernApi.DebugMapValue {
        type: \\"mapValue\\";
    }
    interface ListValue {
        type: \\"listValue\\";
        value: FernApi.DebugVariableValue[];
    }
    interface BinaryTreeNodeValue extends FernApi.BinaryTreeNodeAndTreeValue {
        type: \\"binaryTreeNodeValue\\";
    }
    interface SinglyLinkedListNodeValue extends FernApi.SinglyLinkedListNodeAndListValue {
        type: \\"singlyLinkedListNodeValue\\";
    }
    interface DoublyLinkedListNodeValue extends FernApi.DoublyLinkedListNodeAndListValue {
        type: \\"doublyLinkedListNodeValue\\";
    }
    interface UndefinedValue {
        type: \\"undefinedValue\\";
    }
    interface NullValue {
        type: \\"nullValue\\";
    }
    interface GenericValue extends FernApi.GenericValue {
        type: \\"genericValue\\";
    }
}
",
                        "name": "DebugVariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DebugVariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DoublyLinkedListNodeAndListValue {
    nodeId: FernApi.NodeId;
    fullList: FernApi.DoublyLinkedListValue;
}
",
                        "name": "DoublyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DoublyLinkedListNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    next?: FernApi.NodeId;
    prev?: FernApi.NodeId;
}
",
                        "name": "DoublyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface DoublyLinkedListValue {
    head?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.DoublyLinkedListNodeValue>;
}
",
                        "name": "DoublyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DoublyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfo {
    filename: string;
    contents: string;
}
",
                        "name": "FileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GenericValue {
    stringifiedType?: string;
    stringifiedValue: string;
}
",
                        "name": "GenericValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GenericValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface KeyValuePair {
    key: FernApi.VariableValue;
    value: FernApi.VariableValue;
}
",
                        "name": "KeyValuePair.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "KeyValuePair.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * @example
 *     FernApi.Language.Java
 */
export declare type Language = \\"JAVA\\" | \\"JAVASCRIPT\\" | \\"PYTHON\\";
export declare const Language: {
    readonly Java: \\"JAVA\\";
    readonly Javascript: \\"JAVASCRIPT\\";
    readonly Python: \\"PYTHON\\";
};
",
                        "name": "Language.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Language = void 0;
exports.Language = {
    Java: \\"JAVA\\",
    Javascript: \\"JAVASCRIPT\\",
    Python: \\"PYTHON\\",
};
",
                        "name": "Language.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ListType {
    valueType: FernApi.VariableType;
    /** Whether this list is fixed-size (for languages that supports fixed-size lists). Defaults to false. */
    isFixedLength?: boolean;
}
",
                        "name": "ListType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ListType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MapType {
    keyType: FernApi.VariableType;
    valueType: FernApi.VariableType;
}
",
                        "name": "MapType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface MapValue {
    keyValuePairs: FernApi.KeyValuePair[];
}
",
                        "name": "MapValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type NodeId = string;
",
                        "name": "NodeId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "NodeId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ProblemId = string;
",
                        "name": "ProblemId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * @example
 *     {
 *         \\"foo\\": \\"hello\\",
 *         \\"bar\\": {
 *             \\"yo\\": 123
 *         }
 *     }
 */
export declare type RandomUnknownType = unknown;
",
                        "name": "RandomUnknownType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RandomUnknownType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SinglyLinkedListNodeAndListValue {
    nodeId: FernApi.NodeId;
    fullList: FernApi.SinglyLinkedListValue;
}
",
                        "name": "SinglyLinkedListNodeAndListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListNodeAndListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SinglyLinkedListNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    next?: FernApi.NodeId;
}
",
                        "name": "SinglyLinkedListNodeValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListNodeValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SinglyLinkedListValue {
    head?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.SinglyLinkedListNodeValue>;
}
",
                        "name": "SinglyLinkedListValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SinglyLinkedListValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestCase {
    id: string;
    params: FernApi.VariableValue[];
}
",
                        "name": "TestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestCaseWithExpectedResult {
    testCase: FernApi.TestCase;
    expectedResult: FernApi.VariableValue;
}
",
                        "name": "TestCaseWithExpectedResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseWithExpectedResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * @example
 *     \\"user12345\\"
 */
export declare type UserId = string;
",
                        "name": "UserId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UserId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type VariableType = FernApi.VariableType.MemberWithColon | FernApi.VariableType.IntegerType | FernApi.VariableType.DoubleType | FernApi.VariableType.BooleanType | FernApi.VariableType.StringType | FernApi.VariableType.CharType | FernApi.VariableType.ListType | FernApi.VariableType.MapType | FernApi.VariableType.BinaryTreeType | FernApi.VariableType.SinglyLinkedListType | FernApi.VariableType.DoublyLinkedListType;
export declare namespace VariableType {
    interface MemberWithColon {
        type: \\"member:with:colon\\";
    }
    interface IntegerType {
        type: \\"integerType\\";
    }
    interface DoubleType {
        type: \\"doubleType\\";
    }
    interface BooleanType {
        type: \\"booleanType\\";
    }
    interface StringType {
        type: \\"stringType\\";
    }
    interface CharType {
        type: \\"charType\\";
    }
    interface ListType extends FernApi.ListType {
        type: \\"listType\\";
    }
    interface MapType extends FernApi.MapType {
        type: \\"mapType\\";
    }
    interface BinaryTreeType {
        type: \\"binaryTreeType\\";
    }
    interface SinglyLinkedListType {
        type: \\"singlyLinkedListType\\";
    }
    interface DoublyLinkedListType {
        type: \\"doublyLinkedListType\\";
    }
}
",
                        "name": "VariableType.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableType.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type VariableValue = FernApi.VariableValue.IntegerValue | FernApi.VariableValue.BooleanValue | FernApi.VariableValue.DoubleValue | FernApi.VariableValue.StringValue | FernApi.VariableValue.CharValue | FernApi.VariableValue.MapValue | FernApi.VariableValue.ListValue | FernApi.VariableValue.BinaryTreeValue | FernApi.VariableValue.SinglyLinkedListValue | FernApi.VariableValue.DoublyLinkedListValue | FernApi.VariableValue.NullValue;
export declare namespace VariableValue {
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }
    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }
    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }
    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }
    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }
    interface MapValue extends FernApi.MapValue {
        type: \\"mapValue\\";
    }
    interface ListValue {
        type: \\"listValue\\";
        value: FernApi.VariableValue[];
    }
    interface BinaryTreeValue extends FernApi.BinaryTreeValue {
        type: \\"binaryTreeValue\\";
    }
    interface SinglyLinkedListValue extends FernApi.SinglyLinkedListValue {
        type: \\"singlyLinkedListValue\\";
    }
    interface DoublyLinkedListValue extends FernApi.DoublyLinkedListValue {
        type: \\"doublyLinkedListValue\\";
    }
    interface NullValue {
        type: \\"nullValue\\";
    }
}
",
                        "name": "VariableValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./UserId\\";
export * from \\"./ProblemId\\";
export * from \\"./NodeId\\";
export * from \\"./VariableType\\";
export * from \\"./ListType\\";
export * from \\"./MapType\\";
export * from \\"./VariableValue\\";
export * from \\"./DebugVariableValue\\";
export * from \\"./GenericValue\\";
export * from \\"./MapValue\\";
export * from \\"./KeyValuePair\\";
export * from \\"./BinaryTreeValue\\";
export * from \\"./BinaryTreeNodeValue\\";
export * from \\"./BinaryTreeNodeAndTreeValue\\";
export * from \\"./SinglyLinkedListValue\\";
export * from \\"./SinglyLinkedListNodeValue\\";
export * from \\"./SinglyLinkedListNodeAndListValue\\";
export * from \\"./DoublyLinkedListValue\\";
export * from \\"./DoublyLinkedListNodeValue\\";
export * from \\"./DoublyLinkedListNodeAndListValue\\";
export * from \\"./DebugMapValue\\";
export * from \\"./DebugKeyValuePairs\\";
export * from \\"./TestCase\\";
export * from \\"./TestCaseWithExpectedResult\\";
export * from \\"./FileInfo\\";
export * from \\"./Language\\";
export * from \\"./RandomUnknownType\\";
export * from \\"./Date_\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./UserId\\"), exports);
__exportStar(require(\\"./ProblemId\\"), exports);
__exportStar(require(\\"./NodeId\\"), exports);
__exportStar(require(\\"./VariableType\\"), exports);
__exportStar(require(\\"./ListType\\"), exports);
__exportStar(require(\\"./MapType\\"), exports);
__exportStar(require(\\"./VariableValue\\"), exports);
__exportStar(require(\\"./DebugVariableValue\\"), exports);
__exportStar(require(\\"./GenericValue\\"), exports);
__exportStar(require(\\"./MapValue\\"), exports);
__exportStar(require(\\"./KeyValuePair\\"), exports);
__exportStar(require(\\"./BinaryTreeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeValue\\"), exports);
__exportStar(require(\\"./BinaryTreeNodeAndTreeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./SinglyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeValue\\"), exports);
__exportStar(require(\\"./DoublyLinkedListNodeAndListValue\\"), exports);
__exportStar(require(\\"./DebugMapValue\\"), exports);
__exportStar(require(\\"./DebugKeyValuePairs\\"), exports);
__exportStar(require(\\"./TestCase\\"), exports);
__exportStar(require(\\"./TestCaseWithExpectedResult\\"), exports);
__exportStar(require(\\"./FileInfo\\"), exports);
__exportStar(require(\\"./Language\\"), exports);
__exportStar(require(\\"./RandomUnknownType\\"), exports);
__exportStar(require(\\"./Date_\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Homepage {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Homepage {
    protected readonly _options: Homepage.Options;
    constructor(_options: Homepage.Options);
    getHomepageProblems(requestOptions?: Homepage.RequestOptions): Promise<FernApi.ProblemId[]>;
    setHomepageProblems(request: FernApi.ProblemId[], requestOptions?: Homepage.RequestOptions): Promise<void>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Homepage = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Homepage {
    constructor(_options) {
        this._options = _options;
    }
    getHomepageProblems(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/homepage-problems\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    setHomepageProblems(request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/homepage-problems\\"),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Homepage = Homepage;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "homepage",
                "type": "directory",
              },
              Object {
                "contents": "export * as admin from \\"./admin\\";
export * from \\"./admin/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as langServer from \\"./langServer\\";
export * from \\"./langServer/types\\";
export * as migration from \\"./migration\\";
export * from \\"./migration/types\\";
export * as playlist from \\"./playlist\\";
export * from \\"./playlist/types\\";
export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as submission from \\"./submission\\";
export * from \\"./submission/types\\";
export * as v2 from \\"./v2\\";
export * from \\"./playlist/errors\\";
export * as homepage from \\"./homepage\\";
export * as sysprop from \\"./sysprop\\";
export * from \\"./admin/client/requests\\";
export * from \\"./playlist/client/requests\\";
export * from \\"./problem/client/requests\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.sysprop = exports.homepage = exports.v2 = exports.submission = exports.problem = exports.playlist = exports.migration = exports.langServer = exports.commons = exports.admin = void 0;
exports.admin = __importStar(require(\\"./admin\\"));
__exportStar(require(\\"./admin/types\\"), exports);
exports.commons = __importStar(require(\\"./commons\\"));
__exportStar(require(\\"./commons/types\\"), exports);
exports.langServer = __importStar(require(\\"./langServer\\"));
__exportStar(require(\\"./langServer/types\\"), exports);
exports.migration = __importStar(require(\\"./migration\\"));
__exportStar(require(\\"./migration/types\\"), exports);
exports.playlist = __importStar(require(\\"./playlist\\"));
__exportStar(require(\\"./playlist/types\\"), exports);
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.submission = __importStar(require(\\"./submission\\"));
__exportStar(require(\\"./submission/types\\"), exports);
exports.v2 = __importStar(require(\\"./v2\\"));
__exportStar(require(\\"./playlist/errors\\"), exports);
exports.homepage = __importStar(require(\\"./homepage\\"));
exports.sysprop = __importStar(require(\\"./sysprop\\"));
__exportStar(require(\\"./admin/client/requests\\"), exports);
__exportStar(require(\\"./playlist/client/requests\\"), exports);
__exportStar(require(\\"./problem/client/requests\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LangServerRequest {
    request?: unknown;
}
",
                        "name": "LangServerRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LangServerRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LangServerResponse {
    response?: unknown;
}
",
                        "name": "LangServerResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LangServerResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./LangServerRequest\\";
export * from \\"./LangServerResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./LangServerRequest\\"), exports);
__exportStar(require(\\"./LangServerResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "langServer",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Migration {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Migration {
    protected readonly _options: Migration.Options;
    constructor(_options: Migration.Options);
    getAttemptedMigrations(serviceParam: string, requestOptions?: Migration.RequestOptions): Promise<FernApi.Migration[]>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Migration = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Migration {
    constructor(_options) {
        this._options = _options;
    }
    getAttemptedMigrations(serviceParam, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/migration-info/\${serviceParam}/tail/all\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Migration = Migration;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Migration {
    name: string;
    status: FernApi.MigrationStatus;
}
",
                        "name": "Migration.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Migration.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type MigrationStatus = \\"RUNNING\\" | \\"FAILED\\" | \\"FINISHED\\";
export declare const MigrationStatus: {
    readonly Running: \\"RUNNING\\";
    readonly Failed: \\"FAILED\\";
    readonly Finished: \\"FINISHED\\";
};
",
                        "name": "MigrationStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.MigrationStatus = void 0;
exports.MigrationStatus = {
    Running: \\"RUNNING\\",
    Failed: \\"FAILED\\",
    Finished: \\"FINISHED\\",
};
",
                        "name": "MigrationStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./MigrationStatus\\";
export * from \\"./Migration\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./MigrationStatus\\"), exports);
__exportStar(require(\\"./Migration\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "migration",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Playlist {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Playlist {
    protected readonly _options: Playlist.Options;
    constructor(_options: Playlist.Options);
    /**
     * Create a new playlist
     */
    createPlaylist(serviceParam: number, request: FernApi.PlaylistCreateRequestWrapper, requestOptions?: Playlist.RequestOptions): Promise<FernApi.Playlist>;
    /**
     * Returns the user's playlists
     */
    getPlaylists(serviceParam: number, request: FernApi.GetPlaylistsRequest, requestOptions?: Playlist.RequestOptions): Promise<FernApi.Playlist[]>;
    /**
     * Returns a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     * @throws {@link FernApi.UnauthorizedError}
     */
    getPlaylist(serviceParam: number, playlistId: FernApi.PlaylistId, request?: FernApi.GetPlaylistRequest, requestOptions?: Playlist.RequestOptions): Promise<FernApi.Playlist>;
    /**
     * Updates a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     */
    updatePlaylist(serviceParam: number, playlistId: FernApi.PlaylistId, request?: FernApi.UpdatePlaylistRequest, requestOptions?: Playlist.RequestOptions): Promise<FernApi.Playlist | undefined>;
    /**
     * Deletes a playlist
     */
    deletePlaylist(serviceParam: number, playlistId: FernApi.PlaylistId, requestOptions?: Playlist.RequestOptions): Promise<void>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Playlist = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const FernApi = __importStar(require(\\"../../..\\"));
const url_search_params_1 = __importDefault(require(\\"@ungap/url-search-params\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Playlist {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * Create a new playlist
     */
    createPlaylist(serviceParam, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const { multiple, multipleOptional, aliasQueryParam, body: _body } = request;
            const _queryParams = new url_search_params_1.default();
            if (Array.isArray(multiple)) {
                for (const _item of multiple) {
                    _queryParams.append(\\"multiple\\", _item.toString());
                }
            }
            else {
                _queryParams.append(\\"multiple\\", multiple.toString());
            }
            if (multipleOptional != null) {
                if (Array.isArray(multipleOptional)) {
                    for (const _item of multipleOptional) {
                        _queryParams.append(\\"multipleOptional\\", _item.toString());
                    }
                }
                else {
                    _queryParams.append(\\"multipleOptional\\", multipleOptional.toString());
                }
            }
            _queryParams.append(\\"aliasQueryParam\\", aliasQueryParam.toString());
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/create\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                queryParameters: _queryParams,
                body: _body,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns the user's playlists
     */
    getPlaylists(serviceParam, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const { limit, otherField } = request;
            const _queryParams = new url_search_params_1.default();
            if (limit != null) {
                _queryParams.append(\\"limit\\", limit.toString());
            }
            _queryParams.append(\\"otherField\\", otherField);
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/all\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                queryParameters: _queryParams,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     * @throws {@link FernApi.UnauthorizedError}
     */
    getPlaylist(serviceParam, playlistId, request = {}, requestOptions) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const { optionalQueryParam } = request;
            const _queryParams = new url_search_params_1.default();
            if (optionalQueryParam != null) {
                _queryParams.append(\\"optionalQueryParam\\", optionalQueryParam.toString());
            }
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${playlistId}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                queryParameters: _queryParams,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                switch ((_b = _response.error.body) === null || _b === void 0 ? void 0 : _b[\\"errorName\\"]) {
                    case \\"PlaylistIdNotFoundError\\":
                        throw new FernApi.PlaylistIdNotFoundError(_response.error.body);
                    case \\"UnauthorizedError\\":
                        throw new FernApi.UnauthorizedError();
                    default:
                        throw new errors.FernApiError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body,
                        });
                }
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Updates a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     */
    updatePlaylist(serviceParam, playlistId, request, requestOptions) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${playlistId}\`),
                method: \\"PUT\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request != null ? request : undefined,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                switch ((_b = _response.error.body) === null || _b === void 0 ? void 0 : _b[\\"errorName\\"]) {
                    case \\"PlaylistIdNotFoundError\\":
                        throw new FernApi.PlaylistIdNotFoundError(_response.error.body);
                    default:
                        throw new errors.FernApiError({
                            statusCode: _response.error.statusCode,
                            body: _response.error.body,
                        });
                }
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Deletes a playlist
     */
    deletePlaylist(serviceParam, playlistId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/v2/playlist/\${serviceParam}/\${playlistId}\`),
                method: \\"DELETE\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Playlist = Playlist;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetPlaylistRequest {
    optionalQueryParam?: number;
}
",
                            "name": "GetPlaylistRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetPlaylistRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetPlaylistsRequest {
    limit?: number;
    otherField: string;
}
",
                            "name": "GetPlaylistsRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetPlaylistsRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../..\\";
export interface PlaylistCreateRequestWrapper {
    multiple: number | number[];
    multipleOptional?: boolean | boolean[];
    aliasQueryParam: FernApi.PlaylistId;
    body: FernApi.PlaylistCreateRequest;
}
",
                            "name": "PlaylistCreateRequestWrapper.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "PlaylistCreateRequestWrapper.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { PlaylistCreateRequestWrapper } from \\"./PlaylistCreateRequestWrapper\\";
export { GetPlaylistsRequest } from \\"./GetPlaylistsRequest\\";
export { GetPlaylistRequest } from \\"./GetPlaylistRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as errors from \\"../../../../errors\\";
import * as FernApi from \\"../../..\\";
export declare class PlaylistIdNotFoundError extends errors.FernApiError {
    constructor(body: FernApi.PlaylistIdNotFoundErrorBody);
}
",
                        "name": "PlaylistIdNotFoundError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.PlaylistIdNotFoundError = void 0;
const errors = __importStar(require(\\"../../../../errors\\"));
class PlaylistIdNotFoundError extends errors.FernApiError {
    constructor(body) {
        super({
            statusCode: 404,
            body: body,
        });
        Object.setPrototypeOf(this, PlaylistIdNotFoundError.prototype);
    }
}
exports.PlaylistIdNotFoundError = PlaylistIdNotFoundError;
",
                        "name": "PlaylistIdNotFoundError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as errors from \\"../../../../errors\\";
export declare class StringError extends errors.FernApiError {
    constructor(body: string);
}
",
                        "name": "StringError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.StringError = void 0;
const errors = __importStar(require(\\"../../../../errors\\"));
class StringError extends errors.FernApiError {
    constructor(body) {
        super({
            statusCode: 401,
            body: body,
        });
        Object.setPrototypeOf(this, StringError.prototype);
    }
}
exports.StringError = StringError;
",
                        "name": "StringError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as errors from \\"../../../../errors\\";
export declare class UnauthorizedError extends errors.FernApiError {
    constructor();
}
",
                        "name": "UnauthorizedError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UnauthorizedError = void 0;
const errors = __importStar(require(\\"../../../../errors\\"));
class UnauthorizedError extends errors.FernApiError {
    constructor() {
        super({
            statusCode: 401,
        });
        Object.setPrototypeOf(this, UnauthorizedError.prototype);
    }
}
exports.UnauthorizedError = UnauthorizedError;
",
                        "name": "UnauthorizedError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as errors from \\"../../../../errors\\";
export declare class UnknownError extends errors.FernApiError {
    constructor(body?: unknown);
}
",
                        "name": "UnknownError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.UnknownError = void 0;
const errors = __importStar(require(\\"../../../../errors\\"));
class UnknownError extends errors.FernApiError {
    constructor(body) {
        super({
            statusCode: 401,
            body: body,
        });
        Object.setPrototypeOf(this, UnknownError.prototype);
    }
}
exports.UnknownError = UnknownError;
",
                        "name": "UnknownError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistIdNotFoundError\\";
export * from \\"./UnauthorizedError\\";
export * from \\"./UnknownError\\";
export * from \\"./StringError\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./PlaylistIdNotFoundError\\"), exports);
__exportStar(require(\\"./UnauthorizedError\\"), exports);
__exportStar(require(\\"./UnknownError\\"), exports);
__exportStar(require(\\"./StringError\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./errors\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type Color = \\"RED\\" | \\"BLUE\\";
export declare const Color: {
    readonly Red: \\"RED\\";
    readonly Blue: \\"BLUE\\";
};
",
                        "name": "Color.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Color = void 0;
exports.Color = {
    Red: \\"RED\\",
    Blue: \\"BLUE\\",
};
",
                        "name": "Color.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type DateUnion = FernApi.DateUnion.Date_ | FernApi.DateUnion.Datetime;
export declare namespace DateUnion {
    interface Date_ {
        type: \\"date\\";
        value: FernApi.Date_;
    }
    interface Datetime {
        type: \\"datetime\\";
        value: string;
    }
}
",
                        "name": "DateUnion.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "DateUnion.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * @example
 *     {
 *         [FernApi.Color.Red]: true
 *     }
 */
export declare type MapWithEnumKey = Record<FernApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKey.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapWithEnumKey.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * @example
 *     {
 *         [FernApi.Color.Red]: true
 *     }
 */
export declare type MapWithEnumKeyAndOptionalValue = Record<FernApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKeyAndOptionalValue.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MapWithEnumKeyAndOptionalValue.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface MyObject {
    foo: string;
}
",
                        "name": "MyObject.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "MyObject.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ObjectAlias = FernApi.MyObject;
",
                        "name": "ObjectAlias.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ObjectAlias.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Playlist extends FernApi.PlaylistCreateRequest {
    playlist_id: FernApi.PlaylistId;
    \\"owner-id\\": FernApi.UserId;
}
",
                        "name": "Playlist.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Playlist.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface PlaylistCreateRequest {
    name: string;
    problems: FernApi.ProblemId[];
    literal: \\"hello world\\";
}
",
                        "name": "PlaylistCreateRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistCreateRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PlaylistId = number;
",
                        "name": "PlaylistId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type PlaylistIdNotFoundErrorBody = FernApi.PlaylistIdNotFoundErrorBody.PlaylistId;
export declare namespace PlaylistIdNotFoundErrorBody {
    interface PlaylistId {
        type: \\"playlistId\\";
        value: FernApi.PlaylistId;
    }
}
",
                        "name": "PlaylistIdNotFoundErrorBody.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistIdNotFoundErrorBody.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type PlaylistUuid = string;
",
                        "name": "PlaylistUuid.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "PlaylistUuid.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ReservedKeywordEnum = \\"is\\" | \\"as\\" | \\"date\\";
export declare const ReservedKeywordEnum: {
    readonly Is: \\"is\\";
    readonly As: \\"as\\";
    readonly Date: \\"date\\";
};
",
                        "name": "ReservedKeywordEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ReservedKeywordEnum = void 0;
exports.ReservedKeywordEnum = {
    Is: \\"is\\",
    As: \\"as\\",
    Date: \\"date\\",
};
",
                        "name": "ReservedKeywordEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface UpdatePlaylistRequest {
    name: string;
    problems: FernApi.ProblemId[];
}
",
                        "name": "UpdatePlaylistRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UpdatePlaylistRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistId\\";
export * from \\"./PlaylistUuid\\";
export * from \\"./Playlist\\";
export * from \\"./PlaylistCreateRequest\\";
export * from \\"./UpdatePlaylistRequest\\";
export * from \\"./PlaylistIdNotFoundErrorBody\\";
export * from \\"./DateUnion\\";
export * from \\"./ReservedKeywordEnum\\";
export * from \\"./MapWithEnumKey\\";
export * from \\"./MapWithEnumKeyAndOptionalValue\\";
export * from \\"./Color\\";
export * from \\"./ObjectAlias\\";
export * from \\"./MyObject\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./PlaylistId\\"), exports);
__exportStar(require(\\"./PlaylistUuid\\"), exports);
__exportStar(require(\\"./Playlist\\"), exports);
__exportStar(require(\\"./PlaylistCreateRequest\\"), exports);
__exportStar(require(\\"./UpdatePlaylistRequest\\"), exports);
__exportStar(require(\\"./PlaylistIdNotFoundErrorBody\\"), exports);
__exportStar(require(\\"./DateUnion\\"), exports);
__exportStar(require(\\"./ReservedKeywordEnum\\"), exports);
__exportStar(require(\\"./MapWithEnumKey\\"), exports);
__exportStar(require(\\"./MapWithEnumKeyAndOptionalValue\\"), exports);
__exportStar(require(\\"./Color\\"), exports);
__exportStar(require(\\"./ObjectAlias\\"), exports);
__exportStar(require(\\"./MyObject\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "playlist",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Problem {
    protected readonly _options: Problem.Options;
    constructor(_options: Problem.Options);
    /**
     * Creates a problem
     */
    createProblem(request: FernApi.CreateProblemRequest, requestOptions?: Problem.RequestOptions): Promise<FernApi.CreateProblemResponse>;
    /**
     * Updates a problem
     */
    updateProblem(problemId: FernApi.ProblemId, request: FernApi.CreateProblemRequest, requestOptions?: Problem.RequestOptions): Promise<FernApi.UpdateProblemResponse>;
    /**
     * Soft deletes a problem
     */
    deleteProblem(problemId: FernApi.ProblemId, requestOptions?: Problem.RequestOptions): Promise<void>;
    /**
     * Returns default starter files for problem
     */
    getDefaultStarterFiles(request: FernApi.GetDefaultStarterFilesRequest, requestOptions?: Problem.RequestOptions): Promise<FernApi.GetDefaultStarterFilesResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Problem {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * Creates a problem
     */
    createProblem(request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problem-crud/create\\"),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Updates a problem
     */
    updateProblem(problemId, request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problem-crud/update/\${problemId}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Soft deletes a problem
     */
    deleteProblem(problemId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problem-crud/delete/\${problemId}\`),
                method: \\"DELETE\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns default starter files for problem
     */
    getDefaultStarterFiles(request, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problem-crud/default-starter-files\\"),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                body: request,
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Problem = Problem;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../..\\";
export interface GetDefaultStarterFilesRequest {
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    methodName: string;
}
",
                            "name": "GetDefaultStarterFilesRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "GetDefaultStarterFilesRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { GetDefaultStarterFilesRequest } from \\"./GetDefaultStarterFilesRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type CreateProblemError = FernApi.CreateProblemError.Generic;
export declare namespace CreateProblemError {
    interface Generic extends FernApi.GenericCreateProblemError {
        _type: \\"generic\\";
    }
}
",
                        "name": "CreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface CreateProblemRequest {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    testcases: FernApi.TestCaseWithExpectedResult[];
    methodName: string;
}
",
                        "name": "CreateProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CreateProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type CreateProblemResponse = FernApi.CreateProblemResponse.Success | FernApi.CreateProblemResponse.Error_;
export declare namespace CreateProblemResponse {
    interface Success {
        type: \\"success\\";
        value: FernApi.ProblemId;
    }
    interface Error_ {
        type: \\"error\\";
        value: FernApi.CreateProblemError;
    }
}
",
                        "name": "CreateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CreateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GenericCreateProblemError {
    message: string;
    type: string;
    stacktrace: string;
}
",
                        "name": "GenericCreateProblemError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GenericCreateProblemError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GetDefaultStarterFilesResponse {
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
}
",
                        "name": "GetDefaultStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetDefaultStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ProblemDescription {
    boards: FernApi.ProblemDescriptionBoard[];
}
",
                        "name": "ProblemDescription.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemDescription.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * @example
 *     {
 *         type: \\"html\\",
 *         value: \\"<div>hello world</div>\\"
 *     }
 *
 * @example
 *     {
 *         type: \\"testCaseId\\",
 *         value: \\"test-case-id-1\\"
 *     }
 */
export declare type ProblemDescriptionBoard = FernApi.ProblemDescriptionBoard.Html | FernApi.ProblemDescriptionBoard.Variable | FernApi.ProblemDescriptionBoard.TestCaseId;
export declare namespace ProblemDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface Variable {
        type: \\"variable\\";
        value: FernApi.VariableValue;
    }
    interface TestCaseId {
        type: \\"testCaseId\\";
        value: string;
    }
}
",
                        "name": "ProblemDescriptionBoard.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemDescriptionBoard.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
/**
 * @example
 *     {
 *         solutionFile: {
 *             filename: \\"hello.txt\\",
 *             contents: \\"I'm some file content\\"
 *         },
 *         readOnlyFiles: []
 *     }
 */
export interface ProblemFiles {
    solutionFile: FernApi.FileInfo;
    readOnlyFiles: FernApi.FileInfo[];
}
",
                        "name": "ProblemFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ProblemInfo {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    testcases: FernApi.TestCaseWithExpectedResult[];
    methodName: string;
    supportsCustomTestCases: boolean;
}
",
                        "name": "ProblemInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ProblemsMap {
    problemsById: Record<FernApi.ProblemId, FernApi.ProblemInfo>;
}
",
                        "name": "ProblemsMap.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ProblemsMap.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface UpdateProblemResponse {
    problemVersion: number;
}
",
                        "name": "UpdateProblemResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UpdateProblemResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface VariableTypeAndName {
    variableType: FernApi.VariableType;
    name: string;
}
",
                        "name": "VariableTypeAndName.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "VariableTypeAndName.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ProblemInfo\\";
export * from \\"./ProblemsMap\\";
export * from \\"./ProblemDescription\\";
export * from \\"./ProblemDescriptionBoard\\";
export * from \\"./ProblemFiles\\";
export * from \\"./VariableTypeAndName\\";
export * from \\"./CreateProblemRequest\\";
export * from \\"./CreateProblemResponse\\";
export * from \\"./UpdateProblemResponse\\";
export * from \\"./CreateProblemError\\";
export * from \\"./GenericCreateProblemError\\";
export * from \\"./GetDefaultStarterFilesResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./ProblemInfo\\"), exports);
__exportStar(require(\\"./ProblemsMap\\"), exports);
__exportStar(require(\\"./ProblemDescription\\"), exports);
__exportStar(require(\\"./ProblemDescriptionBoard\\"), exports);
__exportStar(require(\\"./ProblemFiles\\"), exports);
__exportStar(require(\\"./VariableTypeAndName\\"), exports);
__exportStar(require(\\"./CreateProblemRequest\\"), exports);
__exportStar(require(\\"./CreateProblemResponse\\"), exports);
__exportStar(require(\\"./UpdateProblemResponse\\"), exports);
__exportStar(require(\\"./CreateProblemError\\"), exports);
__exportStar(require(\\"./GenericCreateProblemError\\"), exports);
__exportStar(require(\\"./GetDefaultStarterFilesResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "problem",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Submission {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
/**
 * Responsible for spinning up and spinning down execution.
 */
export declare class Submission {
    protected readonly _options: Submission.Options;
    constructor(_options: Submission.Options);
    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    createExecutionSession(language: FernApi.Language, requestOptions?: Submission.RequestOptions): Promise<FernApi.ExecutionSessionResponse>;
    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    getExecutionSession(sessionId: string, requestOptions?: Submission.RequestOptions): Promise<FernApi.ExecutionSessionResponse | undefined>;
    /**
     * Stops execution session.
     */
    stopExecutionSession(sessionId: string, requestOptions?: Submission.RequestOptions): Promise<void>;
    getExecutionSessionsState(requestOptions?: Submission.RequestOptions): Promise<FernApi.GetExecutionSessionStateResponse>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Submission = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
/**
 * Responsible for spinning up and spinning down execution.
 */
class Submission {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    createExecutionSession(language, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/sessions/create-session/\${language}\`),
                method: \\"POST\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    getExecutionSession(sessionId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/sessions/\${sessionId}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Stops execution session.
     */
    stopExecutionSession(sessionId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/sessions/stop/\${sessionId}\`),
                method: \\"DELETE\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    getExecutionSessionsState(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/sessions/execution-sessions-state\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Submission = Submission;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ActualResult = FernApi.ActualResult.Value | FernApi.ActualResult.Exception | FernApi.ActualResult.ExceptionV2;
export declare namespace ActualResult {
    interface Value {
        type: \\"value\\";
        value: FernApi.VariableValue;
    }
    interface Exception extends FernApi.ExceptionInfo {
        type: \\"exception\\";
    }
    interface ExceptionV2 {
        type: \\"exceptionV2\\";
        value: FernApi.ExceptionV2;
    }
}
",
                        "name": "ActualResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ActualResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface BuildingExecutorResponse {
    submissionId: FernApi.SubmissionId;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "BuildingExecutorResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "BuildingExecutorResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type CodeExecutionUpdate = 
/**
 * Statuses if an executor for the session isn't ready (Before RunningResponse). */
FernApi.CodeExecutionUpdate.BuildingExecutor
/**
 * Sent once a test submission is executing. */
 | FernApi.CodeExecutionUpdate.Running
/**
 * Sent if a submission cannot be run (i.e. Compile Error). */
 | FernApi.CodeExecutionUpdate.Errored
/**
 * Sent if a submission is stopped. */
 | FernApi.CodeExecutionUpdate.Stopped
/**
 * Graded testcases without trace information. */
 | FernApi.CodeExecutionUpdate.Graded
/**
 * Graded submission for v2 problems. */
 | FernApi.CodeExecutionUpdate.GradedV2
/**
 * Workspace run without trace information. */
 | FernApi.CodeExecutionUpdate.WorkspaceRan
/**
 * Gives progress about what is being recorded. */
 | FernApi.CodeExecutionUpdate.Recording
/**
 * Graded testcases with trace information. */
 | FernApi.CodeExecutionUpdate.Recorded
/**
 * Sent if an invalid request is sent for a submission. */
 | FernApi.CodeExecutionUpdate.InvalidRequest
/**
 * Sent once a submission is graded and fully recorded. */
 | FernApi.CodeExecutionUpdate.Finished;
export declare namespace CodeExecutionUpdate {
    interface BuildingExecutor extends FernApi.BuildingExecutorResponse {
        type: \\"buildingExecutor\\";
    }
    interface Running extends FernApi.RunningResponse {
        type: \\"running\\";
    }
    interface Errored extends FernApi.ErroredResponse {
        type: \\"errored\\";
    }
    interface Stopped extends FernApi.StoppedResponse {
        type: \\"stopped\\";
    }
    interface Graded extends FernApi.GradedResponse {
        type: \\"graded\\";
    }
    interface GradedV2 extends FernApi.GradedResponseV2 {
        type: \\"gradedV2\\";
    }
    interface WorkspaceRan extends FernApi.WorkspaceRanResponse {
        type: \\"workspaceRan\\";
    }
    interface Recording extends FernApi.RecordingResponseNotification {
        type: \\"recording\\";
    }
    interface Recorded extends FernApi.RecordedResponseNotification {
        type: \\"recorded\\";
    }
    interface InvalidRequest extends FernApi.InvalidRequestResponse {
        type: \\"invalidRequest\\";
    }
    interface Finished extends FernApi.FinishedResponse {
        type: \\"finished\\";
    }
}
",
                        "name": "CodeExecutionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CodeExecutionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface CompileError {
    message: string;
}
",
                        "name": "CompileError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CompileError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface CustomTestCasesUnsupported {
    problemId: FernApi.ProblemId;
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "CustomTestCasesUnsupported.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "CustomTestCasesUnsupported.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ErrorInfo = FernApi.ErrorInfo.CompileError
/**
 * If the submission cannot be executed and throws a runtime error before getting to any of the testcases.
 *  */
 | FernApi.ErrorInfo.RuntimeError
/**
 * If the trace backend encounters an unexpected error.
 *  */
 | FernApi.ErrorInfo.InternalError;
export declare namespace ErrorInfo {
    interface CompileError extends FernApi.CompileError {
        type: \\"compileError\\";
    }
    interface RuntimeError extends FernApi.RuntimeError {
        type: \\"runtimeError\\";
    }
    interface InternalError extends FernApi.InternalError {
        type: \\"internalError\\";
    }
}
",
                        "name": "ErrorInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErrorInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ErroredResponse {
    submissionId: FernApi.SubmissionId;
    errorInfo: FernApi.ErrorInfo;
}
",
                        "name": "ErroredResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ErroredResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface ExceptionInfo {
    exceptionType: string;
    exceptionMessage: string;
    exceptionStacktrace: string;
}
",
                        "name": "ExceptionInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExceptionInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type ExceptionV2 = FernApi.ExceptionV2.Generic | FernApi.ExceptionV2.Timeout;
export declare namespace ExceptionV2 {
    interface Generic extends FernApi.ExceptionInfo {
        type: \\"generic\\";
    }
    interface Timeout {
        type: \\"timeout\\";
    }
}
",
                        "name": "ExceptionV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExceptionV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExecutionSessionResponse {
    sessionId: string;
    executionSessionUrl?: string;
    language: FernApi.Language;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExecutionSessionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExecutionSessionState {
    lastTimeContacted?: string;
    sessionId: string;
    isWarmInstance: boolean;
    awsTaskId?: string;
    language: FernApi.Language;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExecutionSessionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ExecutionSessionStatus = \\"CREATING_CONTAINER\\" | \\"PROVISIONING_CONTAINER\\" | \\"PENDING_CONTAINER\\" | \\"RUNNING_CONTAINER\\" | \\"LIVE_CONTAINER\\" | \\"FAILED_TO_LAUNCH\\";
export declare const ExecutionSessionStatus: {
    readonly CreatingContainer: \\"CREATING_CONTAINER\\";
    readonly ProvisioningContainer: \\"PROVISIONING_CONTAINER\\";
    readonly PendingContainer: \\"PENDING_CONTAINER\\";
    readonly RunningContainer: \\"RUNNING_CONTAINER\\";
    readonly LiveContainer: \\"LIVE_CONTAINER\\";
    readonly FailedToLaunch: \\"FAILED_TO_LAUNCH\\";
};
",
                        "name": "ExecutionSessionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.ExecutionSessionStatus = void 0;
exports.ExecutionSessionStatus = {
    CreatingContainer: \\"CREATING_CONTAINER\\",
    ProvisioningContainer: \\"PROVISIONING_CONTAINER\\",
    PendingContainer: \\"PENDING_CONTAINER\\",
    RunningContainer: \\"RUNNING_CONTAINER\\",
    LiveContainer: \\"LIVE_CONTAINER\\",
    FailedToLaunch: \\"FAILED_TO_LAUNCH\\",
};
",
                        "name": "ExecutionSessionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface ExistingSubmissionExecuting {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "ExistingSubmissionExecuting.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExistingSubmissionExecuting.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface ExpressionLocation {
    start: number;
    offset: number;
}
",
                        "name": "ExpressionLocation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ExpressionLocation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface FinishedResponse {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "FinishedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "FinishedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GetExecutionSessionStateResponse {
    states: Record<string, FernApi.ExecutionSessionState>;
    numWarmingInstances?: number;
    warmingSessionIds: string[];
}
",
                        "name": "GetExecutionSessionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetExecutionSessionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GetSubmissionStateResponse {
    timeSubmitted?: string;
    submission: string;
    language: FernApi.Language;
    submissionTypeState: FernApi.SubmissionTypeState;
}
",
                        "name": "GetSubmissionStateResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetSubmissionStateResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface GetTraceResponsesPageRequest {
    offset?: number;
}
",
                        "name": "GetTraceResponsesPageRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GetTraceResponsesPageRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GradedResponse {
    submissionId: FernApi.SubmissionId;
    testCases: Record<string, FernApi.TestCaseResultWithStdout>;
}
",
                        "name": "GradedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GradedResponseV2 {
    submissionId: FernApi.SubmissionId;
    testCases: Record<FernApi.v2.TestCaseId, FernApi.TestCaseGrade>;
}
",
                        "name": "GradedResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface GradedTestCaseUpdate {
    testCaseId: FernApi.v2.TestCaseId;
    grade: FernApi.TestCaseGrade;
}
",
                        "name": "GradedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "GradedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface InitializeProblemRequest {
    problemId: FernApi.ProblemId;
    problemVersion?: number;
}
",
                        "name": "InitializeProblemRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InitializeProblemRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface InternalError {
    exceptionInfo: FernApi.ExceptionInfo;
}
",
                        "name": "InternalError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InternalError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type InvalidRequestCause = 
/**
 * The submission request references a submission id that doesn't exist. */
FernApi.InvalidRequestCause.SubmissionIdNotFound | FernApi.InvalidRequestCause.CustomTestCasesUnsupported
/**
 * The submission request was routed to an incorrect language executor. */
 | FernApi.InvalidRequestCause.UnexpectedLanguage;
export declare namespace InvalidRequestCause {
    interface SubmissionIdNotFound extends FernApi.SubmissionIdNotFound {
        type: \\"submissionIdNotFound\\";
    }
    interface CustomTestCasesUnsupported extends FernApi.CustomTestCasesUnsupported {
        type: \\"customTestCasesUnsupported\\";
    }
    interface UnexpectedLanguage extends FernApi.UnexpectedLanguageError {
        type: \\"unexpectedLanguage\\";
    }
}
",
                        "name": "InvalidRequestCause.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InvalidRequestCause.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface InvalidRequestResponse {
    request: FernApi.SubmissionRequest;
    cause: FernApi.InvalidRequestCause;
}
",
                        "name": "InvalidRequestResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "InvalidRequestResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface LightweightStackframeInformation {
    numStackFrames: number;
    topStackFrameMethodName: string;
}
",
                        "name": "LightweightStackframeInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "LightweightStackframeInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface RecordedResponseNotification {
    submissionId: FernApi.SubmissionId;
    traceResponsesSize: number;
    testCaseId?: string;
}
",
                        "name": "RecordedResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordedResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface RecordedTestCaseUpdate {
    testCaseId: FernApi.v2.TestCaseId;
    traceResponsesSize: number;
}
",
                        "name": "RecordedTestCaseUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordedTestCaseUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface RecordingResponseNotification {
    submissionId: FernApi.SubmissionId;
    testCaseId?: string;
    lineNumber: number;
    lightweightStackInfo: FernApi.LightweightStackframeInformation;
    tracedFile?: FernApi.TracedFile;
}
",
                        "name": "RecordingResponseNotification.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RecordingResponseNotification.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface RunningResponse {
    submissionId: FernApi.SubmissionId;
    state: FernApi.RunningSubmissionState;
}
",
                        "name": "RunningResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RunningResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type RunningSubmissionState = \\"QUEUEING_SUBMISSION\\" | \\"KILLING_HISTORICAL_SUBMISSIONS\\" | \\"WRITING_SUBMISSION_TO_FILE\\" | \\"COMPILING_SUBMISSION\\" | \\"RUNNING_SUBMISSION\\";
export declare const RunningSubmissionState: {
    readonly QueueingSubmission: \\"QUEUEING_SUBMISSION\\";
    readonly KillingHistoricalSubmissions: \\"KILLING_HISTORICAL_SUBMISSIONS\\";
    readonly WritingSubmissionToFile: \\"WRITING_SUBMISSION_TO_FILE\\";
    readonly CompilingSubmission: \\"COMPILING_SUBMISSION\\";
    readonly RunningSubmission: \\"RUNNING_SUBMISSION\\";
};
",
                        "name": "RunningSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.RunningSubmissionState = void 0;
exports.RunningSubmissionState = {
    QueueingSubmission: \\"QUEUEING_SUBMISSION\\",
    KillingHistoricalSubmissions: \\"KILLING_HISTORICAL_SUBMISSIONS\\",
    WritingSubmissionToFile: \\"WRITING_SUBMISSION_TO_FILE\\",
    CompilingSubmission: \\"COMPILING_SUBMISSION\\",
    RunningSubmission: \\"RUNNING_SUBMISSION\\",
};
",
                        "name": "RunningSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface RuntimeError {
    message: string;
}
",
                        "name": "RuntimeError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "RuntimeError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface Scope {
    variables: Record<string, FernApi.DebugVariableValue>;
}
",
                        "name": "Scope.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "Scope.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ShareId = string;
",
                        "name": "ShareId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "ShareId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StackFrame {
    methodName: string;
    lineNumber: number;
    scopes: FernApi.Scope[];
}
",
                        "name": "StackFrame.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StackFrame.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StackInformation {
    numStackFrames: number;
    topStackFrame?: FernApi.StackFrame;
}
",
                        "name": "StackInformation.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StackInformation.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StderrResponse {
    submissionId: FernApi.SubmissionId;
    stderr: string;
}
",
                        "name": "StderrResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StderrResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StdoutResponse {
    submissionId: FernApi.SubmissionId;
    stdout: string;
}
",
                        "name": "StdoutResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StdoutResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StopRequest {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "StopRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StopRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface StoppedResponse {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "StoppedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "StoppedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface SubmissionFileInfo {
    directory: string;
    filename: string;
    contents: string;
}
",
                        "name": "SubmissionFileInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionFileInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type SubmissionId = string;
",
                        "name": "SubmissionId.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionId.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SubmissionIdNotFound {
    missingSubmissionId: FernApi.SubmissionId;
}
",
                        "name": "SubmissionIdNotFound.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionIdNotFound.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SubmissionRequest = FernApi.SubmissionRequest.InitializeProblemRequest | FernApi.SubmissionRequest.InitializeWorkspaceRequest | FernApi.SubmissionRequest.SubmitV2 | FernApi.SubmissionRequest.WorkspaceSubmit | FernApi.SubmissionRequest.Stop;
export declare namespace SubmissionRequest {
    interface InitializeProblemRequest extends FernApi.InitializeProblemRequest {
        type: \\"initializeProblemRequest\\";
    }
    interface InitializeWorkspaceRequest {
        type: \\"initializeWorkspaceRequest\\";
    }
    interface SubmitV2 extends FernApi.SubmitRequestV2 {
        type: \\"submitV2\\";
    }
    interface WorkspaceSubmit extends FernApi.WorkspaceSubmitRequest {
        type: \\"workspaceSubmit\\";
    }
    interface Stop extends FernApi.StopRequest {
        type: \\"stop\\";
    }
}
",
                        "name": "SubmissionRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SubmissionResponse = FernApi.SubmissionResponse.ServerInitialized | FernApi.SubmissionResponse.ProblemInitialized | FernApi.SubmissionResponse.WorkspaceInitialized | FernApi.SubmissionResponse.ServerErrored | FernApi.SubmissionResponse.CodeExecutionUpdate | FernApi.SubmissionResponse.Terminated;
export declare namespace SubmissionResponse {
    interface ServerInitialized {
        type: \\"serverInitialized\\";
    }
    interface ProblemInitialized {
        type: \\"problemInitialized\\";
        value: FernApi.ProblemId;
    }
    interface WorkspaceInitialized {
        type: \\"workspaceInitialized\\";
    }
    interface ServerErrored extends FernApi.ExceptionInfo {
        type: \\"serverErrored\\";
    }
    interface CodeExecutionUpdate {
        type: \\"codeExecutionUpdate\\";
        value: FernApi.CodeExecutionUpdate;
    }
    interface Terminated extends FernApi.TerminatedResponse {
        type: \\"terminated\\";
    }
}
",
                        "name": "SubmissionResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SubmissionStatusForTestCase = FernApi.SubmissionStatusForTestCase.Graded | FernApi.SubmissionStatusForTestCase.GradedV2 | FernApi.SubmissionStatusForTestCase.Traced;
export declare namespace SubmissionStatusForTestCase {
    interface Graded extends FernApi.TestCaseResultWithStdout {
        type: \\"graded\\";
    }
    interface GradedV2 {
        type: \\"gradedV2\\";
        value: FernApi.TestCaseGrade;
    }
    interface Traced extends FernApi.TracedTestCase {
        type: \\"traced\\";
    }
}
",
                        "name": "SubmissionStatusForTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionStatusForTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SubmissionStatusV2 = FernApi.SubmissionStatusV2.Test | FernApi.SubmissionStatusV2.Workspace;
export declare namespace SubmissionStatusV2 {
    interface Test extends FernApi.TestSubmissionStatusV2 {
        type: \\"test\\";
    }
    interface Workspace extends FernApi.WorkspaceSubmissionStatusV2 {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * Keep in sync with SubmissionType.
 */
export declare type SubmissionTypeEnum = \\"TEST\\";
export declare const SubmissionTypeEnum: {
    readonly Test: \\"TEST\\";
};
",
                        "name": "SubmissionTypeEnum.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.SubmissionTypeEnum = void 0;
exports.SubmissionTypeEnum = {
    Test: \\"TEST\\",
};
",
                        "name": "SubmissionTypeEnum.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type SubmissionTypeState = FernApi.SubmissionTypeState.Test | FernApi.SubmissionTypeState.Workspace;
export declare namespace SubmissionTypeState {
    interface Test extends FernApi.TestSubmissionState {
        type: \\"test\\";
    }
    interface Workspace extends FernApi.WorkspaceSubmissionState {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionTypeState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmissionTypeState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface SubmitRequestV2 {
    submissionId: FernApi.SubmissionId;
    language: FernApi.Language;
    submissionFiles: FernApi.SubmissionFileInfo[];
    problemId: FernApi.ProblemId;
    problemVersion?: number;
    userId?: string;
}
",
                        "name": "SubmitRequestV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "SubmitRequestV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TerminatedResponse {
}
",
                        "name": "TerminatedResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TerminatedResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type TestCaseGrade = FernApi.TestCaseGrade.Hidden | FernApi.TestCaseGrade.NonHidden;
export declare namespace TestCaseGrade {
    interface Hidden extends FernApi.TestCaseHiddenGrade {
        type: \\"hidden\\";
    }
    interface NonHidden extends FernApi.TestCaseNonHiddenGrade {
        type: \\"nonHidden\\";
    }
}
",
                        "name": "TestCaseGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseHiddenGrade {
    passed: boolean;
}
",
                        "name": "TestCaseHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestCaseNonHiddenGrade {
    passed: boolean;
    actualResult?: FernApi.VariableValue;
    exception?: FernApi.ExceptionV2;
    stdout: string;
}
",
                        "name": "TestCaseNonHiddenGrade.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseNonHiddenGrade.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestCaseResult {
    expectedResult: FernApi.VariableValue;
    actualResult: FernApi.ActualResult;
    passed: boolean;
}
",
                        "name": "TestCaseResult.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseResult.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestCaseResultWithStdout {
    result: FernApi.TestCaseResult;
    stdout: string;
}
",
                        "name": "TestCaseResultWithStdout.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestCaseResultWithStdout.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestSubmissionState {
    problemId: FernApi.ProblemId;
    defaultTestCases: FernApi.TestCase[];
    customTestCases: FernApi.TestCase[];
    status: FernApi.TestSubmissionStatus;
}
",
                        "name": "TestSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type TestSubmissionStatus = FernApi.TestSubmissionStatus.Stopped | FernApi.TestSubmissionStatus.Errored | FernApi.TestSubmissionStatus.Running | FernApi.TestSubmissionStatus.TestCaseIdToState;
export declare namespace TestSubmissionStatus {
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }
    interface TestCaseIdToState {
        type: \\"testCaseIdToState\\";
        value: Record<string, FernApi.SubmissionStatusForTestCase>;
    }
}
",
                        "name": "TestSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestSubmissionStatusV2 {
    updates: FernApi.TestSubmissionUpdate[];
    problemId: FernApi.ProblemId;
    problemVersion: number;
    problemInfo: FernApi.v2.ProblemInfoV2;
}
",
                        "name": "TestSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TestSubmissionUpdate {
    updateTime: string;
    updateInfo: FernApi.TestSubmissionUpdateInfo;
}
",
                        "name": "TestSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type TestSubmissionUpdateInfo = FernApi.TestSubmissionUpdateInfo.Running | FernApi.TestSubmissionUpdateInfo.Stopped | FernApi.TestSubmissionUpdateInfo.Errored | FernApi.TestSubmissionUpdateInfo.GradedTestCase | FernApi.TestSubmissionUpdateInfo.RecordedTestCase | FernApi.TestSubmissionUpdateInfo.Finished;
export declare namespace TestSubmissionUpdateInfo {
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }
    interface GradedTestCase extends FernApi.GradedTestCaseUpdate {
        type: \\"gradedTestCase\\";
    }
    interface RecordedTestCase extends FernApi.RecordedTestCaseUpdate {
        type: \\"recordedTestCase\\";
    }
    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "TestSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TestSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TraceResponse {
    submissionId: FernApi.SubmissionId;
    lineNumber: number;
    returnValue?: FernApi.DebugVariableValue;
    expressionLocation?: FernApi.ExpressionLocation;
    stack: FernApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TraceResponseV2 {
    submissionId: FernApi.SubmissionId;
    lineNumber: number;
    file: FernApi.TracedFile;
    returnValue?: FernApi.DebugVariableValue;
    expressionLocation?: FernApi.ExpressionLocation;
    stack: FernApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TraceResponsesPage {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: FernApi.TraceResponse[];
}
",
                        "name": "TraceResponsesPage.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponsesPage.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TraceResponsesPageV2 {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: FernApi.TraceResponseV2[];
}
",
                        "name": "TraceResponsesPageV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TraceResponsesPageV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TracedFile {
    filename: string;
    directory: string;
}
",
                        "name": "TracedFile.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TracedFile.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface TracedTestCase {
    result: FernApi.TestCaseResultWithStdout;
    traceResponsesSize: number;
}
",
                        "name": "TracedTestCase.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "TracedTestCase.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface UnexpectedLanguageError {
    expectedLanguage: FernApi.Language;
    actualLanguage: FernApi.Language;
}
",
                        "name": "UnexpectedLanguageError.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "UnexpectedLanguageError.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceFiles {
    mainFile: FernApi.FileInfo;
    readOnlyFiles: FernApi.FileInfo[];
}
",
                        "name": "WorkspaceFiles.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceFiles.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceRanResponse {
    submissionId: FernApi.SubmissionId;
    runDetails: FernApi.WorkspaceRunDetails;
}
",
                        "name": "WorkspaceRanResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceRanResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceRunDetails {
    exceptionV2?: FernApi.ExceptionV2;
    exception?: FernApi.ExceptionInfo;
    stdout: string;
}
",
                        "name": "WorkspaceRunDetails.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceRunDetails.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceStarterFilesResponse {
    files: Record<FernApi.Language, FernApi.WorkspaceFiles | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponse.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceStarterFilesResponse.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceStarterFilesResponseV2 {
    filesByLanguage: Record<FernApi.Language, FernApi.v2.Files | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponseV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceStarterFilesResponseV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceSubmissionState {
    status: FernApi.WorkspaceSubmissionStatus;
}
",
                        "name": "WorkspaceSubmissionState.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionState.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type WorkspaceSubmissionStatus = FernApi.WorkspaceSubmissionStatus.Stopped | FernApi.WorkspaceSubmissionStatus.Errored | FernApi.WorkspaceSubmissionStatus.Running | FernApi.WorkspaceSubmissionStatus.Ran | FernApi.WorkspaceSubmissionStatus.Traced;
export declare namespace WorkspaceSubmissionStatus {
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }
    interface Ran extends FernApi.WorkspaceRunDetails {
        type: \\"ran\\";
    }
    interface Traced extends FernApi.WorkspaceRunDetails {
        type: \\"traced\\";
    }
}
",
                        "name": "WorkspaceSubmissionStatus.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionStatus.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceSubmissionStatusV2 {
    updates: FernApi.WorkspaceSubmissionUpdate[];
}
",
                        "name": "WorkspaceSubmissionStatusV2.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionStatusV2.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceSubmissionUpdate {
    updateTime: string;
    updateInfo: FernApi.WorkspaceSubmissionUpdateInfo;
}
",
                        "name": "WorkspaceSubmissionUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export declare type WorkspaceSubmissionUpdateInfo = FernApi.WorkspaceSubmissionUpdateInfo.Running | FernApi.WorkspaceSubmissionUpdateInfo.Ran | FernApi.WorkspaceSubmissionUpdateInfo.Stopped | FernApi.WorkspaceSubmissionUpdateInfo.Traced | FernApi.WorkspaceSubmissionUpdateInfo.TracedV2 | FernApi.WorkspaceSubmissionUpdateInfo.Errored | FernApi.WorkspaceSubmissionUpdateInfo.Finished;
export declare namespace WorkspaceSubmissionUpdateInfo {
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }
    interface Ran extends FernApi.WorkspaceRunDetails {
        type: \\"ran\\";
    }
    interface Stopped {
        type: \\"stopped\\";
    }
    interface Traced {
        type: \\"traced\\";
    }
    interface TracedV2 extends FernApi.WorkspaceTracedUpdate {
        type: \\"tracedV2\\";
    }
    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }
    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "WorkspaceSubmissionUpdateInfo.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmissionUpdateInfo.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../..\\";
export interface WorkspaceSubmitRequest {
    submissionId: FernApi.SubmissionId;
    language: FernApi.Language;
    submissionFiles: FernApi.SubmissionFileInfo[];
    userId?: string;
}
",
                        "name": "WorkspaceSubmitRequest.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceSubmitRequest.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface WorkspaceTracedUpdate {
    traceResponsesSize: number;
}
",
                        "name": "WorkspaceTracedUpdate.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "WorkspaceTracedUpdate.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./SubmissionId\\";
export * from \\"./ShareId\\";
export * from \\"./SubmissionRequest\\";
export * from \\"./InitializeProblemRequest\\";
export * from \\"./SubmitRequestV2\\";
export * from \\"./WorkspaceSubmitRequest\\";
export * from \\"./SubmissionFileInfo\\";
export * from \\"./SubmissionTypeEnum\\";
export * from \\"./StopRequest\\";
export * from \\"./SubmissionResponse\\";
export * from \\"./CodeExecutionUpdate\\";
export * from \\"./BuildingExecutorResponse\\";
export * from \\"./RunningResponse\\";
export * from \\"./RunningSubmissionState\\";
export * from \\"./ErroredResponse\\";
export * from \\"./ErrorInfo\\";
export * from \\"./CompileError\\";
export * from \\"./RuntimeError\\";
export * from \\"./InternalError\\";
export * from \\"./StoppedResponse\\";
export * from \\"./WorkspaceRanResponse\\";
export * from \\"./WorkspaceRunDetails\\";
export * from \\"./GradedResponse\\";
export * from \\"./GradedResponseV2\\";
export * from \\"./TestCaseGrade\\";
export * from \\"./TestCaseHiddenGrade\\";
export * from \\"./TestCaseNonHiddenGrade\\";
export * from \\"./RecordedResponseNotification\\";
export * from \\"./RecordingResponseNotification\\";
export * from \\"./LightweightStackframeInformation\\";
export * from \\"./TestCaseResultWithStdout\\";
export * from \\"./TestCaseResult\\";
export * from \\"./ActualResult\\";
export * from \\"./ExceptionV2\\";
export * from \\"./ExceptionInfo\\";
export * from \\"./InvalidRequestResponse\\";
export * from \\"./InvalidRequestCause\\";
export * from \\"./ExistingSubmissionExecuting\\";
export * from \\"./SubmissionIdNotFound\\";
export * from \\"./CustomTestCasesUnsupported\\";
export * from \\"./UnexpectedLanguageError\\";
export * from \\"./TerminatedResponse\\";
export * from \\"./FinishedResponse\\";
export * from \\"./StdoutResponse\\";
export * from \\"./StderrResponse\\";
export * from \\"./TraceResponse\\";
export * from \\"./TraceResponseV2\\";
export * from \\"./TracedFile\\";
export * from \\"./ExpressionLocation\\";
export * from \\"./StackInformation\\";
export * from \\"./StackFrame\\";
export * from \\"./Scope\\";
export * from \\"./ExecutionSessionResponse\\";
export * from \\"./ExecutionSessionStatus\\";
export * from \\"./SubmissionStatusV2\\";
export * from \\"./TestSubmissionStatusV2\\";
export * from \\"./WorkspaceSubmissionStatusV2\\";
export * from \\"./TestSubmissionUpdate\\";
export * from \\"./TestSubmissionUpdateInfo\\";
export * from \\"./WorkspaceSubmissionUpdate\\";
export * from \\"./WorkspaceSubmissionUpdateInfo\\";
export * from \\"./GradedTestCaseUpdate\\";
export * from \\"./RecordedTestCaseUpdate\\";
export * from \\"./WorkspaceTracedUpdate\\";
export * from \\"./SubmissionTypeState\\";
export * from \\"./WorkspaceSubmissionState\\";
export * from \\"./WorkspaceSubmissionStatus\\";
export * from \\"./TestSubmissionState\\";
export * from \\"./TestSubmissionStatus\\";
export * from \\"./SubmissionStatusForTestCase\\";
export * from \\"./TracedTestCase\\";
export * from \\"./TraceResponsesPage\\";
export * from \\"./TraceResponsesPageV2\\";
export * from \\"./GetTraceResponsesPageRequest\\";
export * from \\"./WorkspaceStarterFilesResponse\\";
export * from \\"./WorkspaceStarterFilesResponseV2\\";
export * from \\"./WorkspaceFiles\\";
export * from \\"./ExecutionSessionState\\";
export * from \\"./GetExecutionSessionStateResponse\\";
export * from \\"./GetSubmissionStateResponse\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./SubmissionId\\"), exports);
__exportStar(require(\\"./ShareId\\"), exports);
__exportStar(require(\\"./SubmissionRequest\\"), exports);
__exportStar(require(\\"./InitializeProblemRequest\\"), exports);
__exportStar(require(\\"./SubmitRequestV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmitRequest\\"), exports);
__exportStar(require(\\"./SubmissionFileInfo\\"), exports);
__exportStar(require(\\"./SubmissionTypeEnum\\"), exports);
__exportStar(require(\\"./StopRequest\\"), exports);
__exportStar(require(\\"./SubmissionResponse\\"), exports);
__exportStar(require(\\"./CodeExecutionUpdate\\"), exports);
__exportStar(require(\\"./BuildingExecutorResponse\\"), exports);
__exportStar(require(\\"./RunningResponse\\"), exports);
__exportStar(require(\\"./RunningSubmissionState\\"), exports);
__exportStar(require(\\"./ErroredResponse\\"), exports);
__exportStar(require(\\"./ErrorInfo\\"), exports);
__exportStar(require(\\"./CompileError\\"), exports);
__exportStar(require(\\"./RuntimeError\\"), exports);
__exportStar(require(\\"./InternalError\\"), exports);
__exportStar(require(\\"./StoppedResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRanResponse\\"), exports);
__exportStar(require(\\"./WorkspaceRunDetails\\"), exports);
__exportStar(require(\\"./GradedResponse\\"), exports);
__exportStar(require(\\"./GradedResponseV2\\"), exports);
__exportStar(require(\\"./TestCaseGrade\\"), exports);
__exportStar(require(\\"./TestCaseHiddenGrade\\"), exports);
__exportStar(require(\\"./TestCaseNonHiddenGrade\\"), exports);
__exportStar(require(\\"./RecordedResponseNotification\\"), exports);
__exportStar(require(\\"./RecordingResponseNotification\\"), exports);
__exportStar(require(\\"./LightweightStackframeInformation\\"), exports);
__exportStar(require(\\"./TestCaseResultWithStdout\\"), exports);
__exportStar(require(\\"./TestCaseResult\\"), exports);
__exportStar(require(\\"./ActualResult\\"), exports);
__exportStar(require(\\"./ExceptionV2\\"), exports);
__exportStar(require(\\"./ExceptionInfo\\"), exports);
__exportStar(require(\\"./InvalidRequestResponse\\"), exports);
__exportStar(require(\\"./InvalidRequestCause\\"), exports);
__exportStar(require(\\"./ExistingSubmissionExecuting\\"), exports);
__exportStar(require(\\"./SubmissionIdNotFound\\"), exports);
__exportStar(require(\\"./CustomTestCasesUnsupported\\"), exports);
__exportStar(require(\\"./UnexpectedLanguageError\\"), exports);
__exportStar(require(\\"./TerminatedResponse\\"), exports);
__exportStar(require(\\"./FinishedResponse\\"), exports);
__exportStar(require(\\"./StdoutResponse\\"), exports);
__exportStar(require(\\"./StderrResponse\\"), exports);
__exportStar(require(\\"./TraceResponse\\"), exports);
__exportStar(require(\\"./TraceResponseV2\\"), exports);
__exportStar(require(\\"./TracedFile\\"), exports);
__exportStar(require(\\"./ExpressionLocation\\"), exports);
__exportStar(require(\\"./StackInformation\\"), exports);
__exportStar(require(\\"./StackFrame\\"), exports);
__exportStar(require(\\"./Scope\\"), exports);
__exportStar(require(\\"./ExecutionSessionResponse\\"), exports);
__exportStar(require(\\"./ExecutionSessionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatusV2\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdate\\"), exports);
__exportStar(require(\\"./TestSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionUpdateInfo\\"), exports);
__exportStar(require(\\"./GradedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./RecordedTestCaseUpdate\\"), exports);
__exportStar(require(\\"./WorkspaceTracedUpdate\\"), exports);
__exportStar(require(\\"./SubmissionTypeState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionState\\"), exports);
__exportStar(require(\\"./WorkspaceSubmissionStatus\\"), exports);
__exportStar(require(\\"./TestSubmissionState\\"), exports);
__exportStar(require(\\"./TestSubmissionStatus\\"), exports);
__exportStar(require(\\"./SubmissionStatusForTestCase\\"), exports);
__exportStar(require(\\"./TracedTestCase\\"), exports);
__exportStar(require(\\"./TraceResponsesPage\\"), exports);
__exportStar(require(\\"./TraceResponsesPageV2\\"), exports);
__exportStar(require(\\"./GetTraceResponsesPageRequest\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponse\\"), exports);
__exportStar(require(\\"./WorkspaceStarterFilesResponseV2\\"), exports);
__exportStar(require(\\"./WorkspaceFiles\\"), exports);
__exportStar(require(\\"./ExecutionSessionState\\"), exports);
__exportStar(require(\\"./GetExecutionSessionStateResponse\\"), exports);
__exportStar(require(\\"./GetSubmissionStateResponse\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "submission",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Sysprop {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Sysprop {
    protected readonly _options: Sysprop.Options;
    constructor(_options: Sysprop.Options);
    setNumWarmInstances(language: FernApi.Language, numWarmInstances: number, requestOptions?: Sysprop.RequestOptions): Promise<void>;
    getNumWarmInstances(requestOptions?: Sysprop.RequestOptions): Promise<Record<FernApi.Language, number | undefined>>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Sysprop = void 0;
const environments = __importStar(require(\\"../../../../environments\\"));
const core = __importStar(require(\\"../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Sysprop {
    constructor(_options) {
        this._options = _options;
    }
    setNumWarmInstances(language, numWarmInstances, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/sysprop/num-warm-instances/\${language}/\${numWarmInstances}\`),
                method: \\"PUT\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    getNumWarmInstances(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/sysprop/num-warm-instances\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Sysprop = Sysprop;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "sysprop",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";
import { V3 } from \\"../resources/v3/client/Client\\";
export declare namespace V2 {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class V2 {
    protected readonly _options: V2.Options;
    constructor(_options: V2.Options);
    protected _problem: Problem | undefined;
    get problem(): Problem;
    protected _v3: V3 | undefined;
    get v3(): V3;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.V2 = void 0;
const Client_1 = require(\\"../resources/problem/client/Client\\");
const Client_2 = require(\\"../resources/v3/client/Client\\");
class V2 {
    constructor(_options) {
        this._options = _options;
    }
    get problem() {
        var _a;
        return ((_a = this._problem) !== null && _a !== void 0 ? _a : (this._problem = new Client_1.Problem(this._options)));
    }
    get v3() {
        var _a;
        return ((_a = this._v3) !== null && _a !== void 0 ? _a : (this._v3 = new Client_2.V3(this._options)));
    }
}
exports.V2 = V2;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                        "name": "index.js",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as v3 from \\"./v3\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.v3 = exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
exports.v3 = __importStar(require(\\"./v3\\"));
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import * as FernApi from \\"../../../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Problem {
    protected readonly _options: Problem.Options;
    constructor(_options: Problem.Options);
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.LightweightProblemInfoV2[]>;
    /**
     * Returns latest versions of all problems
     */
    getProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.ProblemInfoV2[]>;
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId: FernApi.ProblemId, requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.ProblemInfoV2>;
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId: FernApi.ProblemId, problemVersion: number, requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.ProblemInfoV2>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                                "name": "Client.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../../../environments\\"));
const core = __importStar(require(\\"../../../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../../../errors\\"));
class Problem {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problems-v2/lightweight-problem-info\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns latest versions of all problems
     */
    getProblems(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problems-v2/problem-info\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problems-v2/problem-info/\${problemId}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId, problemVersion, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problems-v2/problem-info/\${problemId}/version/\${problemVersion}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Problem = Problem;
",
                                "name": "Client.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type AssertCorrectnessCheck = FernApi.v2.AssertCorrectnessCheck.DeepEquality | FernApi.v2.AssertCorrectnessCheck.Custom;
export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends FernApi.v2.DeepEqualityCorrectnessCheck {
        type: \\"deepEquality\\";
    }
    interface Custom extends FernApi.v2.VoidFunctionDefinitionThatTakesActualResult {
        type: \\"custom\\";
    }
}
",
                                "name": "AssertCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "AssertCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface BasicCustomFiles {
    methodName: string;
    signature: FernApi.v2.NonVoidFunctionSignature;
    additionalFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    basicTestCaseTemplate: FernApi.v2.BasicTestCaseTemplate;
}
",
                                "name": "BasicCustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "BasicCustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface BasicTestCaseTemplate {
    templateId: FernApi.v2.TestCaseTemplateId;
    name: string;
    description: FernApi.v2.TestCaseImplementationDescription;
    expectedValueParameterId: FernApi.v2.ParameterId;
}
",
                                "name": "BasicTestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "BasicTestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    customFiles: FernApi.v2.CustomFiles;
    customTestCaseTemplates: FernApi.v2.TestCaseTemplate[];
    testcases: FernApi.v2.TestCaseV2[];
    supportedLanguages: FernApi.Language[];
    isPublic: boolean;
}
",
                                "name": "CreateProblemRequestV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "CreateProblemRequestV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type CustomFiles = FernApi.v2.CustomFiles.Basic | FernApi.v2.CustomFiles.Custom;
export declare namespace CustomFiles {
    interface Basic extends FernApi.v2.BasicCustomFiles {
        type: \\"basic\\";
    }
    interface Custom {
        type: \\"custom\\";
        value: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    }
}
",
                                "name": "CustomFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "CustomFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: FernApi.v2.ParameterId;
}
",
                                "name": "DeepEqualityCorrectnessCheck.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "DeepEqualityCorrectnessCheck.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface DefaultProvidedFile {
    file: FernApi.v2.FileInfoV2;
    relatedTypes: FernApi.VariableType[];
}
",
                                "name": "DefaultProvidedFile.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "DefaultProvidedFile.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                "name": "FileInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FileInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface Files {
    files: FernApi.v2.FileInfoV2[];
}
",
                                "name": "Files.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "Files.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                "name": "FunctionImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FunctionImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<FernApi.Language, FernApi.v2.FunctionImplementation | undefined>;
}
",
                                "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FunctionImplementationForMultipleLanguages.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type FunctionSignature = FernApi.v2.FunctionSignature.Void | FernApi.v2.FunctionSignature.NonVoid
/**
 * Useful when specifying custom grading for a testcase where actualResult is defined. */
 | FernApi.v2.FunctionSignature.VoidThatTakesActualResult;
export declare namespace FunctionSignature {
    interface Void extends FernApi.v2.VoidFunctionSignature {
        type: \\"void\\";
    }
    interface NonVoid extends FernApi.v2.NonVoidFunctionSignature {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends FernApi.v2.VoidFunctionSignatureThatTakesActualResult {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                "name": "FunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "FunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GeneratedFiles {
    generatedTestCaseFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    generatedTemplateFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    other: Record<FernApi.Language, FernApi.v2.Files | undefined>;
}
",
                                "name": "GeneratedFiles.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GeneratedFiles.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: FernApi.v2.NonVoidFunctionSignature;
}
",
                                "name": "GetBasicSolutionFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetBasicSolutionFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<FernApi.Language, FernApi.v2.FileInfoV2 | undefined>;
}
",
                                "name": "GetBasicSolutionFileResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetBasicSolutionFileResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetFunctionSignatureRequest {
    functionSignature: FernApi.v2.FunctionSignature;
}
",
                                "name": "GetFunctionSignatureRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetFunctionSignatureRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<FernApi.Language, string | undefined>;
}
",
                                "name": "GetFunctionSignatureResponse.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetFunctionSignatureResponse.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetGeneratedTestCaseFileRequest {
    template?: FernApi.v2.TestCaseTemplate;
    testCase: FernApi.v2.TestCaseV2;
}
",
                                "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetGeneratedTestCaseFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface GetGeneratedTestCaseTemplateFileRequest {
    template: FernApi.v2.TestCaseTemplate;
}
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface LightweightProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: FernApi.VariableType[];
}
",
                                "name": "LightweightProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "LightweightProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface NonVoidFunctionDefinition {
    signature: FernApi.v2.NonVoidFunctionSignature;
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "NonVoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "NonVoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface NonVoidFunctionSignature {
    parameters: FernApi.v2.Parameter[];
    returnType: FernApi.VariableType;
}
",
                                "name": "NonVoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "NonVoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface Parameter {
    parameterId: FernApi.v2.ParameterId;
    name: string;
    variableType: FernApi.VariableType;
}
",
                                "name": "Parameter.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "Parameter.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ParameterId = string;
",
                                "name": "ParameterId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "ParameterId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface ProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: FernApi.Language[];
    customFiles: FernApi.v2.CustomFiles;
    generatedFiles: FernApi.v2.GeneratedFiles;
    customTestCaseTemplates: FernApi.v2.TestCaseTemplate[];
    testcases: FernApi.v2.TestCaseV2[];
    isPublic: boolean;
}
",
                                "name": "ProblemInfoV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "ProblemInfoV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                "name": "TestCaseExpects.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseExpects.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type TestCaseFunction = FernApi.v2.TestCaseFunction.WithActualResult | FernApi.v2.TestCaseFunction.Custom;
export declare namespace TestCaseFunction {
    interface WithActualResult extends FernApi.v2.TestCaseWithActualResultImplementation {
        type: \\"withActualResult\\";
    }
    interface Custom extends FernApi.v2.VoidFunctionDefinition {
        type: \\"custom\\";
    }
}
",
                                "name": "TestCaseFunction.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseFunction.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type TestCaseId = string;
",
                                "name": "TestCaseId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseImplementation {
    description: FernApi.v2.TestCaseImplementationDescription;
    function: FernApi.v2.TestCaseFunction;
}
",
                                "name": "TestCaseImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseImplementationDescription {
    boards: FernApi.v2.TestCaseImplementationDescriptionBoard[];
}
",
                                "name": "TestCaseImplementationDescription.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementationDescription.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type TestCaseImplementationDescriptionBoard = FernApi.v2.TestCaseImplementationDescriptionBoard.Html | FernApi.v2.TestCaseImplementationDescriptionBoard.ParamId;
export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface ParamId {
        type: \\"paramId\\";
        value: FernApi.v2.ParameterId;
    }
}
",
                                "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementationDescriptionBoard.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export declare type TestCaseImplementationReference = FernApi.v2.TestCaseImplementationReference.TemplateId | FernApi.v2.TestCaseImplementationReference.Implementation;
export declare namespace TestCaseImplementationReference {
    interface TemplateId {
        type: \\"templateId\\";
        value: FernApi.v2.TestCaseTemplateId;
    }
    interface Implementation extends FernApi.v2.TestCaseImplementation {
        type: \\"implementation\\";
    }
}
",
                                "name": "TestCaseImplementationReference.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseImplementationReference.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseMetadata {
    id: FernApi.v2.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                "name": "TestCaseMetadata.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseMetadata.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseTemplate {
    templateId: FernApi.v2.TestCaseTemplateId;
    name: string;
    implementation: FernApi.v2.TestCaseImplementation;
}
",
                                "name": "TestCaseTemplate.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseTemplate.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type TestCaseTemplateId = string;
",
                                "name": "TestCaseTemplateId.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseTemplateId.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseV2 {
    metadata: FernApi.v2.TestCaseMetadata;
    implementation: FernApi.v2.TestCaseImplementationReference;
    arguments: Record<FernApi.v2.ParameterId, FernApi.VariableValue>;
    expects?: FernApi.v2.TestCaseExpects;
}
",
                                "name": "TestCaseV2.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseV2.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface TestCaseWithActualResultImplementation {
    getActualResult: FernApi.v2.NonVoidFunctionDefinition;
    assertCorrectnessCheck: FernApi.v2.AssertCorrectnessCheck;
}
",
                                "name": "TestCaseWithActualResultImplementation.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "TestCaseWithActualResultImplementation.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface VoidFunctionDefinition {
    parameters: FernApi.v2.Parameter[];
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinition.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionDefinition.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: FernApi.v2.Parameter[];
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface VoidFunctionSignature {
    parameters: FernApi.v2.Parameter[];
}
",
                                "name": "VoidFunctionSignature.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionSignature.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../..\\";
export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: FernApi.v2.Parameter[];
    actualResultType: FernApi.VariableType;
}
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "problem",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";
export declare namespace V3 {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class V3 {
    protected readonly _options: V3.Options;
    constructor(_options: V3.Options);
    protected _problem: Problem | undefined;
    get problem(): Problem;
}
",
                                "name": "Client.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.V3 = void 0;
const Client_1 = require(\\"../resources/problem/client/Client\\");
class V3 {
    constructor(_options) {
        this._options = _options;
    }
    get problem() {
        var _a;
        return ((_a = this._problem) !== null && _a !== void 0 ? _a : (this._problem = new Client_1.Problem(this._options)));
    }
}
exports.V3 = V3;
",
                                "name": "Client.js",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                "name": "index.js",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                            "name": "index.js",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
",
                                "name": "index.d.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.problem = void 0;
exports.problem = __importStar(require(\\"./problem\\"));
__exportStar(require(\\"./problem/types\\"), exports);
",
                                "name": "index.js",
                                "type": "file",
                              },
                              Object {
                                "contents": Array [
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from \\"../../../../../../../../environments\\";
import * as core from \\"../../../../../../../../core\\";
import * as FernApi from \\"../../../../../../..\\";
export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Problem {
    protected readonly _options: Problem.Options;
    constructor(_options: Problem.Options);
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.v3.LightweightProblemInfoV2[]>;
    /**
     * Returns latest versions of all problems
     */
    getProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.v3.ProblemInfoV2[]>;
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId: FernApi.ProblemId, requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.v3.ProblemInfoV2>;
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId: FernApi.ProblemId, problemVersion: number, requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.v3.ProblemInfoV2>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
",
                                        "name": "Client.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Problem = void 0;
const environments = __importStar(require(\\"../../../../../../../../environments\\"));
const core = __importStar(require(\\"../../../../../../../../core\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../../../../../errors\\"));
class Problem {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * Returns lightweight versions of all problems
     */
    getLightweightProblems(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problems-v2/lightweight-problem-info\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns latest versions of all problems
     */
    getProblems(requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \\"/problems-v2/problem-info\\"),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns latest version of a problem
     */
    getLatestProblem(problemId, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problems-v2/problem-info/\${problemId}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    /**
     * Returns requested version of a problem
     */
    getProblemVersion(problemId, problemVersion, requestOptions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)((_a = (yield core.Supplier.get(this._options.environment))) !== null && _a !== void 0 ? _a : environments.FernApiEnvironment.Prod, \`/problems-v2/problem-info/\${problemId}/version/\${problemVersion}\`),
                method: \\"GET\\",
                headers: {
                    Authorization: yield this._getAuthorizationHeader(),
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                timeoutMs: (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeoutInSeconds) != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return _response.body;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
    _getAuthorizationHeader() {
        return __awaiter(this, void 0, void 0, function* () {
            const bearer = yield core.Supplier.get(this._options.token);
            if (bearer != null) {
                return \`Bearer \${bearer}\`;
            }
            return undefined;
        });
    }
}
exports.Problem = Problem;
",
                                        "name": "Client.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export {};
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "client",
                                    "type": "directory",
                                  },
                                  Object {
                                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                                    "name": "index.d.ts",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./types\\"), exports);
__exportStar(require(\\"./client\\"), exports);
",
                                    "name": "index.js",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type AssertCorrectnessCheck = FernApi.v2.v3.AssertCorrectnessCheck.DeepEquality | FernApi.v2.v3.AssertCorrectnessCheck.Custom;
export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends FernApi.v2.v3.DeepEqualityCorrectnessCheck {
        type: \\"deepEquality\\";
    }
    interface Custom extends FernApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult {
        type: \\"custom\\";
    }
}
",
                                        "name": "AssertCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "AssertCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface BasicCustomFiles {
    methodName: string;
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
    additionalFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    basicTestCaseTemplate: FernApi.v2.v3.BasicTestCaseTemplate;
}
",
                                        "name": "BasicCustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "BasicCustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface BasicTestCaseTemplate {
    templateId: FernApi.v2.v3.TestCaseTemplateId;
    name: string;
    description: FernApi.v2.v3.TestCaseImplementationDescription;
    expectedValueParameterId: FernApi.v2.v3.ParameterId;
}
",
                                        "name": "BasicTestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "BasicTestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    customFiles: FernApi.v2.v3.CustomFiles;
    customTestCaseTemplates: FernApi.v2.v3.TestCaseTemplate[];
    testcases: FernApi.v2.v3.TestCaseV2[];
    supportedLanguages: FernApi.Language[];
    isPublic: boolean;
}
",
                                        "name": "CreateProblemRequestV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "CreateProblemRequestV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type CustomFiles = FernApi.v2.v3.CustomFiles.Basic | FernApi.v2.v3.CustomFiles.Custom;
export declare namespace CustomFiles {
    interface Basic extends FernApi.v2.v3.BasicCustomFiles {
        type: \\"basic\\";
    }
    interface Custom {
        type: \\"custom\\";
        value: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    }
}
",
                                        "name": "CustomFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "CustomFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: FernApi.v2.v3.ParameterId;
}
",
                                        "name": "DeepEqualityCorrectnessCheck.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "DeepEqualityCorrectnessCheck.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface DefaultProvidedFile {
    file: FernApi.v2.v3.FileInfoV2;
    relatedTypes: FernApi.VariableType[];
}
",
                                        "name": "DefaultProvidedFile.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "DefaultProvidedFile.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                        "name": "FileInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FileInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface Files {
    files: FernApi.v2.v3.FileInfoV2[];
}
",
                                        "name": "Files.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "Files.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                        "name": "FunctionImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FunctionImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<FernApi.Language, FernApi.v2.v3.FunctionImplementation | undefined>;
}
",
                                        "name": "FunctionImplementationForMultipleLanguages.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FunctionImplementationForMultipleLanguages.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type FunctionSignature = FernApi.v2.v3.FunctionSignature.Void | FernApi.v2.v3.FunctionSignature.NonVoid
/**
 * Useful when specifying custom grading for a testcase where actualResult is defined. */
 | FernApi.v2.v3.FunctionSignature.VoidThatTakesActualResult;
export declare namespace FunctionSignature {
    interface Void extends FernApi.v2.v3.VoidFunctionSignature {
        type: \\"void\\";
    }
    interface NonVoid extends FernApi.v2.v3.NonVoidFunctionSignature {
        type: \\"nonVoid\\";
    }
    interface VoidThatTakesActualResult extends FernApi.v2.v3.VoidFunctionSignatureThatTakesActualResult {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                        "name": "FunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "FunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GeneratedFiles {
    generatedTestCaseFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    generatedTemplateFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    other: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
}
",
                                        "name": "GeneratedFiles.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GeneratedFiles.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
}
",
                                        "name": "GetBasicSolutionFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetBasicSolutionFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<FernApi.Language, FernApi.v2.v3.FileInfoV2 | undefined>;
}
",
                                        "name": "GetBasicSolutionFileResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetBasicSolutionFileResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetFunctionSignatureRequest {
    functionSignature: FernApi.v2.v3.FunctionSignature;
}
",
                                        "name": "GetFunctionSignatureRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetFunctionSignatureRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<FernApi.Language, string | undefined>;
}
",
                                        "name": "GetFunctionSignatureResponse.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetFunctionSignatureResponse.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetGeneratedTestCaseFileRequest {
    template?: FernApi.v2.v3.TestCaseTemplate;
    testCase: FernApi.v2.v3.TestCaseV2;
}
",
                                        "name": "GetGeneratedTestCaseFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetGeneratedTestCaseFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface GetGeneratedTestCaseTemplateFileRequest {
    template: FernApi.v2.v3.TestCaseTemplate;
}
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface LightweightProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: FernApi.VariableType[];
}
",
                                        "name": "LightweightProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "LightweightProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface NonVoidFunctionDefinition {
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "NonVoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "NonVoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface NonVoidFunctionSignature {
    parameters: FernApi.v2.v3.Parameter[];
    returnType: FernApi.VariableType;
}
",
                                        "name": "NonVoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "NonVoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface Parameter {
    parameterId: FernApi.v2.v3.ParameterId;
    name: string;
    variableType: FernApi.VariableType;
}
",
                                        "name": "Parameter.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "Parameter.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type ParameterId = string;
",
                                        "name": "ParameterId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "ParameterId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface ProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: FernApi.Language[];
    customFiles: FernApi.v2.v3.CustomFiles;
    generatedFiles: FernApi.v2.v3.GeneratedFiles;
    customTestCaseTemplates: FernApi.v2.v3.TestCaseTemplate[];
    testcases: FernApi.v2.v3.TestCaseV2[];
    isPublic: boolean;
}
",
                                        "name": "ProblemInfoV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "ProblemInfoV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                        "name": "TestCaseExpects.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseExpects.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type TestCaseFunction = FernApi.v2.v3.TestCaseFunction.WithActualResult | FernApi.v2.v3.TestCaseFunction.Custom;
export declare namespace TestCaseFunction {
    interface WithActualResult extends FernApi.v2.v3.TestCaseWithActualResultImplementation {
        type: \\"withActualResult\\";
    }
    interface Custom extends FernApi.v2.v3.VoidFunctionDefinition {
        type: \\"custom\\";
    }
}
",
                                        "name": "TestCaseFunction.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseFunction.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type TestCaseId = string;
",
                                        "name": "TestCaseId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseImplementation {
    description: FernApi.v2.v3.TestCaseImplementationDescription;
    function: FernApi.v2.v3.TestCaseFunction;
}
",
                                        "name": "TestCaseImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseImplementationDescription {
    boards: FernApi.v2.v3.TestCaseImplementationDescriptionBoard[];
}
",
                                        "name": "TestCaseImplementationDescription.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementationDescription.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type TestCaseImplementationDescriptionBoard = FernApi.v2.v3.TestCaseImplementationDescriptionBoard.Html | FernApi.v2.v3.TestCaseImplementationDescriptionBoard.ParamId;
export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }
    interface ParamId {
        type: \\"paramId\\";
        value: FernApi.v2.v3.ParameterId;
    }
}
",
                                        "name": "TestCaseImplementationDescriptionBoard.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementationDescriptionBoard.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export declare type TestCaseImplementationReference = FernApi.v2.v3.TestCaseImplementationReference.TemplateId | FernApi.v2.v3.TestCaseImplementationReference.Implementation;
export declare namespace TestCaseImplementationReference {
    interface TemplateId {
        type: \\"templateId\\";
        value: FernApi.v2.v3.TestCaseTemplateId;
    }
    interface Implementation extends FernApi.v2.v3.TestCaseImplementation {
        type: \\"implementation\\";
    }
}
",
                                        "name": "TestCaseImplementationReference.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseImplementationReference.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseMetadata {
    id: FernApi.v2.v3.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                        "name": "TestCaseMetadata.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseMetadata.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseTemplate {
    templateId: FernApi.v2.v3.TestCaseTemplateId;
    name: string;
    implementation: FernApi.v2.v3.TestCaseImplementation;
}
",
                                        "name": "TestCaseTemplate.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseTemplate.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type TestCaseTemplateId = string;
",
                                        "name": "TestCaseTemplateId.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseTemplateId.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseV2 {
    metadata: FernApi.v2.v3.TestCaseMetadata;
    implementation: FernApi.v2.v3.TestCaseImplementationReference;
    arguments: Record<FernApi.v2.v3.ParameterId, FernApi.VariableValue>;
    expects?: FernApi.v2.v3.TestCaseExpects;
}
",
                                        "name": "TestCaseV2.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseV2.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface TestCaseWithActualResultImplementation {
    getActualResult: FernApi.v2.v3.NonVoidFunctionDefinition;
    assertCorrectnessCheck: FernApi.v2.v3.AssertCorrectnessCheck;
}
",
                                        "name": "TestCaseWithActualResultImplementation.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "TestCaseWithActualResultImplementation.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface VoidFunctionDefinition {
    parameters: FernApi.v2.v3.Parameter[];
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinition.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionDefinition.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: FernApi.v2.v3.Parameter[];
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface VoidFunctionSignature {
    parameters: FernApi.v2.v3.Parameter[];
}
",
                                        "name": "VoidFunctionSignature.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionSignature.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as FernApi from \\"../../../../../../..\\";
export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: FernApi.v2.v3.Parameter[];
    actualResultType: FernApi.VariableType;
}
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.js",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                        "name": "index.d.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./TestCaseTemplateId\\"), exports);
__exportStar(require(\\"./TestCaseId\\"), exports);
__exportStar(require(\\"./ParameterId\\"), exports);
__exportStar(require(\\"./ProblemInfoV2\\"), exports);
__exportStar(require(\\"./LightweightProblemInfoV2\\"), exports);
__exportStar(require(\\"./CreateProblemRequestV2\\"), exports);
__exportStar(require(\\"./TestCaseV2\\"), exports);
__exportStar(require(\\"./TestCaseExpects\\"), exports);
__exportStar(require(\\"./TestCaseImplementationReference\\"), exports);
__exportStar(require(\\"./BasicTestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseTemplate\\"), exports);
__exportStar(require(\\"./TestCaseImplementation\\"), exports);
__exportStar(require(\\"./TestCaseFunction\\"), exports);
__exportStar(require(\\"./TestCaseWithActualResultImplementation\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./Parameter\\"), exports);
__exportStar(require(\\"./NonVoidFunctionDefinition\\"), exports);
__exportStar(require(\\"./VoidFunctionSignature\\"), exports);
__exportStar(require(\\"./NonVoidFunctionSignature\\"), exports);
__exportStar(require(\\"./VoidFunctionSignatureThatTakesActualResult\\"), exports);
__exportStar(require(\\"./AssertCorrectnessCheck\\"), exports);
__exportStar(require(\\"./DeepEqualityCorrectnessCheck\\"), exports);
__exportStar(require(\\"./VoidFunctionDefinitionThatTakesActualResult\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescription\\"), exports);
__exportStar(require(\\"./TestCaseImplementationDescriptionBoard\\"), exports);
__exportStar(require(\\"./TestCaseMetadata\\"), exports);
__exportStar(require(\\"./FunctionImplementationForMultipleLanguages\\"), exports);
__exportStar(require(\\"./FunctionImplementation\\"), exports);
__exportStar(require(\\"./GeneratedFiles\\"), exports);
__exportStar(require(\\"./CustomFiles\\"), exports);
__exportStar(require(\\"./BasicCustomFiles\\"), exports);
__exportStar(require(\\"./Files\\"), exports);
__exportStar(require(\\"./FileInfoV2\\"), exports);
__exportStar(require(\\"./DefaultProvidedFile\\"), exports);
__exportStar(require(\\"./FunctionSignature\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureRequest\\"), exports);
__exportStar(require(\\"./GetFunctionSignatureResponse\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileRequest\\"), exports);
__exportStar(require(\\"./GetBasicSolutionFileResponse\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseFileRequest\\"), exports);
__exportStar(require(\\"./GetGeneratedTestCaseTemplateFileRequest\\"), exports);
",
                                        "name": "index.js",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "types",
                                    "type": "directory",
                                  },
                                ],
                                "name": "problem",
                                "type": "directory",
                              },
                            ],
                            "name": "resources",
                            "type": "directory",
                          },
                        ],
                        "name": "v3",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                ],
                "name": "v2",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export interface BasicAuth {
    username: string;
    password: string;
}
export declare const BasicAuth: {
    toAuthorizationHeader: (basicAuth: BasicAuth | undefined) => string | undefined;
    fromAuthorizationHeader: (header: string) => BasicAuth;
};
",
                "name": "BasicAuth.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BasicAuth = void 0;
const js_base64_1 = require(\\"js-base64\\");
const BASIC_AUTH_HEADER_PREFIX = /^Basic /i;
exports.BasicAuth = {
    toAuthorizationHeader: (basicAuth) => {
        if (basicAuth == null) {
            return undefined;
        }
        const token = js_base64_1.Base64.encode(\`\${basicAuth.username}:\${basicAuth.password}\`);
        return \`Basic \${token}\`;
    },
    fromAuthorizationHeader: (header) => {
        const credentials = header.replace(BASIC_AUTH_HEADER_PREFIX, \\"\\");
        const decoded = js_base64_1.Base64.decode(credentials);
        const [username, password] = decoded.split(\\":\\", 2);
        if (username == null || password == null) {
            throw new Error(\\"Invalid basic auth\\");
        }
        return {
            username,
            password,
        };
    },
};
",
                "name": "BasicAuth.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type BearerToken = string;
export declare const BearerToken: {
    toAuthorizationHeader: (token: BearerToken | undefined) => string | undefined;
    fromAuthorizationHeader: (header: string) => BearerToken;
};
",
                "name": "BearerToken.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BearerToken = void 0;
const BEARER_AUTH_HEADER_PREFIX = /^Bearer /i;
exports.BearerToken = {
    toAuthorizationHeader: (token) => {
        if (token == null) {
            return undefined;
        }
        return \`Bearer \${token}\`;
    },
    fromAuthorizationHeader: (header) => {
        return header.replace(BEARER_AUTH_HEADER_PREFIX, \\"\\").trim();
    },
};
",
                "name": "BearerToken.js",
                "type": "file",
              },
              Object {
                "contents": "export { BasicAuth } from \\"./BasicAuth\\";
export { BearerToken } from \\"./BearerToken\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.BearerToken = exports.BasicAuth = void 0;
var BasicAuth_1 = require(\\"./BasicAuth\\");
Object.defineProperty(exports, \\"BasicAuth\\", { enumerable: true, get: function () { return BasicAuth_1.BasicAuth; } });
var BearerToken_1 = require(\\"./BearerToken\\");
Object.defineProperty(exports, \\"BearerToken\\", { enumerable: true, get: function () { return BearerToken_1.BearerToken; } });
",
                "name": "index.js",
                "type": "file",
              },
            ],
            "name": "auth",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export declare type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;
export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}
export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "APIResponse.js",
                "type": "file",
              },
              Object {
                "contents": "import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import { AxiosAdapter, AxiosProgressEvent } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";
export declare type FetchFunction = <R = unknown>(args: Fetcher.Args) => Promise<APIResponse<R, Fetcher.Error>>;
export declare namespace Fetcher {
    interface Args {
        url: string;
        method: string;
        contentType?: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
        responseType?: \\"json\\" | \\"blob\\";
        adapter?: AxiosAdapter;
        onUploadProgress?: (event: AxiosProgressEvent) => void;
    }
    type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;
    interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }
    interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }
    interface TimeoutError {
        reason: \\"timeout\\";
    }
    interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}
export declare const fetcher: FetchFunction;
",
                "name": "Fetcher.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.fetcher = void 0;
const axios_1 = __importDefault(require(\\"axios\\"));
function fetcherImpl(args) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        const headers = {};
        if (args.body !== undefined && args.contentType != null) {
            headers[\\"Content-Type\\"] = args.contentType;
        }
        if (args.headers != null) {
            for (const [key, value] of Object.entries(args.headers)) {
                if (value != null) {
                    headers[key] = value;
                }
            }
        }
        try {
            const response = yield (0, axios_1.default)({
                url: args.url,
                params: args.queryParameters,
                method: args.method,
                headers,
                data: args.body,
                validateStatus: () => true,
                transformResponse: (response) => response,
                timeout: args.timeoutMs,
                transitional: {
                    clarifyTimeoutError: true,
                },
                withCredentials: args.withCredentials,
                adapter: args.adapter,
                onUploadProgress: args.onUploadProgress,
                maxBodyLength: Infinity,
                maxContentLength: Infinity,
                responseType: (_a = args.responseType) !== null && _a !== void 0 ? _a : \\"json\\",
            });
            let body;
            if (args.responseType === \\"blob\\") {
                body = response.data;
            }
            else if (response.data != null && response.data.length > 0) {
                try {
                    body = (_b = JSON.parse(response.data)) !== null && _b !== void 0 ? _b : undefined;
                }
                catch (_c) {
                    return {
                        ok: false,
                        error: {
                            reason: \\"non-json\\",
                            statusCode: response.status,
                            rawBody: response.data,
                        },
                    };
                }
            }
            if (response.status >= 200 && response.status < 400) {
                return {
                    ok: true,
                    body: body,
                };
            }
            else {
                return {
                    ok: false,
                    error: {
                        reason: \\"status-code\\",
                        statusCode: response.status,
                        body,
                    },
                };
            }
        }
        catch (error) {
            if (error.code === \\"ETIMEDOUT\\") {
                return {
                    ok: false,
                    error: {
                        reason: \\"timeout\\",
                    },
                };
            }
            return {
                ok: false,
                error: {
                    reason: \\"unknown\\",
                    errorMessage: error.message,
                },
            };
        }
    });
}
exports.fetcher = fetcherImpl;
",
                "name": "Fetcher.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);
export declare const Supplier: {
    get: <T>(supplier: Supplier<T>) => Promise<T>;
};
",
                "name": "Supplier.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = void 0;
exports.Supplier = {
    get: (supplier) => __awaiter(void 0, void 0, void 0, function* () {
        if (typeof supplier === \\"function\\") {
            return supplier();
        }
        else {
            return supplier;
        }
    }),
};
",
                "name": "Supplier.js",
                "type": "file",
              },
              Object {
                "contents": "export type { APIResponse } from \\"./APIResponse\\";
export { fetcher } from \\"./Fetcher\\";
export type { Fetcher, FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = exports.fetcher = void 0;
var Fetcher_1 = require(\\"./Fetcher\\");
Object.defineProperty(exports, \\"fetcher\\", { enumerable: true, get: function () { return Fetcher_1.fetcher; } });
var Supplier_1 = require(\\"./Supplier\\");
Object.defineProperty(exports, \\"Supplier\\", { enumerable: true, get: function () { return Supplier_1.Supplier; } });
",
                "name": "index.js",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * from \\"./fetcher\\";
export * from \\"./auth\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./fetcher\\"), exports);
__exportStar(require(\\"./auth\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare const FernApiEnvironment: {
    readonly Prod: \\"prod.trace.com\\";
    /**
     * i'm staging
     */
    readonly Staging: \\"staging.trace.com\\";
};
export declare type FernApiEnvironment = typeof FernApiEnvironment.Prod | typeof FernApiEnvironment.Staging;
",
        "name": "environments.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiEnvironment = void 0;
exports.FernApiEnvironment = {
    Prod: \\"prod.trace.com\\",
    /**
     * i'm staging
     */
    Staging: \\"staging.trace.com\\",
};
",
        "name": "environments.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;
    constructor({ message, statusCode, body }: {
        message?: string;
        statusCode?: number;
        body?: unknown;
    });
}
",
            "name": "FernApiError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiError = void 0;
class FernApiError extends Error {
    constructor({ message, statusCode, body }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }
        if (body !== undefined) {
            this.body = body;
        }
    }
}
exports.FernApiError = FernApiError;
function buildMessage({ message, statusCode, body, }) {
    let lines = [];
    if (message != null) {
        lines.push(message);
    }
    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }
    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }
    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.js",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiTimeoutError extends Error {
    constructor();
}
",
            "name": "FernApiTimeoutError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = void 0;
class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
exports.FernApiTimeoutError = FernApiTimeoutError;
",
            "name": "FernApiTimeoutError.js",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = void 0;
var FernApiError_1 = require(\\"./FernApiError\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return FernApiError_1.FernApiError; } });
var FernApiTimeoutError_1 = require(\\"./FernApiTimeoutError\\");
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return FernApiTimeoutError_1.FernApiTimeoutError; } });
",
            "name": "index.js",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiClient } from \\"./Client\\";
export { FernApiEnvironment } from \\"./environments\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = exports.FernApiEnvironment = exports.FernApiClient = exports.FernApi = void 0;
exports.FernApi = __importStar(require(\\"./api\\"));
var Client_1 = require(\\"./Client\\");
Object.defineProperty(exports, \\"FernApiClient\\", { enumerable: true, get: function () { return Client_1.FernApiClient; } });
var environments_1 = require(\\"./environments\\");
Object.defineProperty(exports, \\"FernApiEnvironment\\", { enumerable: true, get: function () { return environments_1.FernApiEnvironment; } });
var errors_1 = require(\\"./errors\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return errors_1.FernApiError; } });
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return errors_1.FernApiTimeoutError; } });
",
        "name": "index.js",
        "type": "file",
      },
    ],
    "name": "dist",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"name\\": \\"@fern/api\\",
    \\"version\\": \\"0.0.1\\",
    \\"repository\\": \\"https://github.com/fern/api}\\",
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"dependencies\\": {
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"@ungap/url-search-params\\": \\"0.2.2\\",
        \\"axios\\": \\"1.4.0\\",
        \\"js-base64\\": \\"3.7.2\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
    "name": "package.json",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"./environments\\";
import * as core from \\"./core\\";
import { Admin } from \\"./api/resources/admin/client/Client\\";
import { Homepage } from \\"./api/resources/homepage/client/Client\\";
import { Migration } from \\"./api/resources/migration/client/Client\\";
import { Playlist } from \\"./api/resources/playlist/client/Client\\";
import { Problem } from \\"./api/resources/problem/client/Client\\";
import { Submission } from \\"./api/resources/submission/client/Client\\";
import { Sysprop } from \\"./api/resources/sysprop/client/Client\\";
import { V2 } from \\"./api/resources/v2/client/Client\\";

export declare namespace FernApiClient {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class FernApiClient {
    constructor(protected readonly _options: FernApiClient.Options) {}

    protected _admin: Admin | undefined;

    public get admin(): Admin {
        return (this._admin ??= new Admin(this._options));
    }

    protected _homepage: Homepage | undefined;

    public get homepage(): Homepage {
        return (this._homepage ??= new Homepage(this._options));
    }

    protected _migration: Migration | undefined;

    public get migration(): Migration {
        return (this._migration ??= new Migration(this._options));
    }

    protected _playlist: Playlist | undefined;

    public get playlist(): Playlist {
        return (this._playlist ??= new Playlist(this._options));
    }

    protected _problem: Problem | undefined;

    public get problem(): Problem {
        return (this._problem ??= new Problem(this._options));
    }

    protected _submission: Submission | undefined;

    public get submission(): Submission {
        return (this._submission ??= new Submission(this._options));
    }

    protected _sysprop: Sysprop | undefined;

    public get sysprop(): Sysprop {
        return (this._sysprop ??= new Sysprop(this._options));
    }

    protected _v2: V2 | undefined;

    public get v2(): V2 {
        return (this._v2 ??= new V2(this._options));
    }
}
",
        "name": "Client.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";
import { default as URLSearchParams } from \\"@ungap/url-search-params\\";

export declare namespace Admin {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Admin {
    constructor(protected readonly _options: Admin.Options) {}

    public async updateTestSubmissionStatus(
        submissionId: FernApi.SubmissionId,
        request: FernApi.TestSubmissionStatus,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-test-submission-status/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async sendTestSubmissionUpdate(
        submissionId: FernApi.SubmissionId,
        request: FernApi.TestSubmissionUpdate,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-test-submission-status-v2/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async updateWorkspaceSubmissionStatus(
        submissionId: FernApi.SubmissionId,
        request: FernApi.WorkspaceSubmissionStatus,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-workspace-submission-status/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async sendWorkspaceSubmissionUpdate(
        submissionId: FernApi.SubmissionId,
        request: FernApi.WorkspaceSubmissionUpdate,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-workspace-submission-status-v2/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async storeTracedTestCase(
        submissionId: FernApi.SubmissionId,
        testCaseId: string,
        request: FernApi.StoreTracedTestCaseRequest,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const { someQueryParam, referenceToOptionalString, ..._body } = request;
        const _queryParams = new URLSearchParams();
        if (someQueryParam != null) {
            _queryParams.append(\\"some-query-param\\", someQueryParam);
        }

        if (referenceToOptionalString != null) {
            _queryParams.append(\\"reference-to-optional-string\\", referenceToOptionalString);
        }

        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-test-trace/submission/\${submissionId}/testCase/\${testCaseId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            queryParameters: _queryParams,
            body: _body,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async storeTracedTestCaseV2(
        submissionId: FernApi.SubmissionId,
        testCaseId: FernApi.v2.TestCaseId,
        request: FernApi.TraceResponseV2[],
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-test-trace-v2/submission/\${submissionId}/testCase/\${testCaseId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async storeTracedWorkspace(
        submissionId: FernApi.SubmissionId,
        request: FernApi.StoreTracedWorkspaceRequest,
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-workspace-trace/submission/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async storeTracedWorkspaceV2(
        submissionId: FernApi.SubmissionId,
        request: FernApi.TraceResponseV2[],
        requestOptions?: Admin.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/admin/store-workspace-trace-v2/submission/\${submissionId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../..\\";

export interface StoreTracedTestCaseRequest {
    someQueryParam?: string;
    referenceToOptionalString?: FernApi.OptionalString;
    result: FernApi.TestCaseResultWithStdout;
    traceResponses: FernApi.TraceResponse[];
}
",
                            "name": "StoreTracedTestCaseRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../..\\";

export interface StoreTracedWorkspaceRequest {
    workspaceRunDetails: FernApi.WorkspaceRunDetails;
    traceResponses: FernApi.TraceResponse[];
}
",
                            "name": "StoreTracedWorkspaceRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { StoreTracedTestCaseRequest } from \\"./StoreTracedTestCaseRequest\\";
export { StoreTracedWorkspaceRequest } from \\"./StoreTracedWorkspaceRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type OptionalString = string | undefined;
",
                        "name": "OptionalString.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./OptionalString\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "admin",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BinaryTreeNodeAndTreeValue {
    nodeId: FernApi.NodeId;
    fullTree: FernApi.BinaryTreeValue;
}
",
                        "name": "BinaryTreeNodeAndTreeValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BinaryTreeNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    right?: FernApi.NodeId;
    left?: FernApi.NodeId;
}
",
                        "name": "BinaryTreeNodeValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BinaryTreeValue {
    root?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.BinaryTreeNodeValue>;
}
",
                        "name": "BinaryTreeValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * ISO 8601 date; formatted YYYY-MM-DD (i.e. 2012-02-01)
 */
export type Date_ = string;
",
                        "name": "Date_.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DebugKeyValuePairs {
    key: FernApi.DebugVariableValue;
    value: FernApi.DebugVariableValue;
}
",
                        "name": "DebugKeyValuePairs.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DebugMapValue {
    keyValuePairs: FernApi.DebugKeyValuePairs[];
}
",
                        "name": "DebugMapValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type DebugVariableValue =
    | FernApi.DebugVariableValue.IntegerValue
    | FernApi.DebugVariableValue.BooleanValue
    | FernApi.DebugVariableValue.DoubleValue
    | FernApi.DebugVariableValue.StringValue
    | FernApi.DebugVariableValue.CharValue
    | FernApi.DebugVariableValue.MapValue
    | FernApi.DebugVariableValue.ListValue
    | FernApi.DebugVariableValue.BinaryTreeNodeValue
    | FernApi.DebugVariableValue.SinglyLinkedListNodeValue
    | FernApi.DebugVariableValue.DoublyLinkedListNodeValue
    | FernApi.DebugVariableValue.UndefinedValue
    | FernApi.DebugVariableValue.NullValue
    | FernApi.DebugVariableValue.GenericValue;

export declare namespace DebugVariableValue {
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }

    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }

    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }

    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }

    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }

    interface MapValue extends FernApi.DebugMapValue {
        type: \\"mapValue\\";
    }

    interface ListValue {
        type: \\"listValue\\";
        value: FernApi.DebugVariableValue[];
    }

    interface BinaryTreeNodeValue extends FernApi.BinaryTreeNodeAndTreeValue {
        type: \\"binaryTreeNodeValue\\";
    }

    interface SinglyLinkedListNodeValue extends FernApi.SinglyLinkedListNodeAndListValue {
        type: \\"singlyLinkedListNodeValue\\";
    }

    interface DoublyLinkedListNodeValue extends FernApi.DoublyLinkedListNodeAndListValue {
        type: \\"doublyLinkedListNodeValue\\";
    }

    interface UndefinedValue {
        type: \\"undefinedValue\\";
    }

    interface NullValue {
        type: \\"nullValue\\";
    }

    interface GenericValue extends FernApi.GenericValue {
        type: \\"genericValue\\";
    }
}
",
                        "name": "DebugVariableValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DoublyLinkedListNodeAndListValue {
    nodeId: FernApi.NodeId;
    fullList: FernApi.DoublyLinkedListValue;
}
",
                        "name": "DoublyLinkedListNodeAndListValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DoublyLinkedListNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    next?: FernApi.NodeId;
    prev?: FernApi.NodeId;
}
",
                        "name": "DoublyLinkedListNodeValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface DoublyLinkedListValue {
    head?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.DoublyLinkedListNodeValue>;
}
",
                        "name": "DoublyLinkedListValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FileInfo {
    filename: string;
    contents: string;
}
",
                        "name": "FileInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GenericValue {
    stringifiedType?: string;
    stringifiedValue: string;
}
",
                        "name": "GenericValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface KeyValuePair {
    key: FernApi.VariableValue;
    value: FernApi.VariableValue;
}
",
                        "name": "KeyValuePair.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     FernApi.Language.Java
 */
export type Language = \\"JAVA\\" | \\"JAVASCRIPT\\" | \\"PYTHON\\";

export const Language = {
    Java: \\"JAVA\\",
    Javascript: \\"JAVASCRIPT\\",
    Python: \\"PYTHON\\",
} as const;
",
                        "name": "Language.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ListType {
    valueType: FernApi.VariableType;
    /** Whether this list is fixed-size (for languages that supports fixed-size lists). Defaults to false. */
    isFixedLength?: boolean;
}
",
                        "name": "ListType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MapType {
    keyType: FernApi.VariableType;
    valueType: FernApi.VariableType;
}
",
                        "name": "MapType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface MapValue {
    keyValuePairs: FernApi.KeyValuePair[];
}
",
                        "name": "MapValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type NodeId = string;
",
                        "name": "NodeId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ProblemId = string;
",
                        "name": "ProblemId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         \\"foo\\": \\"hello\\",
 *         \\"bar\\": {
 *             \\"yo\\": 123
 *         }
 *     }
 */
export type RandomUnknownType = unknown;
",
                        "name": "RandomUnknownType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SinglyLinkedListNodeAndListValue {
    nodeId: FernApi.NodeId;
    fullList: FernApi.SinglyLinkedListValue;
}
",
                        "name": "SinglyLinkedListNodeAndListValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SinglyLinkedListNodeValue {
    nodeId: FernApi.NodeId;
    val: number;
    next?: FernApi.NodeId;
}
",
                        "name": "SinglyLinkedListNodeValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SinglyLinkedListValue {
    head?: FernApi.NodeId;
    nodes: Record<FernApi.NodeId, FernApi.SinglyLinkedListNodeValue>;
}
",
                        "name": "SinglyLinkedListValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestCase {
    id: string;
    params: FernApi.VariableValue[];
}
",
                        "name": "TestCase.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestCaseWithExpectedResult {
    testCase: FernApi.TestCase;
    expectedResult: FernApi.VariableValue;
}
",
                        "name": "TestCaseWithExpectedResult.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     \\"user12345\\"
 */
export type UserId = string;
",
                        "name": "UserId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type VariableType =
    | FernApi.VariableType.MemberWithColon
    | FernApi.VariableType.IntegerType
    | FernApi.VariableType.DoubleType
    | FernApi.VariableType.BooleanType
    | FernApi.VariableType.StringType
    | FernApi.VariableType.CharType
    | FernApi.VariableType.ListType
    | FernApi.VariableType.MapType
    | FernApi.VariableType.BinaryTreeType
    | FernApi.VariableType.SinglyLinkedListType
    | FernApi.VariableType.DoublyLinkedListType;

export declare namespace VariableType {
    interface MemberWithColon {
        type: \\"member:with:colon\\";
    }

    interface IntegerType {
        type: \\"integerType\\";
    }

    interface DoubleType {
        type: \\"doubleType\\";
    }

    interface BooleanType {
        type: \\"booleanType\\";
    }

    interface StringType {
        type: \\"stringType\\";
    }

    interface CharType {
        type: \\"charType\\";
    }

    interface ListType extends FernApi.ListType {
        type: \\"listType\\";
    }

    interface MapType extends FernApi.MapType {
        type: \\"mapType\\";
    }

    interface BinaryTreeType {
        type: \\"binaryTreeType\\";
    }

    interface SinglyLinkedListType {
        type: \\"singlyLinkedListType\\";
    }

    interface DoublyLinkedListType {
        type: \\"doublyLinkedListType\\";
    }
}
",
                        "name": "VariableType.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type VariableValue =
    | FernApi.VariableValue.IntegerValue
    | FernApi.VariableValue.BooleanValue
    | FernApi.VariableValue.DoubleValue
    | FernApi.VariableValue.StringValue
    | FernApi.VariableValue.CharValue
    | FernApi.VariableValue.MapValue
    | FernApi.VariableValue.ListValue
    | FernApi.VariableValue.BinaryTreeValue
    | FernApi.VariableValue.SinglyLinkedListValue
    | FernApi.VariableValue.DoublyLinkedListValue
    | FernApi.VariableValue.NullValue;

export declare namespace VariableValue {
    interface IntegerValue {
        type: \\"integerValue\\";
        value: number;
    }

    interface BooleanValue {
        type: \\"booleanValue\\";
        value: boolean;
    }

    interface DoubleValue {
        type: \\"doubleValue\\";
        value: number;
    }

    interface StringValue {
        type: \\"stringValue\\";
        value: string;
    }

    interface CharValue {
        type: \\"charValue\\";
        value: string;
    }

    interface MapValue extends FernApi.MapValue {
        type: \\"mapValue\\";
    }

    interface ListValue {
        type: \\"listValue\\";
        value: FernApi.VariableValue[];
    }

    interface BinaryTreeValue extends FernApi.BinaryTreeValue {
        type: \\"binaryTreeValue\\";
    }

    interface SinglyLinkedListValue extends FernApi.SinglyLinkedListValue {
        type: \\"singlyLinkedListValue\\";
    }

    interface DoublyLinkedListValue extends FernApi.DoublyLinkedListValue {
        type: \\"doublyLinkedListValue\\";
    }

    interface NullValue {
        type: \\"nullValue\\";
    }
}
",
                        "name": "VariableValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./UserId\\";
export * from \\"./ProblemId\\";
export * from \\"./NodeId\\";
export * from \\"./VariableType\\";
export * from \\"./ListType\\";
export * from \\"./MapType\\";
export * from \\"./VariableValue\\";
export * from \\"./DebugVariableValue\\";
export * from \\"./GenericValue\\";
export * from \\"./MapValue\\";
export * from \\"./KeyValuePair\\";
export * from \\"./BinaryTreeValue\\";
export * from \\"./BinaryTreeNodeValue\\";
export * from \\"./BinaryTreeNodeAndTreeValue\\";
export * from \\"./SinglyLinkedListValue\\";
export * from \\"./SinglyLinkedListNodeValue\\";
export * from \\"./SinglyLinkedListNodeAndListValue\\";
export * from \\"./DoublyLinkedListValue\\";
export * from \\"./DoublyLinkedListNodeValue\\";
export * from \\"./DoublyLinkedListNodeAndListValue\\";
export * from \\"./DebugMapValue\\";
export * from \\"./DebugKeyValuePairs\\";
export * from \\"./TestCase\\";
export * from \\"./TestCaseWithExpectedResult\\";
export * from \\"./FileInfo\\";
export * from \\"./Language\\";
export * from \\"./RandomUnknownType\\";
export * from \\"./Date_\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "commons",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Homepage {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Homepage {
    constructor(protected readonly _options: Homepage.Options) {}

    public async getHomepageProblems(requestOptions?: Homepage.RequestOptions): Promise<FernApi.ProblemId[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/homepage-problems\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.ProblemId[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async setHomepageProblems(
        request: FernApi.ProblemId[],
        requestOptions?: Homepage.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/homepage-problems\\"
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                ],
                "name": "homepage",
                "type": "directory",
              },
              Object {
                "contents": "export * as admin from \\"./admin\\";
export * from \\"./admin/types\\";
export * as commons from \\"./commons\\";
export * from \\"./commons/types\\";
export * as langServer from \\"./langServer\\";
export * from \\"./langServer/types\\";
export * as migration from \\"./migration\\";
export * from \\"./migration/types\\";
export * as playlist from \\"./playlist\\";
export * from \\"./playlist/types\\";
export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as submission from \\"./submission\\";
export * from \\"./submission/types\\";
export * as v2 from \\"./v2\\";
export * from \\"./playlist/errors\\";
export * as homepage from \\"./homepage\\";
export * as sysprop from \\"./sysprop\\";
export * from \\"./admin/client/requests\\";
export * from \\"./playlist/client/requests\\";
export * from \\"./problem/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": "export * from \\"./types\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface LangServerRequest {
    request?: unknown;
}
",
                        "name": "LangServerRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface LangServerResponse {
    response?: unknown;
}
",
                        "name": "LangServerResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./LangServerRequest\\";
export * from \\"./LangServerResponse\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "langServer",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Migration {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Migration {
    constructor(protected readonly _options: Migration.Options) {}

    public async getAttemptedMigrations(
        serviceParam: string,
        requestOptions?: Migration.RequestOptions
    ): Promise<FernApi.Migration[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/migration-info/\${serviceParam}/tail/all\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.Migration[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Migration {
    name: string;
    status: FernApi.MigrationStatus;
}
",
                        "name": "Migration.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type MigrationStatus = \\"RUNNING\\" | \\"FAILED\\" | \\"FINISHED\\";

export const MigrationStatus = {
    Running: \\"RUNNING\\",
    Failed: \\"FAILED\\",
    Finished: \\"FINISHED\\",
} as const;
",
                        "name": "MigrationStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./MigrationStatus\\";
export * from \\"./Migration\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "migration",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Playlist {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Playlist {
    constructor(protected readonly _options: Playlist.Options) {}

    /**
     * Create a new playlist
     */
    public async createPlaylist(
        serviceParam: number,
        request: FernApi.PlaylistCreateRequestWrapper,
        requestOptions?: Playlist.RequestOptions
    ): Promise<FernApi.Playlist> {
        const { multiple, multipleOptional, aliasQueryParam, body: _body } = request;
        const _queryParams = new URLSearchParams();
        if (Array.isArray(multiple)) {
            for (const _item of multiple) {
                _queryParams.append(\\"multiple\\", _item.toString());
            }
        } else {
            _queryParams.append(\\"multiple\\", multiple.toString());
        }

        if (multipleOptional != null) {
            if (Array.isArray(multipleOptional)) {
                for (const _item of multipleOptional) {
                    _queryParams.append(\\"multipleOptional\\", _item.toString());
                }
            } else {
                _queryParams.append(\\"multipleOptional\\", multipleOptional.toString());
            }
        }

        _queryParams.append(\\"aliasQueryParam\\", aliasQueryParam.toString());
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/v2/playlist/\${serviceParam}/create\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            queryParameters: _queryParams,
            body: _body,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.Playlist;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns the user's playlists
     */
    public async getPlaylists(
        serviceParam: number,
        request: FernApi.GetPlaylistsRequest,
        requestOptions?: Playlist.RequestOptions
    ): Promise<FernApi.Playlist[]> {
        const { limit, otherField } = request;
        const _queryParams = new URLSearchParams();
        if (limit != null) {
            _queryParams.append(\\"limit\\", limit.toString());
        }

        _queryParams.append(\\"otherField\\", otherField);
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/v2/playlist/\${serviceParam}/all\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            queryParameters: _queryParams,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.Playlist[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     * @throws {@link FernApi.UnauthorizedError}
     */
    public async getPlaylist(
        serviceParam: number,
        playlistId: FernApi.PlaylistId,
        request: FernApi.GetPlaylistRequest = {},
        requestOptions?: Playlist.RequestOptions
    ): Promise<FernApi.Playlist> {
        const { optionalQueryParam } = request;
        const _queryParams = new URLSearchParams();
        if (optionalQueryParam != null) {
            _queryParams.append(\\"optionalQueryParam\\", optionalQueryParam.toString());
        }

        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/v2/playlist/\${serviceParam}/\${playlistId}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            queryParameters: _queryParams,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.Playlist;
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"PlaylistIdNotFoundError\\":
                    throw new FernApi.PlaylistIdNotFoundError(
                        _response.error.body as FernApi.PlaylistIdNotFoundErrorBody
                    );
                case \\"UnauthorizedError\\":
                    throw new FernApi.UnauthorizedError();
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Updates a playlist
     * @throws {@link FernApi.PlaylistIdNotFoundError}
     */
    public async updatePlaylist(
        serviceParam: number,
        playlistId: FernApi.PlaylistId,
        request?: FernApi.UpdatePlaylistRequest,
        requestOptions?: Playlist.RequestOptions
    ): Promise<FernApi.Playlist | undefined> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/v2/playlist/\${serviceParam}/\${playlistId}\`
            ),
            method: \\"PUT\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request != null ? request : undefined,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.Playlist | undefined;
        }

        if (_response.error.reason === \\"status-code\\") {
            switch ((_response.error.body as any)?.[\\"errorName\\"]) {
                case \\"PlaylistIdNotFoundError\\":
                    throw new FernApi.PlaylistIdNotFoundError(
                        _response.error.body as FernApi.PlaylistIdNotFoundErrorBody
                    );
                default:
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.body,
                    });
            }
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Deletes a playlist
     */
    public async deletePlaylist(
        serviceParam: number,
        playlistId: FernApi.PlaylistId,
        requestOptions?: Playlist.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/v2/playlist/\${serviceParam}/\${playlistId}\`
            ),
            method: \\"DELETE\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetPlaylistRequest {
    optionalQueryParam?: number;
}
",
                            "name": "GetPlaylistRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetPlaylistsRequest {
    limit?: number;
    otherField: string;
}
",
                            "name": "GetPlaylistsRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../..\\";

export interface PlaylistCreateRequestWrapper {
    multiple: number | number[];
    multipleOptional?: boolean | boolean[];
    aliasQueryParam: FernApi.PlaylistId;
    body: FernApi.PlaylistCreateRequest;
}
",
                            "name": "PlaylistCreateRequestWrapper.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { PlaylistCreateRequestWrapper } from \\"./PlaylistCreateRequestWrapper\\";
export { GetPlaylistsRequest } from \\"./GetPlaylistsRequest\\";
export { GetPlaylistRequest } from \\"./GetPlaylistRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";
import * as FernApi from \\"../../..\\";

export class PlaylistIdNotFoundError extends errors.FernApiError {
    constructor(body: FernApi.PlaylistIdNotFoundErrorBody) {
        super({
            statusCode: 404,
            body: body,
        });
        Object.setPrototypeOf(this, PlaylistIdNotFoundError.prototype);
    }
}
",
                        "name": "PlaylistIdNotFoundError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class StringError extends errors.FernApiError {
    constructor(body: string) {
        super({
            statusCode: 401,
            body: body,
        });
        Object.setPrototypeOf(this, StringError.prototype);
    }
}
",
                        "name": "StringError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class UnauthorizedError extends errors.FernApiError {
    constructor() {
        super({
            statusCode: 401,
        });
        Object.setPrototypeOf(this, UnauthorizedError.prototype);
    }
}
",
                        "name": "UnauthorizedError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as errors from \\"../../../../errors\\";

export class UnknownError extends errors.FernApiError {
    constructor(body?: unknown) {
        super({
            statusCode: 401,
            body: body,
        });
        Object.setPrototypeOf(this, UnknownError.prototype);
    }
}
",
                        "name": "UnknownError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistIdNotFoundError\\";
export * from \\"./UnauthorizedError\\";
export * from \\"./UnknownError\\";
export * from \\"./StringError\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "errors",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./errors\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type Color = \\"RED\\" | \\"BLUE\\";

export const Color = {
    Red: \\"RED\\",
    Blue: \\"BLUE\\",
} as const;
",
                        "name": "Color.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type DateUnion = FernApi.DateUnion.Date_ | FernApi.DateUnion.Datetime;

export declare namespace DateUnion {
    interface Date_ {
        type: \\"date\\";
        value: FernApi.Date_;
    }

    interface Datetime {
        type: \\"datetime\\";
        value: string;
    }
}
",
                        "name": "DateUnion.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * @example
 *     {
 *         [FernApi.Color.Red]: true
 *     }
 */
export type MapWithEnumKey = Record<FernApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKey.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * @example
 *     {
 *         [FernApi.Color.Red]: true
 *     }
 */
export type MapWithEnumKeyAndOptionalValue = Record<FernApi.Color, boolean | undefined>;
",
                        "name": "MapWithEnumKeyAndOptionalValue.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface MyObject {
    foo: string;
}
",
                        "name": "MyObject.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ObjectAlias = FernApi.MyObject;
",
                        "name": "ObjectAlias.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Playlist extends FernApi.PlaylistCreateRequest {
    playlist_id: FernApi.PlaylistId;
    \\"owner-id\\": FernApi.UserId;
}
",
                        "name": "Playlist.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface PlaylistCreateRequest {
    name: string;
    problems: FernApi.ProblemId[];
    literal: \\"hello world\\";
}
",
                        "name": "PlaylistCreateRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PlaylistId = number;
",
                        "name": "PlaylistId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type PlaylistIdNotFoundErrorBody = FernApi.PlaylistIdNotFoundErrorBody.PlaylistId;

export declare namespace PlaylistIdNotFoundErrorBody {
    interface PlaylistId {
        type: \\"playlistId\\";
        value: FernApi.PlaylistId;
    }
}
",
                        "name": "PlaylistIdNotFoundErrorBody.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type PlaylistUuid = string;
",
                        "name": "PlaylistUuid.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ReservedKeywordEnum = \\"is\\" | \\"as\\" | \\"date\\";

export const ReservedKeywordEnum = {
    Is: \\"is\\",
    As: \\"as\\",
    Date: \\"date\\",
} as const;
",
                        "name": "ReservedKeywordEnum.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface UpdatePlaylistRequest {
    name: string;
    problems: FernApi.ProblemId[];
}
",
                        "name": "UpdatePlaylistRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./PlaylistId\\";
export * from \\"./PlaylistUuid\\";
export * from \\"./Playlist\\";
export * from \\"./PlaylistCreateRequest\\";
export * from \\"./UpdatePlaylistRequest\\";
export * from \\"./PlaylistIdNotFoundErrorBody\\";
export * from \\"./DateUnion\\";
export * from \\"./ReservedKeywordEnum\\";
export * from \\"./MapWithEnumKey\\";
export * from \\"./MapWithEnumKeyAndOptionalValue\\";
export * from \\"./Color\\";
export * from \\"./ObjectAlias\\";
export * from \\"./MyObject\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "playlist",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Problem {
    constructor(protected readonly _options: Problem.Options) {}

    /**
     * Creates a problem
     */
    public async createProblem(
        request: FernApi.CreateProblemRequest,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.CreateProblemResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problem-crud/create\\"
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.CreateProblemResponse;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Updates a problem
     */
    public async updateProblem(
        problemId: FernApi.ProblemId,
        request: FernApi.CreateProblemRequest,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.UpdateProblemResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problem-crud/update/\${problemId}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.UpdateProblemResponse;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Soft deletes a problem
     */
    public async deleteProblem(problemId: FernApi.ProblemId, requestOptions?: Problem.RequestOptions): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problem-crud/delete/\${problemId}\`
            ),
            method: \\"DELETE\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns default starter files for problem
     */
    public async getDefaultStarterFiles(
        request: FernApi.GetDefaultStarterFilesRequest,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.GetDefaultStarterFilesResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problem-crud/default-starter-files\\"
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            body: request,
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.GetDefaultStarterFilesResponse;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../..\\";

export interface GetDefaultStarterFilesRequest {
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    methodName: string;
}
",
                            "name": "GetDefaultStarterFilesRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { GetDefaultStarterFilesRequest } from \\"./GetDefaultStarterFilesRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type CreateProblemError = FernApi.CreateProblemError.Generic;

export declare namespace CreateProblemError {
    interface Generic extends FernApi.GenericCreateProblemError {
        _type: \\"generic\\";
    }
}
",
                        "name": "CreateProblemError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface CreateProblemRequest {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    testcases: FernApi.TestCaseWithExpectedResult[];
    methodName: string;
}
",
                        "name": "CreateProblemRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type CreateProblemResponse = FernApi.CreateProblemResponse.Success | FernApi.CreateProblemResponse.Error_;

export declare namespace CreateProblemResponse {
    interface Success {
        type: \\"success\\";
        value: FernApi.ProblemId;
    }

    interface Error_ {
        type: \\"error\\";
        value: FernApi.CreateProblemError;
    }
}
",
                        "name": "CreateProblemResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GenericCreateProblemError {
    message: string;
    type: string;
    stacktrace: string;
}
",
                        "name": "GenericCreateProblemError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GetDefaultStarterFilesResponse {
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
}
",
                        "name": "GetDefaultStarterFilesResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ProblemDescription {
    boards: FernApi.ProblemDescriptionBoard[];
}
",
                        "name": "ProblemDescription.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * @example
 *     {
 *         type: \\"html\\",
 *         value: \\"<div>hello world</div>\\"
 *     }
 *
 * @example
 *     {
 *         type: \\"testCaseId\\",
 *         value: \\"test-case-id-1\\"
 *     }
 */
export type ProblemDescriptionBoard =
    | FernApi.ProblemDescriptionBoard.Html
    | FernApi.ProblemDescriptionBoard.Variable
    | FernApi.ProblemDescriptionBoard.TestCaseId;

export declare namespace ProblemDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }

    interface Variable {
        type: \\"variable\\";
        value: FernApi.VariableValue;
    }

    interface TestCaseId {
        type: \\"testCaseId\\";
        value: string;
    }
}
",
                        "name": "ProblemDescriptionBoard.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

/**
 * @example
 *     {
 *         solutionFile: {
 *             filename: \\"hello.txt\\",
 *             contents: \\"I'm some file content\\"
 *         },
 *         readOnlyFiles: []
 *     }
 */
export interface ProblemFiles {
    solutionFile: FernApi.FileInfo;
    readOnlyFiles: FernApi.FileInfo[];
}
",
                        "name": "ProblemFiles.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ProblemInfo {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    files: Record<FernApi.Language, FernApi.ProblemFiles | undefined>;
    inputParams: FernApi.VariableTypeAndName[];
    outputType: FernApi.VariableType;
    testcases: FernApi.TestCaseWithExpectedResult[];
    methodName: string;
    supportsCustomTestCases: boolean;
}
",
                        "name": "ProblemInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ProblemsMap {
    problemsById: Record<FernApi.ProblemId, FernApi.ProblemInfo>;
}
",
                        "name": "ProblemsMap.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface UpdateProblemResponse {
    problemVersion: number;
}
",
                        "name": "UpdateProblemResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface VariableTypeAndName {
    variableType: FernApi.VariableType;
    name: string;
}
",
                        "name": "VariableTypeAndName.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./ProblemInfo\\";
export * from \\"./ProblemsMap\\";
export * from \\"./ProblemDescription\\";
export * from \\"./ProblemDescriptionBoard\\";
export * from \\"./ProblemFiles\\";
export * from \\"./VariableTypeAndName\\";
export * from \\"./CreateProblemRequest\\";
export * from \\"./CreateProblemResponse\\";
export * from \\"./UpdateProblemResponse\\";
export * from \\"./CreateProblemError\\";
export * from \\"./GenericCreateProblemError\\";
export * from \\"./GetDefaultStarterFilesResponse\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "problem",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Submission {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

/**
 * Responsible for spinning up and spinning down execution.
 */
export class Submission {
    constructor(protected readonly _options: Submission.Options) {}

    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    public async createExecutionSession(
        language: FernApi.Language,
        requestOptions?: Submission.RequestOptions
    ): Promise<FernApi.ExecutionSessionResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/sessions/create-session/\${language}\`
            ),
            method: \\"POST\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.ExecutionSessionResponse;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    public async getExecutionSession(
        sessionId: string,
        requestOptions?: Submission.RequestOptions
    ): Promise<FernApi.ExecutionSessionResponse | undefined> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/sessions/\${sessionId}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.ExecutionSessionResponse | undefined;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Stops execution session.
     */
    public async stopExecutionSession(sessionId: string, requestOptions?: Submission.RequestOptions): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/sessions/stop/\${sessionId}\`
            ),
            method: \\"DELETE\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async getExecutionSessionsState(
        requestOptions?: Submission.RequestOptions
    ): Promise<FernApi.GetExecutionSessionStateResponse> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/sessions/execution-sessions-state\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.GetExecutionSessionStateResponse;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ActualResult =
    | FernApi.ActualResult.Value
    | FernApi.ActualResult.Exception
    | FernApi.ActualResult.ExceptionV2;

export declare namespace ActualResult {
    interface Value {
        type: \\"value\\";
        value: FernApi.VariableValue;
    }

    interface Exception extends FernApi.ExceptionInfo {
        type: \\"exception\\";
    }

    interface ExceptionV2 {
        type: \\"exceptionV2\\";
        value: FernApi.ExceptionV2;
    }
}
",
                        "name": "ActualResult.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface BuildingExecutorResponse {
    submissionId: FernApi.SubmissionId;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "BuildingExecutorResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type CodeExecutionUpdate =
    /**
     * Statuses if an executor for the session isn't ready (Before RunningResponse). */
    | FernApi.CodeExecutionUpdate.BuildingExecutor
    /**
     * Sent once a test submission is executing. */
    | FernApi.CodeExecutionUpdate.Running
    /**
     * Sent if a submission cannot be run (i.e. Compile Error). */
    | FernApi.CodeExecutionUpdate.Errored
    /**
     * Sent if a submission is stopped. */
    | FernApi.CodeExecutionUpdate.Stopped
    /**
     * Graded testcases without trace information. */
    | FernApi.CodeExecutionUpdate.Graded
    /**
     * Graded submission for v2 problems. */
    | FernApi.CodeExecutionUpdate.GradedV2
    /**
     * Workspace run without trace information. */
    | FernApi.CodeExecutionUpdate.WorkspaceRan
    /**
     * Gives progress about what is being recorded. */
    | FernApi.CodeExecutionUpdate.Recording
    /**
     * Graded testcases with trace information. */
    | FernApi.CodeExecutionUpdate.Recorded
    /**
     * Sent if an invalid request is sent for a submission. */
    | FernApi.CodeExecutionUpdate.InvalidRequest
    /**
     * Sent once a submission is graded and fully recorded. */
    | FernApi.CodeExecutionUpdate.Finished;

export declare namespace CodeExecutionUpdate {
    interface BuildingExecutor extends FernApi.BuildingExecutorResponse {
        type: \\"buildingExecutor\\";
    }

    interface Running extends FernApi.RunningResponse {
        type: \\"running\\";
    }

    interface Errored extends FernApi.ErroredResponse {
        type: \\"errored\\";
    }

    interface Stopped extends FernApi.StoppedResponse {
        type: \\"stopped\\";
    }

    interface Graded extends FernApi.GradedResponse {
        type: \\"graded\\";
    }

    interface GradedV2 extends FernApi.GradedResponseV2 {
        type: \\"gradedV2\\";
    }

    interface WorkspaceRan extends FernApi.WorkspaceRanResponse {
        type: \\"workspaceRan\\";
    }

    interface Recording extends FernApi.RecordingResponseNotification {
        type: \\"recording\\";
    }

    interface Recorded extends FernApi.RecordedResponseNotification {
        type: \\"recorded\\";
    }

    interface InvalidRequest extends FernApi.InvalidRequestResponse {
        type: \\"invalidRequest\\";
    }

    interface Finished extends FernApi.FinishedResponse {
        type: \\"finished\\";
    }
}
",
                        "name": "CodeExecutionUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface CompileError {
    message: string;
}
",
                        "name": "CompileError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface CustomTestCasesUnsupported {
    problemId: FernApi.ProblemId;
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "CustomTestCasesUnsupported.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ErrorInfo =
    | FernApi.ErrorInfo.CompileError
    /**
     * If the submission cannot be executed and throws a runtime error before getting to any of the testcases.
     *  */
    | FernApi.ErrorInfo.RuntimeError
    /**
     * If the trace backend encounters an unexpected error.
     *  */
    | FernApi.ErrorInfo.InternalError;

export declare namespace ErrorInfo {
    interface CompileError extends FernApi.CompileError {
        type: \\"compileError\\";
    }

    interface RuntimeError extends FernApi.RuntimeError {
        type: \\"runtimeError\\";
    }

    interface InternalError extends FernApi.InternalError {
        type: \\"internalError\\";
    }
}
",
                        "name": "ErrorInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ErroredResponse {
    submissionId: FernApi.SubmissionId;
    errorInfo: FernApi.ErrorInfo;
}
",
                        "name": "ErroredResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface ExceptionInfo {
    exceptionType: string;
    exceptionMessage: string;
    exceptionStacktrace: string;
}
",
                        "name": "ExceptionInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type ExceptionV2 = FernApi.ExceptionV2.Generic | FernApi.ExceptionV2.Timeout;

export declare namespace ExceptionV2 {
    interface Generic extends FernApi.ExceptionInfo {
        type: \\"generic\\";
    }

    interface Timeout {
        type: \\"timeout\\";
    }
}
",
                        "name": "ExceptionV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExecutionSessionResponse {
    sessionId: string;
    executionSessionUrl?: string;
    language: FernApi.Language;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExecutionSessionState {
    lastTimeContacted?: string;
    sessionId: string;
    isWarmInstance: boolean;
    awsTaskId?: string;
    language: FernApi.Language;
    status: FernApi.ExecutionSessionStatus;
}
",
                        "name": "ExecutionSessionState.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ExecutionSessionStatus =
    | \\"CREATING_CONTAINER\\"
    | \\"PROVISIONING_CONTAINER\\"
    | \\"PENDING_CONTAINER\\"
    | \\"RUNNING_CONTAINER\\"
    | \\"LIVE_CONTAINER\\"
    | \\"FAILED_TO_LAUNCH\\";

export const ExecutionSessionStatus = {
    CreatingContainer: \\"CREATING_CONTAINER\\",
    ProvisioningContainer: \\"PROVISIONING_CONTAINER\\",
    PendingContainer: \\"PENDING_CONTAINER\\",
    RunningContainer: \\"RUNNING_CONTAINER\\",
    LiveContainer: \\"LIVE_CONTAINER\\",
    FailedToLaunch: \\"FAILED_TO_LAUNCH\\",
} as const;
",
                        "name": "ExecutionSessionStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface ExistingSubmissionExecuting {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "ExistingSubmissionExecuting.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface ExpressionLocation {
    start: number;
    offset: number;
}
",
                        "name": "ExpressionLocation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface FinishedResponse {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "FinishedResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GetExecutionSessionStateResponse {
    states: Record<string, FernApi.ExecutionSessionState>;
    numWarmingInstances?: number;
    warmingSessionIds: string[];
}
",
                        "name": "GetExecutionSessionStateResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GetSubmissionStateResponse {
    timeSubmitted?: string;
    submission: string;
    language: FernApi.Language;
    submissionTypeState: FernApi.SubmissionTypeState;
}
",
                        "name": "GetSubmissionStateResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface GetTraceResponsesPageRequest {
    offset?: number;
}
",
                        "name": "GetTraceResponsesPageRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GradedResponse {
    submissionId: FernApi.SubmissionId;
    testCases: Record<string, FernApi.TestCaseResultWithStdout>;
}
",
                        "name": "GradedResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GradedResponseV2 {
    submissionId: FernApi.SubmissionId;
    testCases: Record<FernApi.v2.TestCaseId, FernApi.TestCaseGrade>;
}
",
                        "name": "GradedResponseV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface GradedTestCaseUpdate {
    testCaseId: FernApi.v2.TestCaseId;
    grade: FernApi.TestCaseGrade;
}
",
                        "name": "GradedTestCaseUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface InitializeProblemRequest {
    problemId: FernApi.ProblemId;
    problemVersion?: number;
}
",
                        "name": "InitializeProblemRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface InternalError {
    exceptionInfo: FernApi.ExceptionInfo;
}
",
                        "name": "InternalError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type InvalidRequestCause =
    /**
     * The submission request references a submission id that doesn't exist. */
    | FernApi.InvalidRequestCause.SubmissionIdNotFound
    | FernApi.InvalidRequestCause.CustomTestCasesUnsupported
    /**
     * The submission request was routed to an incorrect language executor. */
    | FernApi.InvalidRequestCause.UnexpectedLanguage;

export declare namespace InvalidRequestCause {
    interface SubmissionIdNotFound extends FernApi.SubmissionIdNotFound {
        type: \\"submissionIdNotFound\\";
    }

    interface CustomTestCasesUnsupported extends FernApi.CustomTestCasesUnsupported {
        type: \\"customTestCasesUnsupported\\";
    }

    interface UnexpectedLanguage extends FernApi.UnexpectedLanguageError {
        type: \\"unexpectedLanguage\\";
    }
}
",
                        "name": "InvalidRequestCause.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface InvalidRequestResponse {
    request: FernApi.SubmissionRequest;
    cause: FernApi.InvalidRequestCause;
}
",
                        "name": "InvalidRequestResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface LightweightStackframeInformation {
    numStackFrames: number;
    topStackFrameMethodName: string;
}
",
                        "name": "LightweightStackframeInformation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface RecordedResponseNotification {
    submissionId: FernApi.SubmissionId;
    traceResponsesSize: number;
    testCaseId?: string;
}
",
                        "name": "RecordedResponseNotification.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface RecordedTestCaseUpdate {
    testCaseId: FernApi.v2.TestCaseId;
    traceResponsesSize: number;
}
",
                        "name": "RecordedTestCaseUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface RecordingResponseNotification {
    submissionId: FernApi.SubmissionId;
    testCaseId?: string;
    lineNumber: number;
    lightweightStackInfo: FernApi.LightweightStackframeInformation;
    tracedFile?: FernApi.TracedFile;
}
",
                        "name": "RecordingResponseNotification.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface RunningResponse {
    submissionId: FernApi.SubmissionId;
    state: FernApi.RunningSubmissionState;
}
",
                        "name": "RunningResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type RunningSubmissionState =
    | \\"QUEUEING_SUBMISSION\\"
    | \\"KILLING_HISTORICAL_SUBMISSIONS\\"
    | \\"WRITING_SUBMISSION_TO_FILE\\"
    | \\"COMPILING_SUBMISSION\\"
    | \\"RUNNING_SUBMISSION\\";

export const RunningSubmissionState = {
    QueueingSubmission: \\"QUEUEING_SUBMISSION\\",
    KillingHistoricalSubmissions: \\"KILLING_HISTORICAL_SUBMISSIONS\\",
    WritingSubmissionToFile: \\"WRITING_SUBMISSION_TO_FILE\\",
    CompilingSubmission: \\"COMPILING_SUBMISSION\\",
    RunningSubmission: \\"RUNNING_SUBMISSION\\",
} as const;
",
                        "name": "RunningSubmissionState.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface RuntimeError {
    message: string;
}
",
                        "name": "RuntimeError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface Scope {
    variables: Record<string, FernApi.DebugVariableValue>;
}
",
                        "name": "Scope.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ShareId = string;
",
                        "name": "ShareId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StackFrame {
    methodName: string;
    lineNumber: number;
    scopes: FernApi.Scope[];
}
",
                        "name": "StackFrame.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StackInformation {
    numStackFrames: number;
    topStackFrame?: FernApi.StackFrame;
}
",
                        "name": "StackInformation.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StderrResponse {
    submissionId: FernApi.SubmissionId;
    stderr: string;
}
",
                        "name": "StderrResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StdoutResponse {
    submissionId: FernApi.SubmissionId;
    stdout: string;
}
",
                        "name": "StdoutResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StopRequest {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "StopRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface StoppedResponse {
    submissionId: FernApi.SubmissionId;
}
",
                        "name": "StoppedResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface SubmissionFileInfo {
    directory: string;
    filename: string;
    contents: string;
}
",
                        "name": "SubmissionFileInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type SubmissionId = string;
",
                        "name": "SubmissionId.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SubmissionIdNotFound {
    missingSubmissionId: FernApi.SubmissionId;
}
",
                        "name": "SubmissionIdNotFound.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SubmissionRequest =
    | FernApi.SubmissionRequest.InitializeProblemRequest
    | FernApi.SubmissionRequest.InitializeWorkspaceRequest
    | FernApi.SubmissionRequest.SubmitV2
    | FernApi.SubmissionRequest.WorkspaceSubmit
    | FernApi.SubmissionRequest.Stop;

export declare namespace SubmissionRequest {
    interface InitializeProblemRequest extends FernApi.InitializeProblemRequest {
        type: \\"initializeProblemRequest\\";
    }

    interface InitializeWorkspaceRequest {
        type: \\"initializeWorkspaceRequest\\";
    }

    interface SubmitV2 extends FernApi.SubmitRequestV2 {
        type: \\"submitV2\\";
    }

    interface WorkspaceSubmit extends FernApi.WorkspaceSubmitRequest {
        type: \\"workspaceSubmit\\";
    }

    interface Stop extends FernApi.StopRequest {
        type: \\"stop\\";
    }
}
",
                        "name": "SubmissionRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SubmissionResponse =
    | FernApi.SubmissionResponse.ServerInitialized
    | FernApi.SubmissionResponse.ProblemInitialized
    | FernApi.SubmissionResponse.WorkspaceInitialized
    | FernApi.SubmissionResponse.ServerErrored
    | FernApi.SubmissionResponse.CodeExecutionUpdate
    | FernApi.SubmissionResponse.Terminated;

export declare namespace SubmissionResponse {
    interface ServerInitialized {
        type: \\"serverInitialized\\";
    }

    interface ProblemInitialized {
        type: \\"problemInitialized\\";
        value: FernApi.ProblemId;
    }

    interface WorkspaceInitialized {
        type: \\"workspaceInitialized\\";
    }

    interface ServerErrored extends FernApi.ExceptionInfo {
        type: \\"serverErrored\\";
    }

    interface CodeExecutionUpdate {
        type: \\"codeExecutionUpdate\\";
        value: FernApi.CodeExecutionUpdate;
    }

    interface Terminated extends FernApi.TerminatedResponse {
        type: \\"terminated\\";
    }
}
",
                        "name": "SubmissionResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SubmissionStatusForTestCase =
    | FernApi.SubmissionStatusForTestCase.Graded
    | FernApi.SubmissionStatusForTestCase.GradedV2
    | FernApi.SubmissionStatusForTestCase.Traced;

export declare namespace SubmissionStatusForTestCase {
    interface Graded extends FernApi.TestCaseResultWithStdout {
        type: \\"graded\\";
    }

    interface GradedV2 {
        type: \\"gradedV2\\";
        value: FernApi.TestCaseGrade;
    }

    interface Traced extends FernApi.TracedTestCase {
        type: \\"traced\\";
    }
}
",
                        "name": "SubmissionStatusForTestCase.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SubmissionStatusV2 = FernApi.SubmissionStatusV2.Test | FernApi.SubmissionStatusV2.Workspace;

export declare namespace SubmissionStatusV2 {
    interface Test extends FernApi.TestSubmissionStatusV2 {
        type: \\"test\\";
    }

    interface Workspace extends FernApi.WorkspaceSubmissionStatusV2 {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionStatusV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Keep in sync with SubmissionType.
 */
export type SubmissionTypeEnum = \\"TEST\\";

export const SubmissionTypeEnum = {
    Test: \\"TEST\\",
} as const;
",
                        "name": "SubmissionTypeEnum.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type SubmissionTypeState = FernApi.SubmissionTypeState.Test | FernApi.SubmissionTypeState.Workspace;

export declare namespace SubmissionTypeState {
    interface Test extends FernApi.TestSubmissionState {
        type: \\"test\\";
    }

    interface Workspace extends FernApi.WorkspaceSubmissionState {
        type: \\"workspace\\";
    }
}
",
                        "name": "SubmissionTypeState.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface SubmitRequestV2 {
    submissionId: FernApi.SubmissionId;
    language: FernApi.Language;
    submissionFiles: FernApi.SubmissionFileInfo[];
    problemId: FernApi.ProblemId;
    problemVersion?: number;
    userId?: string;
}
",
                        "name": "SubmitRequestV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TerminatedResponse {}
",
                        "name": "TerminatedResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type TestCaseGrade = FernApi.TestCaseGrade.Hidden | FernApi.TestCaseGrade.NonHidden;

export declare namespace TestCaseGrade {
    interface Hidden extends FernApi.TestCaseHiddenGrade {
        type: \\"hidden\\";
    }

    interface NonHidden extends FernApi.TestCaseNonHiddenGrade {
        type: \\"nonHidden\\";
    }
}
",
                        "name": "TestCaseGrade.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TestCaseHiddenGrade {
    passed: boolean;
}
",
                        "name": "TestCaseHiddenGrade.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestCaseNonHiddenGrade {
    passed: boolean;
    actualResult?: FernApi.VariableValue;
    exception?: FernApi.ExceptionV2;
    stdout: string;
}
",
                        "name": "TestCaseNonHiddenGrade.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestCaseResult {
    expectedResult: FernApi.VariableValue;
    actualResult: FernApi.ActualResult;
    passed: boolean;
}
",
                        "name": "TestCaseResult.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestCaseResultWithStdout {
    result: FernApi.TestCaseResult;
    stdout: string;
}
",
                        "name": "TestCaseResultWithStdout.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestSubmissionState {
    problemId: FernApi.ProblemId;
    defaultTestCases: FernApi.TestCase[];
    customTestCases: FernApi.TestCase[];
    status: FernApi.TestSubmissionStatus;
}
",
                        "name": "TestSubmissionState.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type TestSubmissionStatus =
    | FernApi.TestSubmissionStatus.Stopped
    | FernApi.TestSubmissionStatus.Errored
    | FernApi.TestSubmissionStatus.Running
    | FernApi.TestSubmissionStatus.TestCaseIdToState;

export declare namespace TestSubmissionStatus {
    interface Stopped {
        type: \\"stopped\\";
    }

    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }

    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }

    interface TestCaseIdToState {
        type: \\"testCaseIdToState\\";
        value: Record<string, FernApi.SubmissionStatusForTestCase>;
    }
}
",
                        "name": "TestSubmissionStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestSubmissionStatusV2 {
    updates: FernApi.TestSubmissionUpdate[];
    problemId: FernApi.ProblemId;
    problemVersion: number;
    problemInfo: FernApi.v2.ProblemInfoV2;
}
",
                        "name": "TestSubmissionStatusV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TestSubmissionUpdate {
    updateTime: string;
    updateInfo: FernApi.TestSubmissionUpdateInfo;
}
",
                        "name": "TestSubmissionUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type TestSubmissionUpdateInfo =
    | FernApi.TestSubmissionUpdateInfo.Running
    | FernApi.TestSubmissionUpdateInfo.Stopped
    | FernApi.TestSubmissionUpdateInfo.Errored
    | FernApi.TestSubmissionUpdateInfo.GradedTestCase
    | FernApi.TestSubmissionUpdateInfo.RecordedTestCase
    | FernApi.TestSubmissionUpdateInfo.Finished;

export declare namespace TestSubmissionUpdateInfo {
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }

    interface Stopped {
        type: \\"stopped\\";
    }

    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }

    interface GradedTestCase extends FernApi.GradedTestCaseUpdate {
        type: \\"gradedTestCase\\";
    }

    interface RecordedTestCase extends FernApi.RecordedTestCaseUpdate {
        type: \\"recordedTestCase\\";
    }

    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "TestSubmissionUpdateInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TraceResponse {
    submissionId: FernApi.SubmissionId;
    lineNumber: number;
    returnValue?: FernApi.DebugVariableValue;
    expressionLocation?: FernApi.ExpressionLocation;
    stack: FernApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TraceResponseV2 {
    submissionId: FernApi.SubmissionId;
    lineNumber: number;
    file: FernApi.TracedFile;
    returnValue?: FernApi.DebugVariableValue;
    expressionLocation?: FernApi.ExpressionLocation;
    stack: FernApi.StackInformation;
    stdout?: string;
}
",
                        "name": "TraceResponseV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TraceResponsesPage {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: FernApi.TraceResponse[];
}
",
                        "name": "TraceResponsesPage.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TraceResponsesPageV2 {
    /**
     * If present, use this to load subseqent pages.
     * The offset is the id of the next trace response to load.
     *
     */
    offset?: number;
    traceResponses: FernApi.TraceResponseV2[];
}
",
                        "name": "TraceResponsesPageV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TracedFile {
    filename: string;
    directory: string;
}
",
                        "name": "TracedFile.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface TracedTestCase {
    result: FernApi.TestCaseResultWithStdout;
    traceResponsesSize: number;
}
",
                        "name": "TracedTestCase.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface UnexpectedLanguageError {
    expectedLanguage: FernApi.Language;
    actualLanguage: FernApi.Language;
}
",
                        "name": "UnexpectedLanguageError.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceFiles {
    mainFile: FernApi.FileInfo;
    readOnlyFiles: FernApi.FileInfo[];
}
",
                        "name": "WorkspaceFiles.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceRanResponse {
    submissionId: FernApi.SubmissionId;
    runDetails: FernApi.WorkspaceRunDetails;
}
",
                        "name": "WorkspaceRanResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceRunDetails {
    exceptionV2?: FernApi.ExceptionV2;
    exception?: FernApi.ExceptionInfo;
    stdout: string;
}
",
                        "name": "WorkspaceRunDetails.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceStarterFilesResponse {
    files: Record<FernApi.Language, FernApi.WorkspaceFiles | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponse.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceStarterFilesResponseV2 {
    filesByLanguage: Record<FernApi.Language, FernApi.v2.Files | undefined>;
}
",
                        "name": "WorkspaceStarterFilesResponseV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceSubmissionState {
    status: FernApi.WorkspaceSubmissionStatus;
}
",
                        "name": "WorkspaceSubmissionState.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type WorkspaceSubmissionStatus =
    | FernApi.WorkspaceSubmissionStatus.Stopped
    | FernApi.WorkspaceSubmissionStatus.Errored
    | FernApi.WorkspaceSubmissionStatus.Running
    | FernApi.WorkspaceSubmissionStatus.Ran
    | FernApi.WorkspaceSubmissionStatus.Traced;

export declare namespace WorkspaceSubmissionStatus {
    interface Stopped {
        type: \\"stopped\\";
    }

    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }

    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }

    interface Ran extends FernApi.WorkspaceRunDetails {
        type: \\"ran\\";
    }

    interface Traced extends FernApi.WorkspaceRunDetails {
        type: \\"traced\\";
    }
}
",
                        "name": "WorkspaceSubmissionStatus.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceSubmissionStatusV2 {
    updates: FernApi.WorkspaceSubmissionUpdate[];
}
",
                        "name": "WorkspaceSubmissionStatusV2.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceSubmissionUpdate {
    updateTime: string;
    updateInfo: FernApi.WorkspaceSubmissionUpdateInfo;
}
",
                        "name": "WorkspaceSubmissionUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export type WorkspaceSubmissionUpdateInfo =
    | FernApi.WorkspaceSubmissionUpdateInfo.Running
    | FernApi.WorkspaceSubmissionUpdateInfo.Ran
    | FernApi.WorkspaceSubmissionUpdateInfo.Stopped
    | FernApi.WorkspaceSubmissionUpdateInfo.Traced
    | FernApi.WorkspaceSubmissionUpdateInfo.TracedV2
    | FernApi.WorkspaceSubmissionUpdateInfo.Errored
    | FernApi.WorkspaceSubmissionUpdateInfo.Finished;

export declare namespace WorkspaceSubmissionUpdateInfo {
    interface Running {
        type: \\"running\\";
        value: FernApi.RunningSubmissionState;
    }

    interface Ran extends FernApi.WorkspaceRunDetails {
        type: \\"ran\\";
    }

    interface Stopped {
        type: \\"stopped\\";
    }

    interface Traced {
        type: \\"traced\\";
    }

    interface TracedV2 extends FernApi.WorkspaceTracedUpdate {
        type: \\"tracedV2\\";
    }

    interface Errored {
        type: \\"errored\\";
        value: FernApi.ErrorInfo;
    }

    interface Finished {
        type: \\"finished\\";
    }
}
",
                        "name": "WorkspaceSubmissionUpdateInfo.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../..\\";

export interface WorkspaceSubmitRequest {
    submissionId: FernApi.SubmissionId;
    language: FernApi.Language;
    submissionFiles: FernApi.SubmissionFileInfo[];
    userId?: string;
}
",
                        "name": "WorkspaceSubmitRequest.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface WorkspaceTracedUpdate {
    traceResponsesSize: number;
}
",
                        "name": "WorkspaceTracedUpdate.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./SubmissionId\\";
export * from \\"./ShareId\\";
export * from \\"./SubmissionRequest\\";
export * from \\"./InitializeProblemRequest\\";
export * from \\"./SubmitRequestV2\\";
export * from \\"./WorkspaceSubmitRequest\\";
export * from \\"./SubmissionFileInfo\\";
export * from \\"./SubmissionTypeEnum\\";
export * from \\"./StopRequest\\";
export * from \\"./SubmissionResponse\\";
export * from \\"./CodeExecutionUpdate\\";
export * from \\"./BuildingExecutorResponse\\";
export * from \\"./RunningResponse\\";
export * from \\"./RunningSubmissionState\\";
export * from \\"./ErroredResponse\\";
export * from \\"./ErrorInfo\\";
export * from \\"./CompileError\\";
export * from \\"./RuntimeError\\";
export * from \\"./InternalError\\";
export * from \\"./StoppedResponse\\";
export * from \\"./WorkspaceRanResponse\\";
export * from \\"./WorkspaceRunDetails\\";
export * from \\"./GradedResponse\\";
export * from \\"./GradedResponseV2\\";
export * from \\"./TestCaseGrade\\";
export * from \\"./TestCaseHiddenGrade\\";
export * from \\"./TestCaseNonHiddenGrade\\";
export * from \\"./RecordedResponseNotification\\";
export * from \\"./RecordingResponseNotification\\";
export * from \\"./LightweightStackframeInformation\\";
export * from \\"./TestCaseResultWithStdout\\";
export * from \\"./TestCaseResult\\";
export * from \\"./ActualResult\\";
export * from \\"./ExceptionV2\\";
export * from \\"./ExceptionInfo\\";
export * from \\"./InvalidRequestResponse\\";
export * from \\"./InvalidRequestCause\\";
export * from \\"./ExistingSubmissionExecuting\\";
export * from \\"./SubmissionIdNotFound\\";
export * from \\"./CustomTestCasesUnsupported\\";
export * from \\"./UnexpectedLanguageError\\";
export * from \\"./TerminatedResponse\\";
export * from \\"./FinishedResponse\\";
export * from \\"./StdoutResponse\\";
export * from \\"./StderrResponse\\";
export * from \\"./TraceResponse\\";
export * from \\"./TraceResponseV2\\";
export * from \\"./TracedFile\\";
export * from \\"./ExpressionLocation\\";
export * from \\"./StackInformation\\";
export * from \\"./StackFrame\\";
export * from \\"./Scope\\";
export * from \\"./ExecutionSessionResponse\\";
export * from \\"./ExecutionSessionStatus\\";
export * from \\"./SubmissionStatusV2\\";
export * from \\"./TestSubmissionStatusV2\\";
export * from \\"./WorkspaceSubmissionStatusV2\\";
export * from \\"./TestSubmissionUpdate\\";
export * from \\"./TestSubmissionUpdateInfo\\";
export * from \\"./WorkspaceSubmissionUpdate\\";
export * from \\"./WorkspaceSubmissionUpdateInfo\\";
export * from \\"./GradedTestCaseUpdate\\";
export * from \\"./RecordedTestCaseUpdate\\";
export * from \\"./WorkspaceTracedUpdate\\";
export * from \\"./SubmissionTypeState\\";
export * from \\"./WorkspaceSubmissionState\\";
export * from \\"./WorkspaceSubmissionStatus\\";
export * from \\"./TestSubmissionState\\";
export * from \\"./TestSubmissionStatus\\";
export * from \\"./SubmissionStatusForTestCase\\";
export * from \\"./TracedTestCase\\";
export * from \\"./TraceResponsesPage\\";
export * from \\"./TraceResponsesPageV2\\";
export * from \\"./GetTraceResponsesPageRequest\\";
export * from \\"./WorkspaceStarterFilesResponse\\";
export * from \\"./WorkspaceStarterFilesResponseV2\\";
export * from \\"./WorkspaceFiles\\";
export * from \\"./ExecutionSessionState\\";
export * from \\"./GetExecutionSessionStateResponse\\";
export * from \\"./GetSubmissionStateResponse\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "types",
                    "type": "directory",
                  },
                ],
                "name": "submission",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Sysprop {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Sysprop {
    constructor(protected readonly _options: Sysprop.Options) {}

    public async setNumWarmInstances(
        language: FernApi.Language,
        numWarmInstances: number,
        requestOptions?: Sysprop.RequestOptions
    ): Promise<void> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/sysprop/num-warm-instances/\${language}/\${numWarmInstances}\`
            ),
            method: \\"PUT\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    public async getNumWarmInstances(
        requestOptions?: Sysprop.RequestOptions
    ): Promise<Record<FernApi.Language, number | undefined>> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/sysprop/num-warm-instances\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as Record<FernApi.Language, number | undefined>;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                ],
                "name": "sysprop",
                "type": "directory",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../environments\\";
import * as core from \\"../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";
import { V3 } from \\"../resources/v3/client/Client\\";

export declare namespace V2 {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class V2 {
    constructor(protected readonly _options: V2.Options) {}

    protected _problem: Problem | undefined;

    public get problem(): Problem {
        return (this._problem ??= new Problem(this._options));
    }

    protected _v3: V3 | undefined;

    public get v3(): V3 {
        return (this._v3 ??= new V3(this._options));
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export {};
",
                        "name": "index.ts",
                        "type": "file",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
export * as v3 from \\"./v3\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import * as FernApi from \\"../../../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../../../errors\\";

export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Problem {
    constructor(protected readonly _options: Problem.Options) {}

    /**
     * Returns lightweight versions of all problems
     */
    public async getLightweightProblems(
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.LightweightProblemInfoV2[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problems-v2/lightweight-problem-info\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.LightweightProblemInfoV2[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns latest versions of all problems
     */
    public async getProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.ProblemInfoV2[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problems-v2/problem-info\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.ProblemInfoV2[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns latest version of a problem
     */
    public async getLatestProblem(
        problemId: FernApi.ProblemId,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.ProblemInfoV2> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problems-v2/problem-info/\${problemId}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.ProblemInfoV2;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns requested version of a problem
     */
    public async getProblemVersion(
        problemId: FernApi.ProblemId,
        problemVersion: number,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.ProblemInfoV2> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problems-v2/problem-info/\${problemId}/version/\${problemVersion}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.ProblemInfoV2;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                                "name": "Client.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type AssertCorrectnessCheck =
    | FernApi.v2.AssertCorrectnessCheck.DeepEquality
    | FernApi.v2.AssertCorrectnessCheck.Custom;

export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends FernApi.v2.DeepEqualityCorrectnessCheck {
        type: \\"deepEquality\\";
    }

    interface Custom extends FernApi.v2.VoidFunctionDefinitionThatTakesActualResult {
        type: \\"custom\\";
    }
}
",
                                "name": "AssertCorrectnessCheck.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface BasicCustomFiles {
    methodName: string;
    signature: FernApi.v2.NonVoidFunctionSignature;
    additionalFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    basicTestCaseTemplate: FernApi.v2.BasicTestCaseTemplate;
}
",
                                "name": "BasicCustomFiles.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface BasicTestCaseTemplate {
    templateId: FernApi.v2.TestCaseTemplateId;
    name: string;
    description: FernApi.v2.TestCaseImplementationDescription;
    expectedValueParameterId: FernApi.v2.ParameterId;
}
",
                                "name": "BasicTestCaseTemplate.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    customFiles: FernApi.v2.CustomFiles;
    customTestCaseTemplates: FernApi.v2.TestCaseTemplate[];
    testcases: FernApi.v2.TestCaseV2[];
    supportedLanguages: FernApi.Language[];
    isPublic: boolean;
}
",
                                "name": "CreateProblemRequestV2.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type CustomFiles = FernApi.v2.CustomFiles.Basic | FernApi.v2.CustomFiles.Custom;

export declare namespace CustomFiles {
    interface Basic extends FernApi.v2.BasicCustomFiles {
        type: \\"basic\\";
    }

    interface Custom {
        type: \\"custom\\";
        value: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    }
}
",
                                "name": "CustomFiles.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: FernApi.v2.ParameterId;
}
",
                                "name": "DeepEqualityCorrectnessCheck.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface DefaultProvidedFile {
    file: FernApi.v2.FileInfoV2;
    relatedTypes: FernApi.VariableType[];
}
",
                                "name": "DefaultProvidedFile.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                "name": "FileInfoV2.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface Files {
    files: FernApi.v2.FileInfoV2[];
}
",
                                "name": "Files.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                "name": "FunctionImplementation.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<FernApi.Language, FernApi.v2.FunctionImplementation | undefined>;
}
",
                                "name": "FunctionImplementationForMultipleLanguages.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type FunctionSignature =
    | FernApi.v2.FunctionSignature.Void
    | FernApi.v2.FunctionSignature.NonVoid
    /**
     * Useful when specifying custom grading for a testcase where actualResult is defined. */
    | FernApi.v2.FunctionSignature.VoidThatTakesActualResult;

export declare namespace FunctionSignature {
    interface Void extends FernApi.v2.VoidFunctionSignature {
        type: \\"void\\";
    }

    interface NonVoid extends FernApi.v2.NonVoidFunctionSignature {
        type: \\"nonVoid\\";
    }

    interface VoidThatTakesActualResult extends FernApi.v2.VoidFunctionSignatureThatTakesActualResult {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                "name": "FunctionSignature.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GeneratedFiles {
    generatedTestCaseFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    generatedTemplateFiles: Record<FernApi.Language, FernApi.v2.Files | undefined>;
    other: Record<FernApi.Language, FernApi.v2.Files | undefined>;
}
",
                                "name": "GeneratedFiles.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: FernApi.v2.NonVoidFunctionSignature;
}
",
                                "name": "GetBasicSolutionFileRequest.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<FernApi.Language, FernApi.v2.FileInfoV2 | undefined>;
}
",
                                "name": "GetBasicSolutionFileResponse.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetFunctionSignatureRequest {
    functionSignature: FernApi.v2.FunctionSignature;
}
",
                                "name": "GetFunctionSignatureRequest.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<FernApi.Language, string | undefined>;
}
",
                                "name": "GetFunctionSignatureResponse.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetGeneratedTestCaseFileRequest {
    template?: FernApi.v2.TestCaseTemplate;
    testCase: FernApi.v2.TestCaseV2;
}
",
                                "name": "GetGeneratedTestCaseFileRequest.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface GetGeneratedTestCaseTemplateFileRequest {
    template: FernApi.v2.TestCaseTemplate;
}
",
                                "name": "GetGeneratedTestCaseTemplateFileRequest.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface LightweightProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: FernApi.VariableType[];
}
",
                                "name": "LightweightProblemInfoV2.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface NonVoidFunctionDefinition {
    signature: FernApi.v2.NonVoidFunctionSignature;
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "NonVoidFunctionDefinition.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface NonVoidFunctionSignature {
    parameters: FernApi.v2.Parameter[];
    returnType: FernApi.VariableType;
}
",
                                "name": "NonVoidFunctionSignature.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface Parameter {
    parameterId: FernApi.v2.ParameterId;
    name: string;
    variableType: FernApi.VariableType;
}
",
                                "name": "Parameter.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ParameterId = string;
",
                                "name": "ParameterId.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface ProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: FernApi.Language[];
    customFiles: FernApi.v2.CustomFiles;
    generatedFiles: FernApi.v2.GeneratedFiles;
    customTestCaseTemplates: FernApi.v2.TestCaseTemplate[];
    testcases: FernApi.v2.TestCaseV2[];
    isPublic: boolean;
}
",
                                "name": "ProblemInfoV2.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                "name": "TestCaseExpects.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type TestCaseFunction = FernApi.v2.TestCaseFunction.WithActualResult | FernApi.v2.TestCaseFunction.Custom;

export declare namespace TestCaseFunction {
    interface WithActualResult extends FernApi.v2.TestCaseWithActualResultImplementation {
        type: \\"withActualResult\\";
    }

    interface Custom extends FernApi.v2.VoidFunctionDefinition {
        type: \\"custom\\";
    }
}
",
                                "name": "TestCaseFunction.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TestCaseId = string;
",
                                "name": "TestCaseId.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseImplementation {
    description: FernApi.v2.TestCaseImplementationDescription;
    function: FernApi.v2.TestCaseFunction;
}
",
                                "name": "TestCaseImplementation.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseImplementationDescription {
    boards: FernApi.v2.TestCaseImplementationDescriptionBoard[];
}
",
                                "name": "TestCaseImplementationDescription.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type TestCaseImplementationDescriptionBoard =
    | FernApi.v2.TestCaseImplementationDescriptionBoard.Html
    | FernApi.v2.TestCaseImplementationDescriptionBoard.ParamId;

export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }

    interface ParamId {
        type: \\"paramId\\";
        value: FernApi.v2.ParameterId;
    }
}
",
                                "name": "TestCaseImplementationDescriptionBoard.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export type TestCaseImplementationReference =
    | FernApi.v2.TestCaseImplementationReference.TemplateId
    | FernApi.v2.TestCaseImplementationReference.Implementation;

export declare namespace TestCaseImplementationReference {
    interface TemplateId {
        type: \\"templateId\\";
        value: FernApi.v2.TestCaseTemplateId;
    }

    interface Implementation extends FernApi.v2.TestCaseImplementation {
        type: \\"implementation\\";
    }
}
",
                                "name": "TestCaseImplementationReference.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseMetadata {
    id: FernApi.v2.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                "name": "TestCaseMetadata.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseTemplate {
    templateId: FernApi.v2.TestCaseTemplateId;
    name: string;
    implementation: FernApi.v2.TestCaseImplementation;
}
",
                                "name": "TestCaseTemplate.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TestCaseTemplateId = string;
",
                                "name": "TestCaseTemplateId.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseV2 {
    metadata: FernApi.v2.TestCaseMetadata;
    implementation: FernApi.v2.TestCaseImplementationReference;
    arguments: Record<FernApi.v2.ParameterId, FernApi.VariableValue>;
    expects?: FernApi.v2.TestCaseExpects;
}
",
                                "name": "TestCaseV2.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface TestCaseWithActualResultImplementation {
    getActualResult: FernApi.v2.NonVoidFunctionDefinition;
    assertCorrectnessCheck: FernApi.v2.AssertCorrectnessCheck;
}
",
                                "name": "TestCaseWithActualResultImplementation.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface VoidFunctionDefinition {
    parameters: FernApi.v2.Parameter[];
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinition.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: FernApi.v2.Parameter[];
    code: FernApi.v2.FunctionImplementationForMultipleLanguages;
}
",
                                "name": "VoidFunctionDefinitionThatTakesActualResult.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface VoidFunctionSignature {
    parameters: FernApi.v2.Parameter[];
}
",
                                "name": "VoidFunctionSignature.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../..\\";

export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: FernApi.v2.Parameter[];
    actualResultType: FernApi.VariableType;
}
",
                                "name": "VoidFunctionSignatureThatTakesActualResult.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "types",
                            "type": "directory",
                          },
                        ],
                        "name": "problem",
                        "type": "directory",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../../../environments\\";
import * as core from \\"../../../../../../core\\";
import { Problem } from \\"../resources/problem/client/Client\\";

export declare namespace V3 {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class V3 {
    constructor(protected readonly _options: V3.Options) {}

    protected _problem: Problem | undefined;

    public get problem(): Problem {
        return (this._problem ??= new Problem(this._options));
    }
}
",
                                "name": "Client.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": "export {};
",
                                "name": "index.ts",
                                "type": "file",
                              },
                            ],
                            "name": "client",
                            "type": "directory",
                          },
                          Object {
                            "contents": "export * from \\"./resources\\";
export * from \\"./client\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": Array [
                              Object {
                                "contents": "export * as problem from \\"./problem\\";
export * from \\"./problem/types\\";
",
                                "name": "index.ts",
                                "type": "file",
                              },
                              Object {
                                "contents": Array [
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from \\"../../../../../../../../environments\\";
import * as core from \\"../../../../../../../../core\\";
import * as FernApi from \\"../../../../../../..\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../../../../../errors\\";

export declare namespace Problem {
    interface Options {
        environment?: core.Supplier<environments.FernApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Problem {
    constructor(protected readonly _options: Problem.Options) {}

    /**
     * Returns lightweight versions of all problems
     */
    public async getLightweightProblems(
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.v3.LightweightProblemInfoV2[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problems-v2/lightweight-problem-info\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.v3.LightweightProblemInfoV2[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns latest versions of all problems
     */
    public async getProblems(requestOptions?: Problem.RequestOptions): Promise<FernApi.v2.v3.ProblemInfoV2[]> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \\"/problems-v2/problem-info\\"
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.v3.ProblemInfoV2[];
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns latest version of a problem
     */
    public async getLatestProblem(
        problemId: FernApi.ProblemId,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.v3.ProblemInfoV2> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problems-v2/problem-info/\${problemId}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.v3.ProblemInfoV2;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    /**
     * Returns requested version of a problem
     */
    public async getProblemVersion(
        problemId: FernApi.ProblemId,
        problemVersion: number,
        requestOptions?: Problem.RequestOptions
    ): Promise<FernApi.v2.v3.ProblemInfoV2> {
        const _response = await core.fetcher({
            url: urlJoin(
                (await core.Supplier.get(this._options.environment)) ?? environments.FernApiEnvironment.Prod,
                \`/problems-v2/problem-info/\${problemId}/version/\${problemVersion}\`
            ),
            method: \\"GET\\",
            headers: {
                Authorization: await this._getAuthorizationHeader(),
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            timeoutMs: requestOptions?.timeoutInSeconds != null ? requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return _response.body as FernApi.v2.v3.ProblemInfoV2;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }

    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return \`Bearer \${bearer}\`;
        }

        return undefined;
    }
}
",
                                        "name": "Client.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export {};
",
                                        "name": "index.ts",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "client",
                                    "type": "directory",
                                  },
                                  Object {
                                    "contents": "export * from \\"./types\\";
export * from \\"./client\\";
",
                                    "name": "index.ts",
                                    "type": "file",
                                  },
                                  Object {
                                    "contents": Array [
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type AssertCorrectnessCheck =
    | FernApi.v2.v3.AssertCorrectnessCheck.DeepEquality
    | FernApi.v2.v3.AssertCorrectnessCheck.Custom;

export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends FernApi.v2.v3.DeepEqualityCorrectnessCheck {
        type: \\"deepEquality\\";
    }

    interface Custom extends FernApi.v2.v3.VoidFunctionDefinitionThatTakesActualResult {
        type: \\"custom\\";
    }
}
",
                                        "name": "AssertCorrectnessCheck.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface BasicCustomFiles {
    methodName: string;
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
    additionalFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    basicTestCaseTemplate: FernApi.v2.v3.BasicTestCaseTemplate;
}
",
                                        "name": "BasicCustomFiles.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface BasicTestCaseTemplate {
    templateId: FernApi.v2.v3.TestCaseTemplateId;
    name: string;
    description: FernApi.v2.v3.TestCaseImplementationDescription;
    expectedValueParameterId: FernApi.v2.v3.ParameterId;
}
",
                                        "name": "BasicTestCaseTemplate.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface CreateProblemRequestV2 {
    problemName: string;
    problemDescription: FernApi.ProblemDescription;
    customFiles: FernApi.v2.v3.CustomFiles;
    customTestCaseTemplates: FernApi.v2.v3.TestCaseTemplate[];
    testcases: FernApi.v2.v3.TestCaseV2[];
    supportedLanguages: FernApi.Language[];
    isPublic: boolean;
}
",
                                        "name": "CreateProblemRequestV2.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type CustomFiles = FernApi.v2.v3.CustomFiles.Basic | FernApi.v2.v3.CustomFiles.Custom;

export declare namespace CustomFiles {
    interface Basic extends FernApi.v2.v3.BasicCustomFiles {
        type: \\"basic\\";
    }

    interface Custom {
        type: \\"custom\\";
        value: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    }
}
",
                                        "name": "CustomFiles.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface DeepEqualityCorrectnessCheck {
    expectedValueParameterId: FernApi.v2.v3.ParameterId;
}
",
                                        "name": "DeepEqualityCorrectnessCheck.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface DefaultProvidedFile {
    file: FernApi.v2.v3.FileInfoV2;
    relatedTypes: FernApi.VariableType[];
}
",
                                        "name": "DefaultProvidedFile.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FileInfoV2 {
    filename: string;
    directory: string;
    contents: string;
    editable: boolean;
}
",
                                        "name": "FileInfoV2.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface Files {
    files: FernApi.v2.v3.FileInfoV2[];
}
",
                                        "name": "Files.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface FunctionImplementation {
    impl: string;
    imports?: string;
}
",
                                        "name": "FunctionImplementation.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface FunctionImplementationForMultipleLanguages {
    codeByLanguage: Record<FernApi.Language, FernApi.v2.v3.FunctionImplementation | undefined>;
}
",
                                        "name": "FunctionImplementationForMultipleLanguages.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type FunctionSignature =
    | FernApi.v2.v3.FunctionSignature.Void
    | FernApi.v2.v3.FunctionSignature.NonVoid
    /**
     * Useful when specifying custom grading for a testcase where actualResult is defined. */
    | FernApi.v2.v3.FunctionSignature.VoidThatTakesActualResult;

export declare namespace FunctionSignature {
    interface Void extends FernApi.v2.v3.VoidFunctionSignature {
        type: \\"void\\";
    }

    interface NonVoid extends FernApi.v2.v3.NonVoidFunctionSignature {
        type: \\"nonVoid\\";
    }

    interface VoidThatTakesActualResult extends FernApi.v2.v3.VoidFunctionSignatureThatTakesActualResult {
        type: \\"voidThatTakesActualResult\\";
    }
}
",
                                        "name": "FunctionSignature.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GeneratedFiles {
    generatedTestCaseFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    generatedTemplateFiles: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
    other: Record<FernApi.Language, FernApi.v2.v3.Files | undefined>;
}
",
                                        "name": "GeneratedFiles.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetBasicSolutionFileRequest {
    methodName: string;
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
}
",
                                        "name": "GetBasicSolutionFileRequest.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetBasicSolutionFileResponse {
    solutionFileByLanguage: Record<FernApi.Language, FernApi.v2.v3.FileInfoV2 | undefined>;
}
",
                                        "name": "GetBasicSolutionFileResponse.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetFunctionSignatureRequest {
    functionSignature: FernApi.v2.v3.FunctionSignature;
}
",
                                        "name": "GetFunctionSignatureRequest.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetFunctionSignatureResponse {
    functionByLanguage: Record<FernApi.Language, string | undefined>;
}
",
                                        "name": "GetFunctionSignatureResponse.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetGeneratedTestCaseFileRequest {
    template?: FernApi.v2.v3.TestCaseTemplate;
    testCase: FernApi.v2.v3.TestCaseV2;
}
",
                                        "name": "GetGeneratedTestCaseFileRequest.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface GetGeneratedTestCaseTemplateFileRequest {
    template: FernApi.v2.v3.TestCaseTemplate;
}
",
                                        "name": "GetGeneratedTestCaseTemplateFileRequest.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface LightweightProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemName: string;
    problemVersion: number;
    variableTypes: FernApi.VariableType[];
}
",
                                        "name": "LightweightProblemInfoV2.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface NonVoidFunctionDefinition {
    signature: FernApi.v2.v3.NonVoidFunctionSignature;
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "NonVoidFunctionDefinition.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface NonVoidFunctionSignature {
    parameters: FernApi.v2.v3.Parameter[];
    returnType: FernApi.VariableType;
}
",
                                        "name": "NonVoidFunctionSignature.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface Parameter {
    parameterId: FernApi.v2.v3.ParameterId;
    name: string;
    variableType: FernApi.VariableType;
}
",
                                        "name": "Parameter.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ParameterId = string;
",
                                        "name": "ParameterId.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface ProblemInfoV2 {
    problemId: FernApi.ProblemId;
    problemDescription: FernApi.ProblemDescription;
    problemName: string;
    problemVersion: number;
    supportedLanguages: FernApi.Language[];
    customFiles: FernApi.v2.v3.CustomFiles;
    generatedFiles: FernApi.v2.v3.GeneratedFiles;
    customTestCaseTemplates: FernApi.v2.v3.TestCaseTemplate[];
    testcases: FernApi.v2.v3.TestCaseV2[];
    isPublic: boolean;
}
",
                                        "name": "ProblemInfoV2.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface TestCaseExpects {
    expectedStdout?: string;
}
",
                                        "name": "TestCaseExpects.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type TestCaseFunction = FernApi.v2.v3.TestCaseFunction.WithActualResult | FernApi.v2.v3.TestCaseFunction.Custom;

export declare namespace TestCaseFunction {
    interface WithActualResult extends FernApi.v2.v3.TestCaseWithActualResultImplementation {
        type: \\"withActualResult\\";
    }

    interface Custom extends FernApi.v2.v3.VoidFunctionDefinition {
        type: \\"custom\\";
    }
}
",
                                        "name": "TestCaseFunction.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TestCaseId = string;
",
                                        "name": "TestCaseId.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseImplementation {
    description: FernApi.v2.v3.TestCaseImplementationDescription;
    function: FernApi.v2.v3.TestCaseFunction;
}
",
                                        "name": "TestCaseImplementation.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseImplementationDescription {
    boards: FernApi.v2.v3.TestCaseImplementationDescriptionBoard[];
}
",
                                        "name": "TestCaseImplementationDescription.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type TestCaseImplementationDescriptionBoard =
    | FernApi.v2.v3.TestCaseImplementationDescriptionBoard.Html
    | FernApi.v2.v3.TestCaseImplementationDescriptionBoard.ParamId;

export declare namespace TestCaseImplementationDescriptionBoard {
    interface Html {
        type: \\"html\\";
        value: string;
    }

    interface ParamId {
        type: \\"paramId\\";
        value: FernApi.v2.v3.ParameterId;
    }
}
",
                                        "name": "TestCaseImplementationDescriptionBoard.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export type TestCaseImplementationReference =
    | FernApi.v2.v3.TestCaseImplementationReference.TemplateId
    | FernApi.v2.v3.TestCaseImplementationReference.Implementation;

export declare namespace TestCaseImplementationReference {
    interface TemplateId {
        type: \\"templateId\\";
        value: FernApi.v2.v3.TestCaseTemplateId;
    }

    interface Implementation extends FernApi.v2.v3.TestCaseImplementation {
        type: \\"implementation\\";
    }
}
",
                                        "name": "TestCaseImplementationReference.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseMetadata {
    id: FernApi.v2.v3.TestCaseId;
    name: string;
    hidden: boolean;
}
",
                                        "name": "TestCaseMetadata.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseTemplate {
    templateId: FernApi.v2.v3.TestCaseTemplateId;
    name: string;
    implementation: FernApi.v2.v3.TestCaseImplementation;
}
",
                                        "name": "TestCaseTemplate.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type TestCaseTemplateId = string;
",
                                        "name": "TestCaseTemplateId.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseV2 {
    metadata: FernApi.v2.v3.TestCaseMetadata;
    implementation: FernApi.v2.v3.TestCaseImplementationReference;
    arguments: Record<FernApi.v2.v3.ParameterId, FernApi.VariableValue>;
    expects?: FernApi.v2.v3.TestCaseExpects;
}
",
                                        "name": "TestCaseV2.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface TestCaseWithActualResultImplementation {
    getActualResult: FernApi.v2.v3.NonVoidFunctionDefinition;
    assertCorrectnessCheck: FernApi.v2.v3.AssertCorrectnessCheck;
}
",
                                        "name": "TestCaseWithActualResultImplementation.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface VoidFunctionDefinition {
    parameters: FernApi.v2.v3.Parameter[];
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinition.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

/**
 * The generated signature will include an additional param, actualResult
 */
export interface VoidFunctionDefinitionThatTakesActualResult {
    additionalParameters: FernApi.v2.v3.Parameter[];
    code: FernApi.v2.v3.FunctionImplementationForMultipleLanguages;
}
",
                                        "name": "VoidFunctionDefinitionThatTakesActualResult.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface VoidFunctionSignature {
    parameters: FernApi.v2.v3.Parameter[];
}
",
                                        "name": "VoidFunctionSignature.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernApi from \\"../../../../../../..\\";

export interface VoidFunctionSignatureThatTakesActualResult {
    parameters: FernApi.v2.v3.Parameter[];
    actualResultType: FernApi.VariableType;
}
",
                                        "name": "VoidFunctionSignatureThatTakesActualResult.ts",
                                        "type": "file",
                                      },
                                      Object {
                                        "contents": "export * from \\"./TestCaseTemplateId\\";
export * from \\"./TestCaseId\\";
export * from \\"./ParameterId\\";
export * from \\"./ProblemInfoV2\\";
export * from \\"./LightweightProblemInfoV2\\";
export * from \\"./CreateProblemRequestV2\\";
export * from \\"./TestCaseV2\\";
export * from \\"./TestCaseExpects\\";
export * from \\"./TestCaseImplementationReference\\";
export * from \\"./BasicTestCaseTemplate\\";
export * from \\"./TestCaseTemplate\\";
export * from \\"./TestCaseImplementation\\";
export * from \\"./TestCaseFunction\\";
export * from \\"./TestCaseWithActualResultImplementation\\";
export * from \\"./VoidFunctionDefinition\\";
export * from \\"./Parameter\\";
export * from \\"./NonVoidFunctionDefinition\\";
export * from \\"./VoidFunctionSignature\\";
export * from \\"./NonVoidFunctionSignature\\";
export * from \\"./VoidFunctionSignatureThatTakesActualResult\\";
export * from \\"./AssertCorrectnessCheck\\";
export * from \\"./DeepEqualityCorrectnessCheck\\";
export * from \\"./VoidFunctionDefinitionThatTakesActualResult\\";
export * from \\"./TestCaseImplementationDescription\\";
export * from \\"./TestCaseImplementationDescriptionBoard\\";
export * from \\"./TestCaseMetadata\\";
export * from \\"./FunctionImplementationForMultipleLanguages\\";
export * from \\"./FunctionImplementation\\";
export * from \\"./GeneratedFiles\\";
export * from \\"./CustomFiles\\";
export * from \\"./BasicCustomFiles\\";
export * from \\"./Files\\";
export * from \\"./FileInfoV2\\";
export * from \\"./DefaultProvidedFile\\";
export * from \\"./FunctionSignature\\";
export * from \\"./GetFunctionSignatureRequest\\";
export * from \\"./GetFunctionSignatureResponse\\";
export * from \\"./GetBasicSolutionFileRequest\\";
export * from \\"./GetBasicSolutionFileResponse\\";
export * from \\"./GetGeneratedTestCaseFileRequest\\";
export * from \\"./GetGeneratedTestCaseTemplateFileRequest\\";
",
                                        "name": "index.ts",
                                        "type": "file",
                                      },
                                    ],
                                    "name": "types",
                                    "type": "directory",
                                  },
                                ],
                                "name": "problem",
                                "type": "directory",
                              },
                            ],
                            "name": "resources",
                            "type": "directory",
                          },
                        ],
                        "name": "v3",
                        "type": "directory",
                      },
                    ],
                    "name": "resources",
                    "type": "directory",
                  },
                ],
                "name": "v2",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "import { Base64 } from \\"js-base64\\";

export interface BasicAuth {
    username: string;
    password: string;
}

const BASIC_AUTH_HEADER_PREFIX = /^Basic /i;

export const BasicAuth = {
    toAuthorizationHeader: (basicAuth: BasicAuth | undefined): string | undefined => {
        if (basicAuth == null) {
            return undefined;
        }
        const token = Base64.encode(\`\${basicAuth.username}:\${basicAuth.password}\`);
        return \`Basic \${token}\`;
    },
    fromAuthorizationHeader: (header: string): BasicAuth => {
        const credentials = header.replace(BASIC_AUTH_HEADER_PREFIX, \\"\\");
        const decoded = Base64.decode(credentials);
        const [username, password] = decoded.split(\\":\\", 2);

        if (username == null || password == null) {
            throw new Error(\\"Invalid basic auth\\");
        }
        return {
            username,
            password,
        };
    },
};
",
                "name": "BasicAuth.ts",
                "type": "file",
              },
              Object {
                "contents": "export type BearerToken = string;

const BEARER_AUTH_HEADER_PREFIX = /^Bearer /i;

export const BearerToken = {
    toAuthorizationHeader: (token: BearerToken | undefined): string | undefined => {
        if (token == null) {
            return undefined;
        }
        return \`Bearer \${token}\`;
    },
    fromAuthorizationHeader: (header: string): BearerToken => {
        return header.replace(BEARER_AUTH_HEADER_PREFIX, \\"\\").trim() as BearerToken;
    },
};
",
                "name": "BearerToken.ts",
                "type": "file",
              },
              Object {
                "contents": "export { BasicAuth } from \\"./BasicAuth\\";
export { BearerToken } from \\"./BearerToken\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "auth",
            "type": "directory",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;

export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}

export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.ts",
                "type": "file",
              },
              Object {
                "contents": "import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import axios, { AxiosAdapter, AxiosError, AxiosProgressEvent } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";

export type FetchFunction = <R = unknown>(args: Fetcher.Args) => Promise<APIResponse<R, Fetcher.Error>>;

export declare namespace Fetcher {
    export interface Args {
        url: string;
        method: string;
        contentType?: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
        responseType?: \\"json\\" | \\"blob\\";
        adapter?: AxiosAdapter;
        onUploadProgress?: (event: AxiosProgressEvent) => void;
    }

    export type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;

    export interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }

    export interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }

    export interface TimeoutError {
        reason: \\"timeout\\";
    }

    export interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}

async function fetcherImpl<R = unknown>(args: Fetcher.Args): Promise<APIResponse<R, Fetcher.Error>> {
    const headers: Record<string, string> = {};
    if (args.body !== undefined && args.contentType != null) {
        headers[\\"Content-Type\\"] = args.contentType;
    }

    if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
                headers[key] = value;
            }
        }
    }

    try {
        const response = await axios({
            url: args.url,
            params: args.queryParameters,
            method: args.method,
            headers,
            data: args.body,
            validateStatus: () => true,
            transformResponse: (response) => response,
            timeout: args.timeoutMs,
            transitional: {
                clarifyTimeoutError: true,
            },
            withCredentials: args.withCredentials,
            adapter: args.adapter,
            onUploadProgress: args.onUploadProgress,
            maxBodyLength: Infinity,
            maxContentLength: Infinity,
            responseType: args.responseType ?? \\"json\\",
        });

        let body: unknown;
        if (args.responseType === \\"blob\\") {
            body = response.data;
        } else if (response.data != null && response.data.length > 0) {
            try {
                body = JSON.parse(response.data) ?? undefined;
            } catch {
                return {
                    ok: false,
                    error: {
                        reason: \\"non-json\\",
                        statusCode: response.status,
                        rawBody: response.data,
                    },
                };
            }
        }

        if (response.status >= 200 && response.status < 400) {
            return {
                ok: true,
                body: body as R,
            };
        } else {
            return {
                ok: false,
                error: {
                    reason: \\"status-code\\",
                    statusCode: response.status,
                    body,
                },
            };
        }
    } catch (error) {
        if ((error as AxiosError).code === \\"ETIMEDOUT\\") {
            return {
                ok: false,
                error: {
                    reason: \\"timeout\\",
                },
            };
        }

        return {
            ok: false,
            error: {
                reason: \\"unknown\\",
                errorMessage: (error as AxiosError).message,
            },
        };
    }
}

export const fetcher: FetchFunction = fetcherImpl;
",
                "name": "Fetcher.ts",
                "type": "file",
              },
              Object {
                "contents": "export type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);

export const Supplier = {
    get: async <T>(supplier: Supplier<T>): Promise<T> => {
        if (typeof supplier === \\"function\\") {
            return (supplier as () => T)();
        } else {
            return supplier;
        }
    },
};
",
                "name": "Supplier.ts",
                "type": "file",
              },
              Object {
                "contents": "export type { APIResponse } from \\"./APIResponse\\";
export { fetcher } from \\"./Fetcher\\";
export type { Fetcher, FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * from \\"./fetcher\\";
export * from \\"./auth\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export const FernApiEnvironment = {
    Prod: \\"prod.trace.com\\",
    /**
     * i'm staging
     */
    Staging: \\"staging.trace.com\\",
} as const;

export type FernApiEnvironment = typeof FernApiEnvironment.Prod | typeof FernApiEnvironment.Staging;
",
        "name": "environments.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;

    constructor({ message, statusCode, body }: { message?: string; statusCode?: number; body?: unknown }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }

        if (body !== undefined) {
            this.body = body;
        }
    }
}

function buildMessage({
    message,
    statusCode,
    body,
}: {
    message: string | undefined;
    statusCode: number | undefined;
    body: unknown | undefined;
}): string {
    let lines: string[] = [];
    if (message != null) {
        lines.push(message);
    }

    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }

    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }

    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.ts",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
",
            "name": "FernApiTimeoutError.ts",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export * as FernApi from \\"./api\\";
export { FernApiClient } from \\"./Client\\";
export { FernApiEnvironment } from \\"./environments\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.ts",
        "type": "file",
      },
    ],
    "name": "src",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"extendedDiagnostics\\": true,
        \\"strict\\": true,
        \\"target\\": \\"ES6\\",
        \\"module\\": \\"CommonJS\\",
        \\"moduleResolution\\": \\"node\\",
        \\"esModuleInterop\\": true,
        \\"skipLibCheck\\": true,
        \\"declaration\\": true,
        \\"noUnusedParameters\\": true,
        \\"outDir\\": \\"dist\\",
        \\"rootDir\\": \\"src\\",
        \\"baseUrl\\": \\"src\\"
    },
    \\"include\\": [
        \\"src\\"
    ],
    \\"exclude\\": []
}",
    "name": "tsconfig.json",
    "type": "file",
  },
]
`;
