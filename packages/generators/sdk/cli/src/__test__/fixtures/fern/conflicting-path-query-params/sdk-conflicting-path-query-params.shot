// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runGenerator conflicting-path-query-params 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": "name: ci

on: [push]

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Compile
        run: yarn && yarn build
  
  publish:
    needs: [ compile ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken \${NPM_TOKEN}
          npm publish --access public
        env:
          NPM_TOKEN: \${{ secrets.NPM_TOKEN }}",
            "name": "ci.yml",
            "type": "file",
          },
        ],
        "name": "workflows",
        "type": "directory",
      },
    ],
    "name": ".github",
    "type": "directory",
  },
  Object {
    "contents": "node_modules
.DS_Store
/dist
/Client.d.ts
/Client.js
/index.d.ts
/index.js
/api
/core
/errors
/serialization",
    "name": ".gitignore",
    "type": "file",
  },
  Object {
    "contents": "node_modules
src
.gitignore
.github
.fernignore
.prettierrc.yml
tsconfig.json
yarn.lock",
    "name": ".npmignore",
    "type": "file",
  },
  Object {
    "contents": "tabWidth: 4
printWidth: 120
",
    "name": ".prettierrc.yml",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from \\"./core\\";
import { Service } from \\"./api/resources/service/client/Client\\";
export declare namespace FernApiClient {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class FernApiClient {
    protected readonly _options: FernApiClient.Options;
    constructor(_options: FernApiClient.Options);
    protected _service: Service | undefined;
    get service(): Service;
}
",
        "name": "Client.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiClient = void 0;
const Client_1 = require(\\"./api/resources/service/client/Client\\");
class FernApiClient {
    constructor(_options) {
        this._options = _options;
    }
    get service() {
        var _a;
        return ((_a = this._service) !== null && _a !== void 0 ? _a : (this._service = new Client_1.Service(this._options)));
    }
}
exports.FernApiClient = FernApiClient;
",
        "name": "Client.js",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./resources\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as service from \\"./service\\";
export * from \\"./service/client/requests\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.service = void 0;
exports.service = __importStar(require(\\"./service\\"));
__exportStar(require(\\"./service/client/requests\\"), exports);
",
                "name": "index.js",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
export declare namespace Service {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Service {
    protected readonly _options: Service.Options;
    constructor(_options: Service.Options);
    post(id: string, request: FernApi.MyRequest, _requestOptions?: Service.RequestOptions): Promise<void>;
}
",
                        "name": "Client.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Service = void 0;
const core = __importStar(require(\\"../../../../core\\"));
const url_search_params_1 = __importDefault(require(\\"@ungap/url-search-params\\"));
const url_join_1 = __importDefault(require(\\"url-join\\"));
const errors = __importStar(require(\\"../../../../errors\\"));
class Service {
    constructor(_options) {
        this._options = _options;
    }
    post(id, request, _requestOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            const { id: id_ } = request;
            const _queryParams = new url_search_params_1.default();
            _queryParams.append(\\"id\\", id_);
            const _response = yield core.fetcher({
                url: (0, url_join_1.default)(yield core.Supplier.get(this._options.environment), \`/\${id}\`),
                method: \\"POST\\",
                headers: {
                    \\"X-Fern-Language\\": \\"JavaScript\\",
                    \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                    \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
                },
                contentType: \\"application/json\\",
                queryParameters: _queryParams,
                timeoutMs: (_requestOptions === null || _requestOptions === void 0 ? void 0 : _requestOptions.timeoutInSeconds) !== undefined ? _requestOptions.timeoutInSeconds * 1000 : 60000,
            });
            if (_response.ok) {
                return;
            }
            if (_response.error.reason === \\"status-code\\") {
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.body,
                });
            }
            switch (_response.error.reason) {
                case \\"non-json\\":
                    throw new errors.FernApiError({
                        statusCode: _response.error.statusCode,
                        body: _response.error.rawBody,
                    });
                case \\"timeout\\":
                    throw new errors.FernApiTimeoutError();
                case \\"unknown\\":
                    throw new errors.FernApiError({
                        message: _response.error.errorMessage,
                    });
            }
        });
    }
}
exports.Service = Service;
",
                        "name": "Client.js",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.d.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./requests\\"), exports);
",
                        "name": "index.js",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export interface MyRequest {
    id: string;
}
",
                            "name": "MyRequest.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "MyRequest.js",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { MyRequest } from \\"./MyRequest\\";
",
                            "name": "index.d.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                            "name": "index.js",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.d.ts",
                    "type": "file",
                  },
                  Object {
                    "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./client\\"), exports);
",
                    "name": "index.js",
                    "type": "file",
                  },
                ],
                "name": "service",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export declare type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;
export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}
export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
",
                "name": "APIResponse.js",
                "type": "file",
              },
              Object {
                "contents": "import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import { AxiosAdapter, AxiosProgressEvent } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";
export declare type FetchFunction = <R = unknown>(args: Fetcher.Args) => Promise<APIResponse<R, Fetcher.Error>>;
export declare namespace Fetcher {
    interface Args {
        url: string;
        method: string;
        contentType?: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
        responseType?: \\"json\\" | \\"blob\\";
        adapter?: AxiosAdapter;
        onUploadProgress?: (event: AxiosProgressEvent) => void;
    }
    type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;
    interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }
    interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }
    interface TimeoutError {
        reason: \\"timeout\\";
    }
    interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}
export declare const fetcher: FetchFunction;
",
                "name": "Fetcher.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.fetcher = void 0;
const axios_1 = __importDefault(require(\\"axios\\"));
function fetcherImpl(args) {
    var _a, _b;
    return __awaiter(this, void 0, void 0, function* () {
        const headers = {};
        if (args.body !== undefined && args.contentType != null) {
            headers[\\"Content-Type\\"] = args.contentType;
        }
        if (args.headers != null) {
            for (const [key, value] of Object.entries(args.headers)) {
                if (value != null) {
                    headers[key] = value;
                }
            }
        }
        try {
            const response = yield (0, axios_1.default)({
                url: args.url,
                params: args.queryParameters,
                method: args.method,
                headers,
                data: args.body,
                validateStatus: () => true,
                transformResponse: (response) => response,
                timeout: args.timeoutMs,
                transitional: {
                    clarifyTimeoutError: true,
                },
                withCredentials: args.withCredentials,
                adapter: args.adapter,
                onUploadProgress: args.onUploadProgress,
                maxBodyLength: Infinity,
                maxContentLength: Infinity,
                responseType: (_a = args.responseType) !== null && _a !== void 0 ? _a : \\"json\\",
            });
            let body;
            if (args.responseType === \\"blob\\") {
                body = response.data;
            }
            else if (response.data != null && response.data.length > 0) {
                try {
                    body = (_b = JSON.parse(response.data)) !== null && _b !== void 0 ? _b : undefined;
                }
                catch (_c) {
                    return {
                        ok: false,
                        error: {
                            reason: \\"non-json\\",
                            statusCode: response.status,
                            rawBody: response.data,
                        },
                    };
                }
            }
            if (response.status >= 200 && response.status < 400) {
                return {
                    ok: true,
                    body: body,
                };
            }
            else {
                return {
                    ok: false,
                    error: {
                        reason: \\"status-code\\",
                        statusCode: response.status,
                        body,
                    },
                };
            }
        }
        catch (error) {
            if (error.code === \\"ETIMEDOUT\\") {
                return {
                    ok: false,
                    error: {
                        reason: \\"timeout\\",
                    },
                };
            }
            return {
                ok: false,
                error: {
                    reason: \\"unknown\\",
                    errorMessage: error.message,
                },
            };
        }
    });
}
exports.fetcher = fetcherImpl;
",
                "name": "Fetcher.js",
                "type": "file",
              },
              Object {
                "contents": "export declare type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);
export declare const Supplier: {
    get: <T>(supplier: Supplier<T>) => Promise<T>;
};
",
                "name": "Supplier.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = void 0;
exports.Supplier = {
    get: (supplier) => __awaiter(void 0, void 0, void 0, function* () {
        if (typeof supplier === \\"function\\") {
            return supplier();
        }
        else {
            return supplier;
        }
    }),
};
",
                "name": "Supplier.js",
                "type": "file",
              },
              Object {
                "contents": "export type { APIResponse } from \\"./APIResponse\\";
export { fetcher } from \\"./Fetcher\\";
export type { Fetcher, FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.d.ts",
                "type": "file",
              },
              Object {
                "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.Supplier = exports.fetcher = void 0;
var Fetcher_1 = require(\\"./Fetcher\\");
Object.defineProperty(exports, \\"fetcher\\", { enumerable: true, get: function () { return Fetcher_1.fetcher; } });
var Supplier_1 = require(\\"./Supplier\\");
Object.defineProperty(exports, \\"Supplier\\", { enumerable: true, get: function () { return Supplier_1.Supplier; } });
",
                "name": "index.js",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * from \\"./fetcher\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== \\"default\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
__exportStar(require(\\"./fetcher\\"), exports);
",
            "name": "index.js",
            "type": "file",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;
    constructor({ message, statusCode, body }: {
        message?: string;
        statusCode?: number;
        body?: unknown;
    });
}
",
            "name": "FernApiError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiError = void 0;
class FernApiError extends Error {
    constructor({ message, statusCode, body }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }
        if (body !== undefined) {
            this.body = body;
        }
    }
}
exports.FernApiError = FernApiError;
function buildMessage({ message, statusCode, body, }) {
    let lines = [];
    if (message != null) {
        lines.push(message);
    }
    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }
    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }
    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.js",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare class FernApiTimeoutError extends Error {
    constructor();
}
",
            "name": "FernApiTimeoutError.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = void 0;
class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
exports.FernApiTimeoutError = FernApiTimeoutError;
",
            "name": "FernApiTimeoutError.js",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.d.ts",
            "type": "file",
          },
          Object {
            "contents": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = void 0;
var FernApiError_1 = require(\\"./FernApiError\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return FernApiError_1.FernApiError; } });
var FernApiTimeoutError_1 = require(\\"./FernApiTimeoutError\\");
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return FernApiTimeoutError_1.FernApiTimeoutError; } });
",
            "name": "index.js",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export { FernApiClient } from \\"./Client\\";
export * as FernApi from \\"./api\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.d.ts",
        "type": "file",
      },
      Object {
        "contents": "\\"use strict\\";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || (\\"get\\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, \\"default\\", { enumerable: true, value: v });
}) : function(o, v) {
    o[\\"default\\"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== \\"default\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
exports.FernApiTimeoutError = exports.FernApiError = exports.FernApi = exports.FernApiClient = void 0;
var Client_1 = require(\\"./Client\\");
Object.defineProperty(exports, \\"FernApiClient\\", { enumerable: true, get: function () { return Client_1.FernApiClient; } });
exports.FernApi = __importStar(require(\\"./api\\"));
var errors_1 = require(\\"./errors\\");
Object.defineProperty(exports, \\"FernApiError\\", { enumerable: true, get: function () { return errors_1.FernApiError; } });
Object.defineProperty(exports, \\"FernApiTimeoutError\\", { enumerable: true, get: function () { return errors_1.FernApiTimeoutError; } });
",
        "name": "index.js",
        "type": "file",
      },
    ],
    "name": "dist",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"name\\": \\"@fern/api\\",
    \\"version\\": \\"0.0.1\\",
    \\"repository\\": \\"https://github.com/fern/api}\\",
    \\"main\\": \\"./index.js\\",
    \\"types\\": \\"./index.d.ts\\",
    \\"scripts\\": {
        \\"format\\": \\"prettier --write 'src/**/*.ts'\\",
        \\"build\\": \\"tsc\\",
        \\"prepack\\": \\"cp -rv dist/. .\\"
    },
    \\"dependencies\\": {
        \\"@types/url-join\\": \\"4.0.1\\",
        \\"@ungap/url-search-params\\": \\"0.2.2\\",
        \\"axios\\": \\"1.4.0\\",
        \\"url-join\\": \\"4.0.1\\"
    },
    \\"devDependencies\\": {
        \\"@types/node\\": \\"17.0.33\\",
        \\"prettier\\": \\"2.7.1\\",
        \\"typescript\\": \\"4.6.4\\"
    }
}
",
    "name": "package.json",
    "type": "file",
  },
  Object {
    "contents": Array [
      Object {
        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from \\"./core\\";
import { Service } from \\"./api/resources/service/client/Client\\";

export declare namespace FernApiClient {
    interface Options {
        environment: core.Supplier<string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class FernApiClient {
    constructor(protected readonly _options: FernApiClient.Options) {}

    protected _service: Service | undefined;

    public get service(): Service {
        return (this._service ??= new Service(this._options));
    }
}
",
        "name": "Client.ts",
        "type": "file",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "export * from \\"./resources\\";
",
            "name": "index.ts",
            "type": "file",
          },
          Object {
            "contents": Array [
              Object {
                "contents": "export * as service from \\"./service\\";
export * from \\"./service/client/requests\\";
",
                "name": "index.ts",
                "type": "file",
              },
              Object {
                "contents": Array [
                  Object {
                    "contents": Array [
                      Object {
                        "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from \\"../../../../core\\";
import * as FernApi from \\"../../..\\";
import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import urlJoin from \\"url-join\\";
import * as errors from \\"../../../../errors\\";

export declare namespace Service {
    interface Options {
        environment: core.Supplier<string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}

export class Service {
    constructor(protected readonly _options: Service.Options) {}

    public async post(id: string, request: FernApi.MyRequest, _requestOptions?: Service.RequestOptions): Promise<void> {
        const { id: id_ } = request;
        const _queryParams = new URLSearchParams();
        _queryParams.append(\\"id\\", id_);
        const _response = await core.fetcher({
            url: urlJoin(await core.Supplier.get(this._options.environment), \`/\${id}\`),
            method: \\"POST\\",
            headers: {
                \\"X-Fern-Language\\": \\"JavaScript\\",
                \\"X-Fern-SDK-Name\\": \\"@fern/api\\",
                \\"X-Fern-SDK-Version\\": \\"0.0.1\\",
            },
            contentType: \\"application/json\\",
            queryParameters: _queryParams,
            timeoutMs:
                _requestOptions?.timeoutInSeconds !== undefined ? _requestOptions.timeoutInSeconds * 1000 : 60000,
        });
        if (_response.ok) {
            return;
        }

        if (_response.error.reason === \\"status-code\\") {
            throw new errors.FernApiError({
                statusCode: _response.error.statusCode,
                body: _response.error.body,
            });
        }

        switch (_response.error.reason) {
            case \\"non-json\\":
                throw new errors.FernApiError({
                    statusCode: _response.error.statusCode,
                    body: _response.error.rawBody,
                });
            case \\"timeout\\":
                throw new errors.FernApiTimeoutError();
            case \\"unknown\\":
                throw new errors.FernApiError({
                    message: _response.error.errorMessage,
                });
        }
    }
}
",
                        "name": "Client.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": "export * from \\"./requests\\";
",
                        "name": "index.ts",
                        "type": "file",
                      },
                      Object {
                        "contents": Array [
                          Object {
                            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface MyRequest {
    id: string;
}
",
                            "name": "MyRequest.ts",
                            "type": "file",
                          },
                          Object {
                            "contents": "export { MyRequest } from \\"./MyRequest\\";
",
                            "name": "index.ts",
                            "type": "file",
                          },
                        ],
                        "name": "requests",
                        "type": "directory",
                      },
                    ],
                    "name": "client",
                    "type": "directory",
                  },
                  Object {
                    "contents": "export * from \\"./client\\";
",
                    "name": "index.ts",
                    "type": "file",
                  },
                ],
                "name": "service",
                "type": "directory",
              },
            ],
            "name": "resources",
            "type": "directory",
          },
        ],
        "name": "api",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": "export type APIResponse<Success, Failure> = SuccessfulResponse<Success> | FailedResponse<Failure>;

export interface SuccessfulResponse<T> {
    ok: true;
    body: T;
}

export interface FailedResponse<T> {
    ok: false;
    error: T;
}
",
                "name": "APIResponse.ts",
                "type": "file",
              },
              Object {
                "contents": "import { default as URLSearchParams } from \\"@ungap/url-search-params\\";
import axios, { AxiosAdapter, AxiosError, AxiosProgressEvent } from \\"axios\\";
import { APIResponse } from \\"./APIResponse\\";

export type FetchFunction = <R = unknown>(args: Fetcher.Args) => Promise<APIResponse<R, Fetcher.Error>>;

export declare namespace Fetcher {
    export interface Args {
        url: string;
        method: string;
        contentType?: string;
        headers?: Record<string, string | undefined>;
        queryParameters?: URLSearchParams;
        body?: unknown;
        timeoutMs?: number;
        withCredentials?: boolean;
        responseType?: \\"json\\" | \\"blob\\";
        adapter?: AxiosAdapter;
        onUploadProgress?: (event: AxiosProgressEvent) => void;
    }

    export type Error = FailedStatusCodeError | NonJsonError | TimeoutError | UnknownError;

    export interface FailedStatusCodeError {
        reason: \\"status-code\\";
        statusCode: number;
        body: unknown;
    }

    export interface NonJsonError {
        reason: \\"non-json\\";
        statusCode: number;
        rawBody: string;
    }

    export interface TimeoutError {
        reason: \\"timeout\\";
    }

    export interface UnknownError {
        reason: \\"unknown\\";
        errorMessage: string;
    }
}

async function fetcherImpl<R = unknown>(args: Fetcher.Args): Promise<APIResponse<R, Fetcher.Error>> {
    const headers: Record<string, string> = {};
    if (args.body !== undefined && args.contentType != null) {
        headers[\\"Content-Type\\"] = args.contentType;
    }

    if (args.headers != null) {
        for (const [key, value] of Object.entries(args.headers)) {
            if (value != null) {
                headers[key] = value;
            }
        }
    }

    try {
        const response = await axios({
            url: args.url,
            params: args.queryParameters,
            method: args.method,
            headers,
            data: args.body,
            validateStatus: () => true,
            transformResponse: (response) => response,
            timeout: args.timeoutMs,
            transitional: {
                clarifyTimeoutError: true,
            },
            withCredentials: args.withCredentials,
            adapter: args.adapter,
            onUploadProgress: args.onUploadProgress,
            maxBodyLength: Infinity,
            maxContentLength: Infinity,
            responseType: args.responseType ?? \\"json\\",
        });

        let body: unknown;
        if (args.responseType === \\"blob\\") {
            body = response.data;
        } else if (response.data != null && response.data.length > 0) {
            try {
                body = JSON.parse(response.data) ?? undefined;
            } catch {
                return {
                    ok: false,
                    error: {
                        reason: \\"non-json\\",
                        statusCode: response.status,
                        rawBody: response.data,
                    },
                };
            }
        }

        if (response.status >= 200 && response.status < 400) {
            return {
                ok: true,
                body: body as R,
            };
        } else {
            return {
                ok: false,
                error: {
                    reason: \\"status-code\\",
                    statusCode: response.status,
                    body,
                },
            };
        }
    } catch (error) {
        if ((error as AxiosError).code === \\"ETIMEDOUT\\") {
            return {
                ok: false,
                error: {
                    reason: \\"timeout\\",
                },
            };
        }

        return {
            ok: false,
            error: {
                reason: \\"unknown\\",
                errorMessage: (error as AxiosError).message,
            },
        };
    }
}

export const fetcher: FetchFunction = fetcherImpl;
",
                "name": "Fetcher.ts",
                "type": "file",
              },
              Object {
                "contents": "export type Supplier<T> = T | Promise<T> | (() => T | Promise<T>);

export const Supplier = {
    get: async <T>(supplier: Supplier<T>): Promise<T> => {
        if (typeof supplier === \\"function\\") {
            return (supplier as () => T)();
        } else {
            return supplier;
        }
    },
};
",
                "name": "Supplier.ts",
                "type": "file",
              },
              Object {
                "contents": "export type { APIResponse } from \\"./APIResponse\\";
export { fetcher } from \\"./Fetcher\\";
export type { Fetcher, FetchFunction } from \\"./Fetcher\\";
export { Supplier } from \\"./Supplier\\";
",
                "name": "index.ts",
                "type": "file",
              },
            ],
            "name": "fetcher",
            "type": "directory",
          },
          Object {
            "contents": "export * from \\"./fetcher\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "core",
        "type": "directory",
      },
      Object {
        "contents": Array [
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiError extends Error {
    readonly statusCode?: number;
    readonly body?: unknown;

    constructor({ message, statusCode, body }: { message?: string; statusCode?: number; body?: unknown }) {
        super(buildMessage({ message, statusCode, body }));
        Object.setPrototypeOf(this, FernApiError.prototype);
        if (statusCode != null) {
            this.statusCode = statusCode;
        }

        if (body !== undefined) {
            this.body = body;
        }
    }
}

function buildMessage({
    message,
    statusCode,
    body,
}: {
    message: string | undefined;
    statusCode: number | undefined;
    body: unknown | undefined;
}): string {
    let lines: string[] = [];
    if (message != null) {
        lines.push(message);
    }

    if (statusCode != null) {
        lines.push(\`Status code: \${statusCode.toString()}\`);
    }

    if (body != null) {
        lines.push(\`Body: \${JSON.stringify(body, undefined, 2)}\`);
    }

    return lines.join(\\"\\\\n\\");
}
",
            "name": "FernApiError.ts",
            "type": "file",
          },
          Object {
            "contents": "/**
 * This file was auto-generated by Fern from our API Definition.
 */

export class FernApiTimeoutError extends Error {
    constructor() {
        super(\\"Timeout\\");
        Object.setPrototypeOf(this, FernApiTimeoutError.prototype);
    }
}
",
            "name": "FernApiTimeoutError.ts",
            "type": "file",
          },
          Object {
            "contents": "export { FernApiError } from \\"./FernApiError\\";
export { FernApiTimeoutError } from \\"./FernApiTimeoutError\\";
",
            "name": "index.ts",
            "type": "file",
          },
        ],
        "name": "errors",
        "type": "directory",
      },
      Object {
        "contents": "export { FernApiClient } from \\"./Client\\";
export * as FernApi from \\"./api\\";
export { FernApiError, FernApiTimeoutError } from \\"./errors\\";
",
        "name": "index.ts",
        "type": "file",
      },
    ],
    "name": "src",
    "type": "directory",
  },
  Object {
    "contents": "{
    \\"compilerOptions\\": {
        \\"extendedDiagnostics\\": true,
        \\"strict\\": true,
        \\"target\\": \\"ES6\\",
        \\"module\\": \\"CommonJS\\",
        \\"moduleResolution\\": \\"node\\",
        \\"esModuleInterop\\": true,
        \\"skipLibCheck\\": true,
        \\"declaration\\": true,
        \\"noUnusedParameters\\": true,
        \\"outDir\\": \\"dist\\",
        \\"rootDir\\": \\"src\\",
        \\"baseUrl\\": \\"src\\"
    },
    \\"include\\": [
        \\"src\\"
    ],
    \\"exclude\\": []
}",
    "name": "tsconfig.json",
    "type": "file",
  },
]
`;
